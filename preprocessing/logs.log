2025-06-19 06:24:38,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-19 06:24:38,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-19 06:24:38,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-19 06:24:38,033:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-19 06:24:42,809:INFO:PyCaret ClassificationExperiment
2025-06-19 06:24:42,809:INFO:Logging name: clf-default-name
2025-06-19 06:24:42,809:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-19 06:24:42,810:INFO:version 3.3.2
2025-06-19 06:24:42,810:INFO:Initializing setup()
2025-06-19 06:24:42,810:INFO:self.USI: ddbc
2025-06-19 06:24:42,810:INFO:self._variable_keys: {'X', '_available_plots', 'USI', 'gpu_param', 'y', 'log_plots_param', 'exp_id', 'fold_groups_param', 'logging_param', 'idx', 'target_param', 'X_train', '_ml_usecase', 'data', 'pipeline', 'seed', 'fix_imbalance', 'fold_shuffle_param', 'X_test', 'y_test', 'exp_name_log', 'html_param', 'gpu_n_jobs_param', 'y_train', 'n_jobs_param', 'memory', 'fold_generator', 'is_multiclass'}
2025-06-19 06:24:42,810:INFO:Checking environment
2025-06-19 06:24:42,810:INFO:python_version: 3.9.21
2025-06-19 06:24:42,810:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-19 06:24:42,810:INFO:machine: AMD64
2025-06-19 06:24:42,810:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-19 06:24:42,810:INFO:Memory: svmem(total=25372119040, available=10351906816, percent=59.2, used=15020212224, free=10351906816)
2025-06-19 06:24:42,810:INFO:Physical Core: 10
2025-06-19 06:24:42,810:INFO:Logical Core: 16
2025-06-19 06:24:42,810:INFO:Checking libraries
2025-06-19 06:24:42,810:INFO:System:
2025-06-19 06:24:42,810:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-19 06:24:42,810:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-19 06:24:42,810:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-19 06:24:42,810:INFO:PyCaret required dependencies:
2025-06-19 06:24:44,147:INFO:                 pip: 24.2
2025-06-19 06:24:44,147:INFO:          setuptools: 75.1.0
2025-06-19 06:24:44,147:INFO:             pycaret: 3.3.2
2025-06-19 06:24:44,147:INFO:             IPython: 8.12.0
2025-06-19 06:24:44,147:INFO:          ipywidgets: 8.1.5
2025-06-19 06:24:44,147:INFO:                tqdm: 4.67.1
2025-06-19 06:24:44,147:INFO:               numpy: 1.26.4
2025-06-19 06:24:44,147:INFO:              pandas: 2.1.4
2025-06-19 06:24:44,147:INFO:              jinja2: 3.1.5
2025-06-19 06:24:44,147:INFO:               scipy: 1.11.4
2025-06-19 06:24:44,147:INFO:              joblib: 1.3.2
2025-06-19 06:24:44,147:INFO:             sklearn: 1.4.2
2025-06-19 06:24:44,147:INFO:                pyod: 2.0.3
2025-06-19 06:24:44,147:INFO:            imblearn: 0.12.4
2025-06-19 06:24:44,147:INFO:   category_encoders: 2.6.4
2025-06-19 06:24:44,147:INFO:            lightgbm: 4.6.0
2025-06-19 06:24:44,147:INFO:               numba: 0.60.0
2025-06-19 06:24:44,147:INFO:            requests: 2.32.3
2025-06-19 06:24:44,147:INFO:          matplotlib: 3.7.5
2025-06-19 06:24:44,147:INFO:          scikitplot: 0.3.7
2025-06-19 06:24:44,147:INFO:         yellowbrick: 1.5
2025-06-19 06:24:44,147:INFO:              plotly: 5.24.1
2025-06-19 06:24:44,147:INFO:    plotly-resampler: Not installed
2025-06-19 06:24:44,147:INFO:             kaleido: 0.2.1
2025-06-19 06:24:44,148:INFO:           schemdraw: 0.15
2025-06-19 06:24:44,148:INFO:         statsmodels: 0.14.4
2025-06-19 06:24:44,148:INFO:              sktime: 0.26.0
2025-06-19 06:24:44,148:INFO:               tbats: 1.1.3
2025-06-19 06:24:44,148:INFO:            pmdarima: 2.0.4
2025-06-19 06:24:44,148:INFO:              psutil: 5.9.0
2025-06-19 06:24:44,148:INFO:          markupsafe: 2.1.5
2025-06-19 06:24:44,148:INFO:             pickle5: Not installed
2025-06-19 06:24:44,148:INFO:         cloudpickle: 2.2.1
2025-06-19 06:24:44,148:INFO:         deprecation: 2.1.0
2025-06-19 06:24:44,148:INFO:              xxhash: 3.5.0
2025-06-19 06:24:44,148:INFO:           wurlitzer: Not installed
2025-06-19 06:24:44,148:INFO:PyCaret optional dependencies:
2025-06-19 06:24:44,803:INFO:                shap: 0.44.1
2025-06-19 06:24:44,803:INFO:           interpret: 0.6.10
2025-06-19 06:24:44,803:INFO:                umap: 0.5.7
2025-06-19 06:24:44,803:INFO:     ydata_profiling: 4.16.1
2025-06-19 06:24:44,804:INFO:  explainerdashboard: 0.4.8
2025-06-19 06:24:44,804:INFO:             autoviz: Not installed
2025-06-19 06:24:44,804:INFO:           fairlearn: 0.7.0
2025-06-19 06:24:44,804:INFO:          deepchecks: Not installed
2025-06-19 06:24:44,804:INFO:             xgboost: 2.1.4
2025-06-19 06:24:44,804:INFO:            catboost: 1.2.8
2025-06-19 06:24:44,804:INFO:              kmodes: 0.12.2
2025-06-19 06:24:44,804:INFO:             mlxtend: 0.23.4
2025-06-19 06:24:44,804:INFO:       statsforecast: 1.5.0
2025-06-19 06:24:44,804:INFO:        tune_sklearn: Not installed
2025-06-19 06:24:44,804:INFO:                 ray: Not installed
2025-06-19 06:24:44,804:INFO:            hyperopt: 0.2.7
2025-06-19 06:24:44,804:INFO:              optuna: 4.3.0
2025-06-19 06:24:44,804:INFO:               skopt: 0.10.2
2025-06-19 06:24:44,804:INFO:              mlflow: 2.22.0
2025-06-19 06:24:44,804:INFO:              gradio: Not installed
2025-06-19 06:24:44,804:INFO:             fastapi: 0.115.7
2025-06-19 06:24:44,804:INFO:             uvicorn: 0.34.0
2025-06-19 06:24:44,804:INFO:              m2cgen: 0.10.0
2025-06-19 06:24:44,804:INFO:           evidently: 0.4.40
2025-06-19 06:24:44,804:INFO:               fugue: 0.8.7
2025-06-19 06:24:44,804:INFO:           streamlit: Not installed
2025-06-19 06:24:44,804:INFO:             prophet: 1.1.6
2025-06-19 06:24:44,804:INFO:None
2025-06-19 06:24:44,804:INFO:Set up data.
2025-06-19 06:24:44,809:INFO:Set up folding strategy.
2025-06-19 06:24:44,809:INFO:Set up train/test split.
2025-06-19 06:24:44,815:INFO:Set up index.
2025-06-19 06:24:44,816:INFO:Assigning column types.
2025-06-19 06:24:44,818:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-19 06:24:44,850:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-19 06:24:44,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:24:44,880:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:44,881:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,025:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-19 06:24:45,025:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:24:45,043:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,045:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,046:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-19 06:24:45,075:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:24:45,095:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,096:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,128:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:24:45,146:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,149:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,149:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-19 06:24:45,199:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,200:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,249:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,250:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,252:INFO:Preparing preprocessing pipeline...
2025-06-19 06:24:45,255:INFO:Set up label encoding.
2025-06-19 06:24:45,255:INFO:Set up simple imputation.
2025-06-19 06:24:45,257:INFO:Set up encoding of ordinal features.
2025-06-19 06:24:45,260:INFO:Set up encoding of categorical features.
2025-06-19 06:24:45,260:INFO:Set up feature normalization.
2025-06-19 06:24:45,327:INFO:Finished creating preprocessing pipeline.
2025-06-19 06:24:45,343:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_spent_Alone',
                                             'Social_event_attendance',
                                             'Going_outside',
                                             'Friends_circle_size',
                                             'Post_frequency'],...
                                                               mapping=[{'col': 'Stage_fear',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'Drained_after_socializing',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-19 06:24:45,343:INFO:Creating final display dataframe.
2025-06-19 06:24:45,494:INFO:Setup _display_container:                     Description                       Value
0                    Session id                          42
1                        Target                 Personality
2                   Target type                      Binary
3                Target mapping  Extrovert: 0, Introvert: 1
4           Original data shape                   (2900, 8)
5        Transformed data shape                   (2900, 8)
6   Transformed train set shape                   (2320, 8)
7    Transformed test set shape                    (580, 8)
8              Numeric features                           5
9          Categorical features                           2
10     Rows with missing values                        4.3%
11                   Preprocess                        True
12              Imputation type                      simple
13           Numeric imputation                        mean
14       Categorical imputation                        mode
15     Maximum one-hot encoding                          25
16              Encoding method                        None
17                    Normalize                        True
18             Normalize method                      zscore
19               Fold Generator             StratifiedKFold
20                  Fold Number                          10
21                     CPU Jobs                          -1
22                      Use GPU                       False
23               Log Experiment                       False
24              Experiment Name            clf-default-name
25                          USI                        ddbc
2025-06-19 06:24:45,543:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,545:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,595:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:24:45,597:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:24:45,598:INFO:setup() successfully completed in 2.8s...............
2025-06-19 06:24:45,598:INFO:Initializing compare_models()
2025-06-19 06:24:45,598:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-19 06:24:45,598:INFO:Checking exceptions
2025-06-19 06:24:45,601:INFO:Preparing display monitor
2025-06-19 06:24:45,636:INFO:Initializing Logistic Regression
2025-06-19 06:24:45,636:INFO:Total runtime is 0.0 minutes
2025-06-19 06:24:45,643:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:45,644:INFO:Initializing create_model()
2025-06-19 06:24:45,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:45,644:INFO:Checking exceptions
2025-06-19 06:24:45,644:INFO:Importing libraries
2025-06-19 06:24:45,644:INFO:Copying training dataset
2025-06-19 06:24:45,650:INFO:Defining folds
2025-06-19 06:24:45,650:INFO:Declaring metric variables
2025-06-19 06:24:45,657:INFO:Importing untrained model
2025-06-19 06:24:45,662:INFO:Logistic Regression Imported successfully
2025-06-19 06:24:45,674:INFO:Starting cross validation
2025-06-19 06:24:45,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:52,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,447:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,486:INFO:Calculating mean and std
2025-06-19 06:24:52,489:INFO:Creating metrics dataframe
2025-06-19 06:24:52,492:INFO:Uploading results into container
2025-06-19 06:24:52,493:INFO:Uploading model into container now
2025-06-19 06:24:52,493:INFO:_master_model_container: 1
2025-06-19 06:24:52,494:INFO:_display_container: 2
2025-06-19 06:24:52,494:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-19 06:24:52,494:INFO:create_model() successfully completed......................................
2025-06-19 06:24:52,647:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:52,647:INFO:Creating metrics dataframe
2025-06-19 06:24:52,651:INFO:Initializing K Neighbors Classifier
2025-06-19 06:24:52,651:INFO:Total runtime is 0.11692496538162231 minutes
2025-06-19 06:24:52,655:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:52,655:INFO:Initializing create_model()
2025-06-19 06:24:52,656:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:52,656:INFO:Checking exceptions
2025-06-19 06:24:52,656:INFO:Importing libraries
2025-06-19 06:24:52,656:INFO:Copying training dataset
2025-06-19 06:24:52,659:INFO:Defining folds
2025-06-19 06:24:52,659:INFO:Declaring metric variables
2025-06-19 06:24:52,664:INFO:Importing untrained model
2025-06-19 06:24:52,669:INFO:K Neighbors Classifier Imported successfully
2025-06-19 06:24:52,676:INFO:Starting cross validation
2025-06-19 06:24:52,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:52,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,868:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,869:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,873:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:52,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,748:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,748:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,749:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,751:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,751:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,752:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:56,817:INFO:Calculating mean and std
2025-06-19 06:24:56,818:INFO:Creating metrics dataframe
2025-06-19 06:24:56,821:INFO:Uploading results into container
2025-06-19 06:24:56,822:INFO:Uploading model into container now
2025-06-19 06:24:56,822:INFO:_master_model_container: 2
2025-06-19 06:24:56,822:INFO:_display_container: 2
2025-06-19 06:24:56,824:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-19 06:24:56,824:INFO:create_model() successfully completed......................................
2025-06-19 06:24:56,936:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:56,936:INFO:Creating metrics dataframe
2025-06-19 06:24:56,943:INFO:Initializing Naive Bayes
2025-06-19 06:24:56,943:INFO:Total runtime is 0.18844838539759318 minutes
2025-06-19 06:24:56,947:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:56,948:INFO:Initializing create_model()
2025-06-19 06:24:56,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:56,948:INFO:Checking exceptions
2025-06-19 06:24:56,948:INFO:Importing libraries
2025-06-19 06:24:56,948:INFO:Copying training dataset
2025-06-19 06:24:56,951:INFO:Defining folds
2025-06-19 06:24:56,952:INFO:Declaring metric variables
2025-06-19 06:24:56,956:INFO:Importing untrained model
2025-06-19 06:24:56,961:INFO:Naive Bayes Imported successfully
2025-06-19 06:24:56,969:INFO:Starting cross validation
2025-06-19 06:24:56,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:57,056:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,059:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,060:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,072:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,077:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,077:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,077:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,077:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,083:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,097:INFO:Calculating mean and std
2025-06-19 06:24:57,099:INFO:Creating metrics dataframe
2025-06-19 06:24:57,100:INFO:Uploading results into container
2025-06-19 06:24:57,101:INFO:Uploading model into container now
2025-06-19 06:24:57,101:INFO:_master_model_container: 3
2025-06-19 06:24:57,101:INFO:_display_container: 2
2025-06-19 06:24:57,101:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-19 06:24:57,101:INFO:create_model() successfully completed......................................
2025-06-19 06:24:57,203:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:57,203:INFO:Creating metrics dataframe
2025-06-19 06:24:57,210:INFO:Initializing Decision Tree Classifier
2025-06-19 06:24:57,210:INFO:Total runtime is 0.19290613333384196 minutes
2025-06-19 06:24:57,214:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:57,215:INFO:Initializing create_model()
2025-06-19 06:24:57,215:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:57,215:INFO:Checking exceptions
2025-06-19 06:24:57,215:INFO:Importing libraries
2025-06-19 06:24:57,215:INFO:Copying training dataset
2025-06-19 06:24:57,219:INFO:Defining folds
2025-06-19 06:24:57,219:INFO:Declaring metric variables
2025-06-19 06:24:57,226:INFO:Importing untrained model
2025-06-19 06:24:57,230:INFO:Decision Tree Classifier Imported successfully
2025-06-19 06:24:57,238:INFO:Starting cross validation
2025-06-19 06:24:57,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:57,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,345:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,350:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,351:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,351:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,355:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,358:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,376:INFO:Calculating mean and std
2025-06-19 06:24:57,377:INFO:Creating metrics dataframe
2025-06-19 06:24:57,379:INFO:Uploading results into container
2025-06-19 06:24:57,379:INFO:Uploading model into container now
2025-06-19 06:24:57,380:INFO:_master_model_container: 4
2025-06-19 06:24:57,380:INFO:_display_container: 2
2025-06-19 06:24:57,380:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-19 06:24:57,380:INFO:create_model() successfully completed......................................
2025-06-19 06:24:57,487:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:57,487:INFO:Creating metrics dataframe
2025-06-19 06:24:57,494:INFO:Initializing SVM - Linear Kernel
2025-06-19 06:24:57,494:INFO:Total runtime is 0.19763619502385457 minutes
2025-06-19 06:24:57,498:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:57,498:INFO:Initializing create_model()
2025-06-19 06:24:57,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:57,498:INFO:Checking exceptions
2025-06-19 06:24:57,498:INFO:Importing libraries
2025-06-19 06:24:57,498:INFO:Copying training dataset
2025-06-19 06:24:57,502:INFO:Defining folds
2025-06-19 06:24:57,502:INFO:Declaring metric variables
2025-06-19 06:24:57,508:INFO:Importing untrained model
2025-06-19 06:24:57,513:INFO:SVM - Linear Kernel Imported successfully
2025-06-19 06:24:57,522:INFO:Starting cross validation
2025-06-19 06:24:57,523:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:57,637:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,639:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,641:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,643:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,646:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,647:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,649:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,649:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,650:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,652:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,655:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,655:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,656:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,658:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,659:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,660:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,660:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,661:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,663:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,665:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,669:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,669:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,671:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,674:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,688:INFO:Calculating mean and std
2025-06-19 06:24:57,689:INFO:Creating metrics dataframe
2025-06-19 06:24:57,691:INFO:Uploading results into container
2025-06-19 06:24:57,691:INFO:Uploading model into container now
2025-06-19 06:24:57,692:INFO:_master_model_container: 5
2025-06-19 06:24:57,692:INFO:_display_container: 2
2025-06-19 06:24:57,692:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-19 06:24:57,693:INFO:create_model() successfully completed......................................
2025-06-19 06:24:57,794:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:57,794:INFO:Creating metrics dataframe
2025-06-19 06:24:57,801:INFO:Initializing Ridge Classifier
2025-06-19 06:24:57,801:INFO:Total runtime is 0.2027527650197347 minutes
2025-06-19 06:24:57,806:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:57,806:INFO:Initializing create_model()
2025-06-19 06:24:57,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:57,806:INFO:Checking exceptions
2025-06-19 06:24:57,806:INFO:Importing libraries
2025-06-19 06:24:57,807:INFO:Copying training dataset
2025-06-19 06:24:57,810:INFO:Defining folds
2025-06-19 06:24:57,810:INFO:Declaring metric variables
2025-06-19 06:24:57,816:INFO:Importing untrained model
2025-06-19 06:24:57,823:INFO:Ridge Classifier Imported successfully
2025-06-19 06:24:57,836:INFO:Starting cross validation
2025-06-19 06:24:57,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:57,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,934:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,934:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,943:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,944:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,947:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,947:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,952:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,957:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:57,970:INFO:Calculating mean and std
2025-06-19 06:24:57,971:INFO:Creating metrics dataframe
2025-06-19 06:24:57,973:INFO:Uploading results into container
2025-06-19 06:24:57,973:INFO:Uploading model into container now
2025-06-19 06:24:57,974:INFO:_master_model_container: 6
2025-06-19 06:24:57,974:INFO:_display_container: 2
2025-06-19 06:24:57,974:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-19 06:24:57,974:INFO:create_model() successfully completed......................................
2025-06-19 06:24:58,079:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:58,079:INFO:Creating metrics dataframe
2025-06-19 06:24:58,084:INFO:Initializing Random Forest Classifier
2025-06-19 06:24:58,084:INFO:Total runtime is 0.20747474829355875 minutes
2025-06-19 06:24:58,088:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:58,088:INFO:Initializing create_model()
2025-06-19 06:24:58,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:58,088:INFO:Checking exceptions
2025-06-19 06:24:58,089:INFO:Importing libraries
2025-06-19 06:24:58,089:INFO:Copying training dataset
2025-06-19 06:24:58,092:INFO:Defining folds
2025-06-19 06:24:58,093:INFO:Declaring metric variables
2025-06-19 06:24:58,098:INFO:Importing untrained model
2025-06-19 06:24:58,103:INFO:Random Forest Classifier Imported successfully
2025-06-19 06:24:58,112:INFO:Starting cross validation
2025-06-19 06:24:58,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:58,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,540:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,541:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,541:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,611:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,614:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,616:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,622:INFO:Calculating mean and std
2025-06-19 06:24:58,623:INFO:Creating metrics dataframe
2025-06-19 06:24:58,624:INFO:Uploading results into container
2025-06-19 06:24:58,625:INFO:Uploading model into container now
2025-06-19 06:24:58,625:INFO:_master_model_container: 7
2025-06-19 06:24:58,625:INFO:_display_container: 2
2025-06-19 06:24:58,626:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-19 06:24:58,626:INFO:create_model() successfully completed......................................
2025-06-19 06:24:58,728:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:58,728:INFO:Creating metrics dataframe
2025-06-19 06:24:58,734:INFO:Initializing Quadratic Discriminant Analysis
2025-06-19 06:24:58,734:INFO:Total runtime is 0.21831341981887817 minutes
2025-06-19 06:24:58,739:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:58,739:INFO:Initializing create_model()
2025-06-19 06:24:58,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:58,739:INFO:Checking exceptions
2025-06-19 06:24:58,739:INFO:Importing libraries
2025-06-19 06:24:58,739:INFO:Copying training dataset
2025-06-19 06:24:58,743:INFO:Defining folds
2025-06-19 06:24:58,744:INFO:Declaring metric variables
2025-06-19 06:24:58,748:INFO:Importing untrained model
2025-06-19 06:24:58,753:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-19 06:24:58,762:INFO:Starting cross validation
2025-06-19 06:24:58,763:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:58,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,829:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,829:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:24:58,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,859:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,860:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,865:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,879:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,879:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,882:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,882:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,884:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:58,904:INFO:Calculating mean and std
2025-06-19 06:24:58,905:INFO:Creating metrics dataframe
2025-06-19 06:24:58,907:INFO:Uploading results into container
2025-06-19 06:24:58,907:INFO:Uploading model into container now
2025-06-19 06:24:58,907:INFO:_master_model_container: 8
2025-06-19 06:24:58,907:INFO:_display_container: 2
2025-06-19 06:24:58,908:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-19 06:24:58,908:INFO:create_model() successfully completed......................................
2025-06-19 06:24:59,013:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:59,013:INFO:Creating metrics dataframe
2025-06-19 06:24:59,020:INFO:Initializing Ada Boost Classifier
2025-06-19 06:24:59,020:INFO:Total runtime is 0.2230728507041931 minutes
2025-06-19 06:24:59,025:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:59,025:INFO:Initializing create_model()
2025-06-19 06:24:59,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:59,025:INFO:Checking exceptions
2025-06-19 06:24:59,026:INFO:Importing libraries
2025-06-19 06:24:59,026:INFO:Copying training dataset
2025-06-19 06:24:59,029:INFO:Defining folds
2025-06-19 06:24:59,030:INFO:Declaring metric variables
2025-06-19 06:24:59,034:INFO:Importing untrained model
2025-06-19 06:24:59,045:INFO:Ada Boost Classifier Imported successfully
2025-06-19 06:24:59,061:INFO:Starting cross validation
2025-06-19 06:24:59,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:59,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:24:59,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,319:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,321:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,322:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,328:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,329:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,329:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,334:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,336:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,341:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,343:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,357:INFO:Calculating mean and std
2025-06-19 06:24:59,359:INFO:Creating metrics dataframe
2025-06-19 06:24:59,360:INFO:Uploading results into container
2025-06-19 06:24:59,361:INFO:Uploading model into container now
2025-06-19 06:24:59,361:INFO:_master_model_container: 9
2025-06-19 06:24:59,361:INFO:_display_container: 2
2025-06-19 06:24:59,361:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-19 06:24:59,361:INFO:create_model() successfully completed......................................
2025-06-19 06:24:59,462:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:59,462:INFO:Creating metrics dataframe
2025-06-19 06:24:59,468:INFO:Initializing Gradient Boosting Classifier
2025-06-19 06:24:59,468:INFO:Total runtime is 0.23054825862248737 minutes
2025-06-19 06:24:59,473:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:59,474:INFO:Initializing create_model()
2025-06-19 06:24:59,474:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:59,474:INFO:Checking exceptions
2025-06-19 06:24:59,474:INFO:Importing libraries
2025-06-19 06:24:59,474:INFO:Copying training dataset
2025-06-19 06:24:59,477:INFO:Defining folds
2025-06-19 06:24:59,477:INFO:Declaring metric variables
2025-06-19 06:24:59,483:INFO:Importing untrained model
2025-06-19 06:24:59,487:INFO:Gradient Boosting Classifier Imported successfully
2025-06-19 06:24:59,496:INFO:Starting cross validation
2025-06-19 06:24:59,497:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:24:59,809:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,819:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,819:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,822:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,829:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,831:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,832:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,833:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,836:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,841:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,845:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:24:59,863:INFO:Calculating mean and std
2025-06-19 06:24:59,864:INFO:Creating metrics dataframe
2025-06-19 06:24:59,866:INFO:Uploading results into container
2025-06-19 06:24:59,866:INFO:Uploading model into container now
2025-06-19 06:24:59,866:INFO:_master_model_container: 10
2025-06-19 06:24:59,867:INFO:_display_container: 2
2025-06-19 06:24:59,867:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-19 06:24:59,867:INFO:create_model() successfully completed......................................
2025-06-19 06:24:59,974:INFO:SubProcess create_model() end ==================================
2025-06-19 06:24:59,974:INFO:Creating metrics dataframe
2025-06-19 06:24:59,980:INFO:Initializing Linear Discriminant Analysis
2025-06-19 06:24:59,981:INFO:Total runtime is 0.23909235397974649 minutes
2025-06-19 06:24:59,986:INFO:SubProcess create_model() called ==================================
2025-06-19 06:24:59,986:INFO:Initializing create_model()
2025-06-19 06:24:59,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:24:59,986:INFO:Checking exceptions
2025-06-19 06:24:59,986:INFO:Importing libraries
2025-06-19 06:24:59,986:INFO:Copying training dataset
2025-06-19 06:24:59,990:INFO:Defining folds
2025-06-19 06:24:59,990:INFO:Declaring metric variables
2025-06-19 06:24:59,995:INFO:Importing untrained model
2025-06-19 06:25:00,001:INFO:Linear Discriminant Analysis Imported successfully
2025-06-19 06:25:00,012:INFO:Starting cross validation
2025-06-19 06:25:00,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:00,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,112:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,112:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,118:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,134:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,142:INFO:Calculating mean and std
2025-06-19 06:25:00,143:INFO:Creating metrics dataframe
2025-06-19 06:25:00,144:INFO:Uploading results into container
2025-06-19 06:25:00,145:INFO:Uploading model into container now
2025-06-19 06:25:00,145:INFO:_master_model_container: 11
2025-06-19 06:25:00,146:INFO:_display_container: 2
2025-06-19 06:25:00,146:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-19 06:25:00,146:INFO:create_model() successfully completed......................................
2025-06-19 06:25:00,254:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:00,254:INFO:Creating metrics dataframe
2025-06-19 06:25:00,261:INFO:Initializing Extra Trees Classifier
2025-06-19 06:25:00,261:INFO:Total runtime is 0.2437559405962626 minutes
2025-06-19 06:25:00,267:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:00,267:INFO:Initializing create_model()
2025-06-19 06:25:00,267:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:00,267:INFO:Checking exceptions
2025-06-19 06:25:00,267:INFO:Importing libraries
2025-06-19 06:25:00,267:INFO:Copying training dataset
2025-06-19 06:25:00,271:INFO:Defining folds
2025-06-19 06:25:00,271:INFO:Declaring metric variables
2025-06-19 06:25:00,276:INFO:Importing untrained model
2025-06-19 06:25:00,282:INFO:Extra Trees Classifier Imported successfully
2025-06-19 06:25:00,291:INFO:Starting cross validation
2025-06-19 06:25:00,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:00,690:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,691:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,695:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,696:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,701:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,701:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,711:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,711:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,717:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,717:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,722:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,727:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,731:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,735:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,735:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,735:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,742:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,768:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:00,777:INFO:Calculating mean and std
2025-06-19 06:25:00,778:INFO:Creating metrics dataframe
2025-06-19 06:25:00,780:INFO:Uploading results into container
2025-06-19 06:25:00,780:INFO:Uploading model into container now
2025-06-19 06:25:00,781:INFO:_master_model_container: 12
2025-06-19 06:25:00,781:INFO:_display_container: 2
2025-06-19 06:25:00,781:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-19 06:25:00,781:INFO:create_model() successfully completed......................................
2025-06-19 06:25:00,889:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:00,890:INFO:Creating metrics dataframe
2025-06-19 06:25:00,897:INFO:Initializing Extreme Gradient Boosting
2025-06-19 06:25:00,897:INFO:Total runtime is 0.2543534398078918 minutes
2025-06-19 06:25:00,901:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:00,901:INFO:Initializing create_model()
2025-06-19 06:25:00,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:00,902:INFO:Checking exceptions
2025-06-19 06:25:00,902:INFO:Importing libraries
2025-06-19 06:25:00,902:INFO:Copying training dataset
2025-06-19 06:25:00,905:INFO:Defining folds
2025-06-19 06:25:00,906:INFO:Declaring metric variables
2025-06-19 06:25:00,910:INFO:Importing untrained model
2025-06-19 06:25:00,915:INFO:Extreme Gradient Boosting Imported successfully
2025-06-19 06:25:00,924:INFO:Starting cross validation
2025-06-19 06:25:00,926:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:01,491:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,497:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,501:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:01,538:INFO:Calculating mean and std
2025-06-19 06:25:01,538:INFO:Creating metrics dataframe
2025-06-19 06:25:01,541:INFO:Uploading results into container
2025-06-19 06:25:01,541:INFO:Uploading model into container now
2025-06-19 06:25:01,541:INFO:_master_model_container: 13
2025-06-19 06:25:01,542:INFO:_display_container: 2
2025-06-19 06:25:01,542:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-19 06:25:01,543:INFO:create_model() successfully completed......................................
2025-06-19 06:25:01,649:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:01,649:INFO:Creating metrics dataframe
2025-06-19 06:25:01,656:INFO:Initializing Light Gradient Boosting Machine
2025-06-19 06:25:01,657:INFO:Total runtime is 0.26702969471613563 minutes
2025-06-19 06:25:01,662:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:01,663:INFO:Initializing create_model()
2025-06-19 06:25:01,663:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:01,663:INFO:Checking exceptions
2025-06-19 06:25:01,663:INFO:Importing libraries
2025-06-19 06:25:01,663:INFO:Copying training dataset
2025-06-19 06:25:01,667:INFO:Defining folds
2025-06-19 06:25:01,667:INFO:Declaring metric variables
2025-06-19 06:25:01,671:INFO:Importing untrained model
2025-06-19 06:25:01,676:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-19 06:25:01,686:INFO:Starting cross validation
2025-06-19 06:25:01,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:03,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,537:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,559:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,570:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,718:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,727:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,763:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,768:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,773:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,776:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,777:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,781:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,781:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:03,799:INFO:Calculating mean and std
2025-06-19 06:25:03,800:INFO:Creating metrics dataframe
2025-06-19 06:25:03,802:INFO:Uploading results into container
2025-06-19 06:25:03,803:INFO:Uploading model into container now
2025-06-19 06:25:03,803:INFO:_master_model_container: 14
2025-06-19 06:25:03,803:INFO:_display_container: 2
2025-06-19 06:25:03,804:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-19 06:25:03,804:INFO:create_model() successfully completed......................................
2025-06-19 06:25:03,924:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:03,924:INFO:Creating metrics dataframe
2025-06-19 06:25:03,933:INFO:Initializing CatBoost Classifier
2025-06-19 06:25:03,934:INFO:Total runtime is 0.3049722631772359 minutes
2025-06-19 06:25:03,939:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:03,939:INFO:Initializing create_model()
2025-06-19 06:25:03,939:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:03,939:INFO:Checking exceptions
2025-06-19 06:25:03,940:INFO:Importing libraries
2025-06-19 06:25:03,940:INFO:Copying training dataset
2025-06-19 06:25:03,943:INFO:Defining folds
2025-06-19 06:25:03,944:INFO:Declaring metric variables
2025-06-19 06:25:03,949:INFO:Importing untrained model
2025-06-19 06:25:03,954:INFO:CatBoost Classifier Imported successfully
2025-06-19 06:25:03,969:INFO:Starting cross validation
2025-06-19 06:25:03,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:06,914:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:06,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:06,922:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,002:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,005:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,009:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,019:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,021:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,034:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
7 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
7 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\catboost\core.py", line 2410, in _fit
    self._train(
  File "c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\catboost\core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5023, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5072, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2025-06-19 06:25:07,034:INFO:Calculating mean and std
2025-06-19 06:25:07,035:INFO:Creating metrics dataframe
2025-06-19 06:25:07,037:INFO:Uploading results into container
2025-06-19 06:25:07,037:INFO:Uploading model into container now
2025-06-19 06:25:07,038:INFO:_master_model_container: 15
2025-06-19 06:25:07,038:INFO:_display_container: 2
2025-06-19 06:25:07,038:INFO:<catboost.core.CatBoostClassifier object at 0x000001BE323DFD30>
2025-06-19 06:25:07,038:INFO:create_model() successfully completed......................................
2025-06-19 06:25:07,149:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:07,149:INFO:Creating metrics dataframe
2025-06-19 06:25:07,157:INFO:Initializing Dummy Classifier
2025-06-19 06:25:07,157:INFO:Total runtime is 0.3586904287338257 minutes
2025-06-19 06:25:07,163:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:07,163:INFO:Initializing create_model()
2025-06-19 06:25:07,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BBE244B520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:07,163:INFO:Checking exceptions
2025-06-19 06:25:07,163:INFO:Importing libraries
2025-06-19 06:25:07,163:INFO:Copying training dataset
2025-06-19 06:25:07,169:INFO:Defining folds
2025-06-19 06:25:07,169:INFO:Declaring metric variables
2025-06-19 06:25:07,178:INFO:Importing untrained model
2025-06-19 06:25:07,182:INFO:Dummy Classifier Imported successfully
2025-06-19 06:25:07,195:INFO:Starting cross validation
2025-06-19 06:25:07,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:07,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,280:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,282:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,293:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,295:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,296:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,296:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:07,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:07,330:INFO:Calculating mean and std
2025-06-19 06:25:07,331:INFO:Creating metrics dataframe
2025-06-19 06:25:07,333:INFO:Uploading results into container
2025-06-19 06:25:07,333:INFO:Uploading model into container now
2025-06-19 06:25:07,334:INFO:_master_model_container: 16
2025-06-19 06:25:07,334:INFO:_display_container: 2
2025-06-19 06:25:07,334:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-19 06:25:07,334:INFO:create_model() successfully completed......................................
2025-06-19 06:25:07,454:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:07,454:INFO:Creating metrics dataframe
2025-06-19 06:25:07,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-19 06:25:07,476:INFO:Initializing create_model()
2025-06-19 06:25:07,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:07,476:INFO:Checking exceptions
2025-06-19 06:25:07,478:INFO:Importing libraries
2025-06-19 06:25:07,478:INFO:Copying training dataset
2025-06-19 06:25:07,481:INFO:Defining folds
2025-06-19 06:25:07,481:INFO:Declaring metric variables
2025-06-19 06:25:07,482:INFO:Importing untrained model
2025-06-19 06:25:07,482:INFO:Declaring custom model
2025-06-19 06:25:07,482:INFO:Gradient Boosting Classifier Imported successfully
2025-06-19 06:25:07,483:INFO:Cross validation set to False
2025-06-19 06:25:07,483:INFO:Fitting Model
2025-06-19 06:25:07,667:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-19 06:25:07,667:INFO:create_model() successfully completed......................................
2025-06-19 06:25:07,791:INFO:_master_model_container: 16
2025-06-19 06:25:07,791:INFO:_display_container: 2
2025-06-19 06:25:07,791:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-19 06:25:07,791:INFO:compare_models() successfully completed......................................
2025-06-19 06:25:07,792:INFO:Initializing evaluate_model()
2025-06-19 06:25:07,792:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-19 06:25:07,811:INFO:Initializing plot_model()
2025-06-19 06:25:07,812:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>, system=True)
2025-06-19 06:25:07,812:INFO:Checking exceptions
2025-06-19 06:25:07,814:INFO:Preloading libraries
2025-06-19 06:25:07,822:INFO:Copying training dataset
2025-06-19 06:25:07,822:INFO:Plot type: pipeline
2025-06-19 06:25:08,014:INFO:Visual Rendered Successfully
2025-06-19 06:25:08,121:INFO:plot_model() successfully completed......................................
2025-06-19 06:25:08,125:INFO:Initializing interpret_model()
2025-06-19 06:25:08,125:INFO:interpret_model(estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BBE24863A0>)
2025-06-19 06:25:08,125:INFO:Checking exceptions
2025-06-19 06:25:08,125:INFO:Soft dependency imported: shap: 0.44.1
2025-06-19 06:25:30,937:INFO:PyCaret ClassificationExperiment
2025-06-19 06:25:30,937:INFO:Logging name: clf-default-name
2025-06-19 06:25:30,937:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-19 06:25:30,937:INFO:version 3.3.2
2025-06-19 06:25:30,937:INFO:Initializing setup()
2025-06-19 06:25:30,937:INFO:self.USI: 62da
2025-06-19 06:25:30,937:INFO:self._variable_keys: {'X', '_available_plots', 'USI', 'gpu_param', 'y', 'log_plots_param', 'exp_id', 'fold_groups_param', 'logging_param', 'idx', 'target_param', 'X_train', '_ml_usecase', 'data', 'pipeline', 'seed', 'fix_imbalance', 'fold_shuffle_param', 'X_test', 'y_test', 'exp_name_log', 'html_param', 'gpu_n_jobs_param', 'y_train', 'n_jobs_param', 'memory', 'fold_generator', 'is_multiclass'}
2025-06-19 06:25:30,937:INFO:Checking environment
2025-06-19 06:25:30,937:INFO:python_version: 3.9.21
2025-06-19 06:25:30,937:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-19 06:25:30,937:INFO:machine: AMD64
2025-06-19 06:25:30,937:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-19 06:25:30,937:INFO:Memory: svmem(total=25372119040, available=5803433984, percent=77.1, used=19568685056, free=5803433984)
2025-06-19 06:25:30,937:INFO:Physical Core: 10
2025-06-19 06:25:30,937:INFO:Logical Core: 16
2025-06-19 06:25:30,937:INFO:Checking libraries
2025-06-19 06:25:30,937:INFO:System:
2025-06-19 06:25:30,937:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-19 06:25:30,937:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-19 06:25:30,937:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-19 06:25:30,937:INFO:PyCaret required dependencies:
2025-06-19 06:25:30,938:INFO:                 pip: 24.2
2025-06-19 06:25:30,938:INFO:          setuptools: 75.1.0
2025-06-19 06:25:30,938:INFO:             pycaret: 3.3.2
2025-06-19 06:25:30,938:INFO:             IPython: 8.12.0
2025-06-19 06:25:30,938:INFO:          ipywidgets: 8.1.5
2025-06-19 06:25:30,938:INFO:                tqdm: 4.67.1
2025-06-19 06:25:30,938:INFO:               numpy: 1.26.4
2025-06-19 06:25:30,938:INFO:              pandas: 2.1.4
2025-06-19 06:25:30,938:INFO:              jinja2: 3.1.5
2025-06-19 06:25:30,938:INFO:               scipy: 1.11.4
2025-06-19 06:25:30,938:INFO:              joblib: 1.3.2
2025-06-19 06:25:30,938:INFO:             sklearn: 1.4.2
2025-06-19 06:25:30,938:INFO:                pyod: 2.0.3
2025-06-19 06:25:30,938:INFO:            imblearn: 0.12.4
2025-06-19 06:25:30,938:INFO:   category_encoders: 2.6.4
2025-06-19 06:25:30,938:INFO:            lightgbm: 4.6.0
2025-06-19 06:25:30,938:INFO:               numba: 0.60.0
2025-06-19 06:25:30,938:INFO:            requests: 2.32.3
2025-06-19 06:25:30,938:INFO:          matplotlib: 3.7.5
2025-06-19 06:25:30,938:INFO:          scikitplot: 0.3.7
2025-06-19 06:25:30,938:INFO:         yellowbrick: 1.5
2025-06-19 06:25:30,938:INFO:              plotly: 5.24.1
2025-06-19 06:25:30,938:INFO:    plotly-resampler: Not installed
2025-06-19 06:25:30,938:INFO:             kaleido: 0.2.1
2025-06-19 06:25:30,938:INFO:           schemdraw: 0.15
2025-06-19 06:25:30,938:INFO:         statsmodels: 0.14.4
2025-06-19 06:25:30,938:INFO:              sktime: 0.26.0
2025-06-19 06:25:30,938:INFO:               tbats: 1.1.3
2025-06-19 06:25:30,938:INFO:            pmdarima: 2.0.4
2025-06-19 06:25:30,938:INFO:              psutil: 5.9.0
2025-06-19 06:25:30,938:INFO:          markupsafe: 2.1.5
2025-06-19 06:25:30,938:INFO:             pickle5: Not installed
2025-06-19 06:25:30,938:INFO:         cloudpickle: 2.2.1
2025-06-19 06:25:30,938:INFO:         deprecation: 2.1.0
2025-06-19 06:25:30,938:INFO:              xxhash: 3.5.0
2025-06-19 06:25:30,938:INFO:           wurlitzer: Not installed
2025-06-19 06:25:30,938:INFO:PyCaret optional dependencies:
2025-06-19 06:25:30,938:INFO:                shap: 0.44.1
2025-06-19 06:25:30,938:INFO:           interpret: 0.6.10
2025-06-19 06:25:30,938:INFO:                umap: 0.5.7
2025-06-19 06:25:30,938:INFO:     ydata_profiling: 4.16.1
2025-06-19 06:25:30,938:INFO:  explainerdashboard: 0.4.8
2025-06-19 06:25:30,938:INFO:             autoviz: Not installed
2025-06-19 06:25:30,938:INFO:           fairlearn: 0.7.0
2025-06-19 06:25:30,938:INFO:          deepchecks: Not installed
2025-06-19 06:25:30,938:INFO:             xgboost: 2.1.4
2025-06-19 06:25:30,938:INFO:            catboost: 1.2.8
2025-06-19 06:25:30,938:INFO:              kmodes: 0.12.2
2025-06-19 06:25:30,939:INFO:             mlxtend: 0.23.4
2025-06-19 06:25:30,939:INFO:       statsforecast: 1.5.0
2025-06-19 06:25:30,939:INFO:        tune_sklearn: Not installed
2025-06-19 06:25:30,939:INFO:                 ray: Not installed
2025-06-19 06:25:30,939:INFO:            hyperopt: 0.2.7
2025-06-19 06:25:30,939:INFO:              optuna: 4.3.0
2025-06-19 06:25:30,939:INFO:               skopt: 0.10.2
2025-06-19 06:25:30,939:INFO:              mlflow: 2.22.0
2025-06-19 06:25:30,939:INFO:              gradio: Not installed
2025-06-19 06:25:30,939:INFO:             fastapi: 0.115.7
2025-06-19 06:25:30,939:INFO:             uvicorn: 0.34.0
2025-06-19 06:25:30,939:INFO:              m2cgen: 0.10.0
2025-06-19 06:25:30,939:INFO:           evidently: 0.4.40
2025-06-19 06:25:30,939:INFO:               fugue: 0.8.7
2025-06-19 06:25:30,939:INFO:           streamlit: Not installed
2025-06-19 06:25:30,939:INFO:             prophet: 1.1.6
2025-06-19 06:25:30,939:INFO:None
2025-06-19 06:25:30,939:INFO:Set up data.
2025-06-19 06:25:30,943:INFO:Set up folding strategy.
2025-06-19 06:25:30,943:INFO:Set up train/test split.
2025-06-19 06:25:30,949:INFO:Set up index.
2025-06-19 06:25:30,950:INFO:Assigning column types.
2025-06-19 06:25:30,952:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-19 06:25:30,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-19 06:25:30,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:25:31,000:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,002:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,030:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-19 06:25:31,031:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:25:31,049:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,052:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,052:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-19 06:25:31,082:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:25:31,101:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,102:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,132:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-19 06:25:31,151:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,152:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,153:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-19 06:25:31,201:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,203:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,252:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,254:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,255:INFO:Preparing preprocessing pipeline...
2025-06-19 06:25:31,256:INFO:Set up label encoding.
2025-06-19 06:25:31,256:INFO:Set up simple imputation.
2025-06-19 06:25:31,258:INFO:Set up encoding of ordinal features.
2025-06-19 06:25:31,260:INFO:Set up encoding of categorical features.
2025-06-19 06:25:31,260:INFO:Set up feature normalization.
2025-06-19 06:25:31,309:INFO:Finished creating preprocessing pipeline.
2025-06-19 06:25:31,323:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_spent_Alone',
                                             'Social_event_attendance',
                                             'Going_outside',
                                             'Friends_circle_size',
                                             'Post_frequency'],...
                                                               mapping=[{'col': 'Stage_fear',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'Drained_after_socializing',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-19 06:25:31,323:INFO:Creating final display dataframe.
2025-06-19 06:25:31,466:INFO:Setup _display_container:                     Description                       Value
0                    Session id                          42
1                        Target                 Personality
2                   Target type                      Binary
3                Target mapping  Extrovert: 0, Introvert: 1
4           Original data shape                   (2900, 8)
5        Transformed data shape                   (2900, 8)
6   Transformed train set shape                   (2320, 8)
7    Transformed test set shape                    (580, 8)
8              Numeric features                           5
9          Categorical features                           2
10     Rows with missing values                        4.3%
11                   Preprocess                        True
12              Imputation type                      simple
13           Numeric imputation                        mean
14       Categorical imputation                        mode
15     Maximum one-hot encoding                          25
16              Encoding method                        None
17                    Normalize                        True
18             Normalize method                      zscore
19               Fold Generator             StratifiedKFold
20                  Fold Number                          10
21                     CPU Jobs                          -1
22                      Use GPU                       False
23               Log Experiment                       False
24              Experiment Name            clf-default-name
25                          USI                        62da
2025-06-19 06:25:31,517:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,519:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,577:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-19 06:25:31,580:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-19 06:25:31,581:INFO:setup() successfully completed in 0.65s...............
2025-06-19 06:25:31,581:INFO:Initializing compare_models()
2025-06-19 06:25:31,581:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-19 06:25:31,581:INFO:Checking exceptions
2025-06-19 06:25:31,583:INFO:Preparing display monitor
2025-06-19 06:25:31,610:INFO:Initializing Logistic Regression
2025-06-19 06:25:31,610:INFO:Total runtime is 0.0 minutes
2025-06-19 06:25:31,615:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:31,615:INFO:Initializing create_model()
2025-06-19 06:25:31,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:31,615:INFO:Checking exceptions
2025-06-19 06:25:31,615:INFO:Importing libraries
2025-06-19 06:25:31,615:INFO:Copying training dataset
2025-06-19 06:25:31,618:INFO:Defining folds
2025-06-19 06:25:31,618:INFO:Declaring metric variables
2025-06-19 06:25:31,623:INFO:Importing untrained model
2025-06-19 06:25:31,628:INFO:Logistic Regression Imported successfully
2025-06-19 06:25:31,638:INFO:Starting cross validation
2025-06-19 06:25:31,639:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:31,734:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,736:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,744:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,754:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,754:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,762:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,768:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,773:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,775:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,776:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,777:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,780:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,784:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:31,799:INFO:Calculating mean and std
2025-06-19 06:25:31,800:INFO:Creating metrics dataframe
2025-06-19 06:25:31,802:INFO:Uploading results into container
2025-06-19 06:25:31,803:INFO:Uploading model into container now
2025-06-19 06:25:31,803:INFO:_master_model_container: 1
2025-06-19 06:25:31,803:INFO:_display_container: 2
2025-06-19 06:25:31,804:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-19 06:25:31,804:INFO:create_model() successfully completed......................................
2025-06-19 06:25:31,944:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:31,944:INFO:Creating metrics dataframe
2025-06-19 06:25:31,949:INFO:Initializing K Neighbors Classifier
2025-06-19 06:25:31,949:INFO:Total runtime is 0.005653011798858643 minutes
2025-06-19 06:25:31,953:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:31,953:INFO:Initializing create_model()
2025-06-19 06:25:31,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:31,953:INFO:Checking exceptions
2025-06-19 06:25:31,953:INFO:Importing libraries
2025-06-19 06:25:31,954:INFO:Copying training dataset
2025-06-19 06:25:31,956:INFO:Defining folds
2025-06-19 06:25:31,957:INFO:Declaring metric variables
2025-06-19 06:25:31,960:INFO:Importing untrained model
2025-06-19 06:25:31,965:INFO:K Neighbors Classifier Imported successfully
2025-06-19 06:25:31,976:INFO:Starting cross validation
2025-06-19 06:25:31,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:32,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,140:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,158:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,161:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,161:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,161:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,168:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,172:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,176:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,190:INFO:Calculating mean and std
2025-06-19 06:25:32,190:INFO:Creating metrics dataframe
2025-06-19 06:25:32,191:INFO:Uploading results into container
2025-06-19 06:25:32,192:INFO:Uploading model into container now
2025-06-19 06:25:32,192:INFO:_master_model_container: 2
2025-06-19 06:25:32,192:INFO:_display_container: 2
2025-06-19 06:25:32,192:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-19 06:25:32,192:INFO:create_model() successfully completed......................................
2025-06-19 06:25:32,321:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:32,321:INFO:Creating metrics dataframe
2025-06-19 06:25:32,326:INFO:Initializing Naive Bayes
2025-06-19 06:25:32,326:INFO:Total runtime is 0.011940630276997884 minutes
2025-06-19 06:25:32,332:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:32,332:INFO:Initializing create_model()
2025-06-19 06:25:32,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:32,332:INFO:Checking exceptions
2025-06-19 06:25:32,332:INFO:Importing libraries
2025-06-19 06:25:32,332:INFO:Copying training dataset
2025-06-19 06:25:32,335:INFO:Defining folds
2025-06-19 06:25:32,335:INFO:Declaring metric variables
2025-06-19 06:25:32,339:INFO:Importing untrained model
2025-06-19 06:25:32,344:INFO:Naive Bayes Imported successfully
2025-06-19 06:25:32,353:INFO:Starting cross validation
2025-06-19 06:25:32,354:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:32,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,447:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,454:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,461:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,475:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,487:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,501:INFO:Calculating mean and std
2025-06-19 06:25:32,502:INFO:Creating metrics dataframe
2025-06-19 06:25:32,503:INFO:Uploading results into container
2025-06-19 06:25:32,504:INFO:Uploading model into container now
2025-06-19 06:25:32,504:INFO:_master_model_container: 3
2025-06-19 06:25:32,504:INFO:_display_container: 2
2025-06-19 06:25:32,504:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-19 06:25:32,504:INFO:create_model() successfully completed......................................
2025-06-19 06:25:32,635:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:32,635:INFO:Creating metrics dataframe
2025-06-19 06:25:32,644:INFO:Initializing Decision Tree Classifier
2025-06-19 06:25:32,644:INFO:Total runtime is 0.017246556282043458 minutes
2025-06-19 06:25:32,651:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:32,652:INFO:Initializing create_model()
2025-06-19 06:25:32,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:32,652:INFO:Checking exceptions
2025-06-19 06:25:32,652:INFO:Importing libraries
2025-06-19 06:25:32,652:INFO:Copying training dataset
2025-06-19 06:25:32,657:INFO:Defining folds
2025-06-19 06:25:32,657:INFO:Declaring metric variables
2025-06-19 06:25:32,663:INFO:Importing untrained model
2025-06-19 06:25:32,669:INFO:Decision Tree Classifier Imported successfully
2025-06-19 06:25:32,679:INFO:Starting cross validation
2025-06-19 06:25:32,681:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:32,792:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,797:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,800:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,802:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,803:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,804:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,805:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,810:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,813:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,813:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,815:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,819:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,819:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,819:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:32,844:INFO:Calculating mean and std
2025-06-19 06:25:32,845:INFO:Creating metrics dataframe
2025-06-19 06:25:32,848:INFO:Uploading results into container
2025-06-19 06:25:32,848:INFO:Uploading model into container now
2025-06-19 06:25:32,849:INFO:_master_model_container: 4
2025-06-19 06:25:32,849:INFO:_display_container: 2
2025-06-19 06:25:32,850:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-19 06:25:32,850:INFO:create_model() successfully completed......................................
2025-06-19 06:25:32,981:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:32,982:INFO:Creating metrics dataframe
2025-06-19 06:25:32,987:INFO:Initializing SVM - Linear Kernel
2025-06-19 06:25:32,988:INFO:Total runtime is 0.022977840900421143 minutes
2025-06-19 06:25:32,992:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:32,992:INFO:Initializing create_model()
2025-06-19 06:25:32,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:32,993:INFO:Checking exceptions
2025-06-19 06:25:32,993:INFO:Importing libraries
2025-06-19 06:25:32,993:INFO:Copying training dataset
2025-06-19 06:25:32,996:INFO:Defining folds
2025-06-19 06:25:32,996:INFO:Declaring metric variables
2025-06-19 06:25:33,000:INFO:Importing untrained model
2025-06-19 06:25:33,005:INFO:SVM - Linear Kernel Imported successfully
2025-06-19 06:25:33,013:INFO:Starting cross validation
2025-06-19 06:25:33,015:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:33,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,118:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,123:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,134:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,134:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,145:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,147:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,149:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,171:INFO:Calculating mean and std
2025-06-19 06:25:33,172:INFO:Creating metrics dataframe
2025-06-19 06:25:33,174:INFO:Uploading results into container
2025-06-19 06:25:33,175:INFO:Uploading model into container now
2025-06-19 06:25:33,175:INFO:_master_model_container: 5
2025-06-19 06:25:33,175:INFO:_display_container: 2
2025-06-19 06:25:33,176:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-19 06:25:33,176:INFO:create_model() successfully completed......................................
2025-06-19 06:25:33,304:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:33,304:INFO:Creating metrics dataframe
2025-06-19 06:25:33,311:INFO:Initializing Ridge Classifier
2025-06-19 06:25:33,311:INFO:Total runtime is 0.028346943855285647 minutes
2025-06-19 06:25:33,315:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:33,316:INFO:Initializing create_model()
2025-06-19 06:25:33,316:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:33,316:INFO:Checking exceptions
2025-06-19 06:25:33,316:INFO:Importing libraries
2025-06-19 06:25:33,316:INFO:Copying training dataset
2025-06-19 06:25:33,319:INFO:Defining folds
2025-06-19 06:25:33,319:INFO:Declaring metric variables
2025-06-19 06:25:33,325:INFO:Importing untrained model
2025-06-19 06:25:33,329:INFO:Ridge Classifier Imported successfully
2025-06-19 06:25:33,338:INFO:Starting cross validation
2025-06-19 06:25:33,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:33,427:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,427:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,432:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,440:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,443:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,450:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:33,468:INFO:Calculating mean and std
2025-06-19 06:25:33,468:INFO:Creating metrics dataframe
2025-06-19 06:25:33,470:INFO:Uploading results into container
2025-06-19 06:25:33,471:INFO:Uploading model into container now
2025-06-19 06:25:33,471:INFO:_master_model_container: 6
2025-06-19 06:25:33,471:INFO:_display_container: 2
2025-06-19 06:25:33,471:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-19 06:25:33,471:INFO:create_model() successfully completed......................................
2025-06-19 06:25:33,595:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:33,595:INFO:Creating metrics dataframe
2025-06-19 06:25:33,602:INFO:Initializing Random Forest Classifier
2025-06-19 06:25:33,602:INFO:Total runtime is 0.03320031563440959 minutes
2025-06-19 06:25:33,606:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:33,607:INFO:Initializing create_model()
2025-06-19 06:25:33,607:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:33,608:INFO:Checking exceptions
2025-06-19 06:25:33,608:INFO:Importing libraries
2025-06-19 06:25:33,608:INFO:Copying training dataset
2025-06-19 06:25:33,611:INFO:Defining folds
2025-06-19 06:25:33,611:INFO:Declaring metric variables
2025-06-19 06:25:33,615:INFO:Importing untrained model
2025-06-19 06:25:33,626:INFO:Random Forest Classifier Imported successfully
2025-06-19 06:25:33,641:INFO:Starting cross validation
2025-06-19 06:25:33,643:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:34,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,072:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,074:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,083:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,084:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,084:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,088:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,088:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,092:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,160:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,171:INFO:Calculating mean and std
2025-06-19 06:25:34,171:INFO:Creating metrics dataframe
2025-06-19 06:25:34,173:INFO:Uploading results into container
2025-06-19 06:25:34,173:INFO:Uploading model into container now
2025-06-19 06:25:34,174:INFO:_master_model_container: 7
2025-06-19 06:25:34,174:INFO:_display_container: 2
2025-06-19 06:25:34,174:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-19 06:25:34,174:INFO:create_model() successfully completed......................................
2025-06-19 06:25:34,306:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:34,306:INFO:Creating metrics dataframe
2025-06-19 06:25:34,313:INFO:Initializing Quadratic Discriminant Analysis
2025-06-19 06:25:34,313:INFO:Total runtime is 0.04505071640014649 minutes
2025-06-19 06:25:34,318:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:34,318:INFO:Initializing create_model()
2025-06-19 06:25:34,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:34,318:INFO:Checking exceptions
2025-06-19 06:25:34,318:INFO:Importing libraries
2025-06-19 06:25:34,318:INFO:Copying training dataset
2025-06-19 06:25:34,322:INFO:Defining folds
2025-06-19 06:25:34,322:INFO:Declaring metric variables
2025-06-19 06:25:34,327:INFO:Importing untrained model
2025-06-19 06:25:34,332:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-19 06:25:34,341:INFO:Starting cross validation
2025-06-19 06:25:34,343:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:34,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,397:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,403:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,406:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,407:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,409:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,416:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,416:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-19 06:25:34,428:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,430:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,431:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,433:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,437:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,439:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,443:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,445:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,446:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,452:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,462:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,481:INFO:Calculating mean and std
2025-06-19 06:25:34,482:INFO:Creating metrics dataframe
2025-06-19 06:25:34,484:INFO:Uploading results into container
2025-06-19 06:25:34,484:INFO:Uploading model into container now
2025-06-19 06:25:34,485:INFO:_master_model_container: 8
2025-06-19 06:25:34,485:INFO:_display_container: 2
2025-06-19 06:25:34,485:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-19 06:25:34,485:INFO:create_model() successfully completed......................................
2025-06-19 06:25:34,614:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:34,615:INFO:Creating metrics dataframe
2025-06-19 06:25:34,621:INFO:Initializing Ada Boost Classifier
2025-06-19 06:25:34,621:INFO:Total runtime is 0.05019617478052776 minutes
2025-06-19 06:25:34,626:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:34,626:INFO:Initializing create_model()
2025-06-19 06:25:34,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:34,627:INFO:Checking exceptions
2025-06-19 06:25:34,627:INFO:Importing libraries
2025-06-19 06:25:34,627:INFO:Copying training dataset
2025-06-19 06:25:34,632:INFO:Defining folds
2025-06-19 06:25:34,632:INFO:Declaring metric variables
2025-06-19 06:25:34,636:INFO:Importing untrained model
2025-06-19 06:25:34,645:INFO:Ada Boost Classifier Imported successfully
2025-06-19 06:25:34,659:INFO:Starting cross validation
2025-06-19 06:25:34,662:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:34,719:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,721:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,724:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,725:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,731:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-19 06:25:34,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,916:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,919:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,924:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,929:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,929:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,929:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,934:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,939:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:34,961:INFO:Calculating mean and std
2025-06-19 06:25:34,962:INFO:Creating metrics dataframe
2025-06-19 06:25:34,963:INFO:Uploading results into container
2025-06-19 06:25:34,964:INFO:Uploading model into container now
2025-06-19 06:25:34,964:INFO:_master_model_container: 9
2025-06-19 06:25:34,964:INFO:_display_container: 2
2025-06-19 06:25:34,965:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-19 06:25:34,965:INFO:create_model() successfully completed......................................
2025-06-19 06:25:35,095:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:35,096:INFO:Creating metrics dataframe
2025-06-19 06:25:35,103:INFO:Initializing Gradient Boosting Classifier
2025-06-19 06:25:35,103:INFO:Total runtime is 0.05822769403457642 minutes
2025-06-19 06:25:35,108:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:35,108:INFO:Initializing create_model()
2025-06-19 06:25:35,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:35,108:INFO:Checking exceptions
2025-06-19 06:25:35,108:INFO:Importing libraries
2025-06-19 06:25:35,108:INFO:Copying training dataset
2025-06-19 06:25:35,113:INFO:Defining folds
2025-06-19 06:25:35,113:INFO:Declaring metric variables
2025-06-19 06:25:35,118:INFO:Importing untrained model
2025-06-19 06:25:35,123:INFO:Gradient Boosting Classifier Imported successfully
2025-06-19 06:25:35,131:INFO:Starting cross validation
2025-06-19 06:25:35,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:35,436:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,440:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,443:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,447:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,453:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,455:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,461:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,463:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,464:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,466:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,469:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,471:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,472:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,477:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,488:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,502:INFO:Calculating mean and std
2025-06-19 06:25:35,503:INFO:Creating metrics dataframe
2025-06-19 06:25:35,504:INFO:Uploading results into container
2025-06-19 06:25:35,505:INFO:Uploading model into container now
2025-06-19 06:25:35,505:INFO:_master_model_container: 10
2025-06-19 06:25:35,505:INFO:_display_container: 2
2025-06-19 06:25:35,506:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-19 06:25:35,506:INFO:create_model() successfully completed......................................
2025-06-19 06:25:35,637:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:35,637:INFO:Creating metrics dataframe
2025-06-19 06:25:35,644:INFO:Initializing Linear Discriminant Analysis
2025-06-19 06:25:35,644:INFO:Total runtime is 0.06724183559417725 minutes
2025-06-19 06:25:35,649:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:35,649:INFO:Initializing create_model()
2025-06-19 06:25:35,649:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:35,649:INFO:Checking exceptions
2025-06-19 06:25:35,649:INFO:Importing libraries
2025-06-19 06:25:35,649:INFO:Copying training dataset
2025-06-19 06:25:35,654:INFO:Defining folds
2025-06-19 06:25:35,654:INFO:Declaring metric variables
2025-06-19 06:25:35,657:INFO:Importing untrained model
2025-06-19 06:25:35,663:INFO:Linear Discriminant Analysis Imported successfully
2025-06-19 06:25:35,671:INFO:Starting cross validation
2025-06-19 06:25:35,672:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:35,778:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,784:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,784:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,786:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,786:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,789:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,789:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,789:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,789:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,791:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,791:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,792:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,792:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,797:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,798:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,799:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,802:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,809:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:35,829:INFO:Calculating mean and std
2025-06-19 06:25:35,830:INFO:Creating metrics dataframe
2025-06-19 06:25:35,832:INFO:Uploading results into container
2025-06-19 06:25:35,832:INFO:Uploading model into container now
2025-06-19 06:25:35,833:INFO:_master_model_container: 11
2025-06-19 06:25:35,833:INFO:_display_container: 2
2025-06-19 06:25:35,833:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-19 06:25:35,833:INFO:create_model() successfully completed......................................
2025-06-19 06:25:35,959:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:35,961:INFO:Creating metrics dataframe
2025-06-19 06:25:35,968:INFO:Initializing Extra Trees Classifier
2025-06-19 06:25:35,969:INFO:Total runtime is 0.07263633807500204 minutes
2025-06-19 06:25:35,973:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:35,973:INFO:Initializing create_model()
2025-06-19 06:25:35,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:35,973:INFO:Checking exceptions
2025-06-19 06:25:35,973:INFO:Importing libraries
2025-06-19 06:25:35,973:INFO:Copying training dataset
2025-06-19 06:25:35,977:INFO:Defining folds
2025-06-19 06:25:35,977:INFO:Declaring metric variables
2025-06-19 06:25:35,984:INFO:Importing untrained model
2025-06-19 06:25:35,990:INFO:Extra Trees Classifier Imported successfully
2025-06-19 06:25:35,999:INFO:Starting cross validation
2025-06-19 06:25:36,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:36,364:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,372:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,373:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,379:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,379:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,382:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,396:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,407:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,441:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,444:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,449:INFO:Calculating mean and std
2025-06-19 06:25:36,449:INFO:Creating metrics dataframe
2025-06-19 06:25:36,452:INFO:Uploading results into container
2025-06-19 06:25:36,452:INFO:Uploading model into container now
2025-06-19 06:25:36,452:INFO:_master_model_container: 12
2025-06-19 06:25:36,453:INFO:_display_container: 2
2025-06-19 06:25:36,453:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-19 06:25:36,453:INFO:create_model() successfully completed......................................
2025-06-19 06:25:36,573:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:36,573:INFO:Creating metrics dataframe
2025-06-19 06:25:36,580:INFO:Initializing Extreme Gradient Boosting
2025-06-19 06:25:36,581:INFO:Total runtime is 0.08284681638081869 minutes
2025-06-19 06:25:36,584:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:36,584:INFO:Initializing create_model()
2025-06-19 06:25:36,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:36,585:INFO:Checking exceptions
2025-06-19 06:25:36,585:INFO:Importing libraries
2025-06-19 06:25:36,585:INFO:Copying training dataset
2025-06-19 06:25:36,589:INFO:Defining folds
2025-06-19 06:25:36,589:INFO:Declaring metric variables
2025-06-19 06:25:36,594:INFO:Importing untrained model
2025-06-19 06:25:36,599:INFO:Extreme Gradient Boosting Imported successfully
2025-06-19 06:25:36,608:INFO:Starting cross validation
2025-06-19 06:25:36,609:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:36,761:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,767:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,773:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,785:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,793:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,795:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,801:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:36,802:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,042:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,045:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,074:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,084:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,085:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:37,102:INFO:Calculating mean and std
2025-06-19 06:25:37,103:INFO:Creating metrics dataframe
2025-06-19 06:25:37,105:INFO:Uploading results into container
2025-06-19 06:25:37,105:INFO:Uploading model into container now
2025-06-19 06:25:37,106:INFO:_master_model_container: 13
2025-06-19 06:25:37,106:INFO:_display_container: 2
2025-06-19 06:25:37,107:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-19 06:25:37,107:INFO:create_model() successfully completed......................................
2025-06-19 06:25:37,228:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:37,228:INFO:Creating metrics dataframe
2025-06-19 06:25:37,236:INFO:Initializing Light Gradient Boosting Machine
2025-06-19 06:25:37,236:INFO:Total runtime is 0.09376943906148275 minutes
2025-06-19 06:25:37,241:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:37,241:INFO:Initializing create_model()
2025-06-19 06:25:37,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:37,242:INFO:Checking exceptions
2025-06-19 06:25:37,242:INFO:Importing libraries
2025-06-19 06:25:37,242:INFO:Copying training dataset
2025-06-19 06:25:37,245:INFO:Defining folds
2025-06-19 06:25:37,245:INFO:Declaring metric variables
2025-06-19 06:25:37,250:INFO:Importing untrained model
2025-06-19 06:25:37,253:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-19 06:25:37,261:INFO:Starting cross validation
2025-06-19 06:25:37,263:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:40,236:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,240:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,263:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,267:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,275:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,279:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,283:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,287:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,301:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,331:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,334:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,364:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,369:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,382:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,382:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:40,414:INFO:Calculating mean and std
2025-06-19 06:25:40,415:INFO:Creating metrics dataframe
2025-06-19 06:25:40,418:INFO:Uploading results into container
2025-06-19 06:25:40,419:INFO:Uploading model into container now
2025-06-19 06:25:40,420:INFO:_master_model_container: 14
2025-06-19 06:25:40,420:INFO:_display_container: 2
2025-06-19 06:25:40,421:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-19 06:25:40,421:INFO:create_model() successfully completed......................................
2025-06-19 06:25:40,554:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:40,554:INFO:Creating metrics dataframe
2025-06-19 06:25:40,562:INFO:Initializing CatBoost Classifier
2025-06-19 06:25:40,562:INFO:Total runtime is 0.14919890562693278 minutes
2025-06-19 06:25:40,568:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:40,568:INFO:Initializing create_model()
2025-06-19 06:25:40,569:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:40,569:INFO:Checking exceptions
2025-06-19 06:25:40,569:INFO:Importing libraries
2025-06-19 06:25:40,569:INFO:Copying training dataset
2025-06-19 06:25:40,575:INFO:Defining folds
2025-06-19 06:25:40,575:INFO:Declaring metric variables
2025-06-19 06:25:40,582:INFO:Importing untrained model
2025-06-19 06:25:40,590:INFO:CatBoost Classifier Imported successfully
2025-06-19 06:25:40,603:INFO:Starting cross validation
2025-06-19 06:25:40,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:42,816:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,821:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,825:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,968:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,975:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,977:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:42,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:43,009:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:43,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:43,018:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,263:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,267:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,272:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,476:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:44,995:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,000:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,004:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,274:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,276:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,279:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,292:INFO:Calculating mean and std
2025-06-19 06:25:45,293:INFO:Creating metrics dataframe
2025-06-19 06:25:45,295:INFO:Uploading results into container
2025-06-19 06:25:45,295:INFO:Uploading model into container now
2025-06-19 06:25:45,296:INFO:_master_model_container: 15
2025-06-19 06:25:45,296:INFO:_display_container: 2
2025-06-19 06:25:45,296:INFO:<catboost.core.CatBoostClassifier object at 0x000001BE33D4E0A0>
2025-06-19 06:25:45,296:INFO:create_model() successfully completed......................................
2025-06-19 06:25:45,427:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:45,427:INFO:Creating metrics dataframe
2025-06-19 06:25:45,435:INFO:Initializing Dummy Classifier
2025-06-19 06:25:45,436:INFO:Total runtime is 0.2304464777310689 minutes
2025-06-19 06:25:45,442:INFO:SubProcess create_model() called ==================================
2025-06-19 06:25:45,442:INFO:Initializing create_model()
2025-06-19 06:25:45,443:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BE33DE5760>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:45,443:INFO:Checking exceptions
2025-06-19 06:25:45,443:INFO:Importing libraries
2025-06-19 06:25:45,443:INFO:Copying training dataset
2025-06-19 06:25:45,447:INFO:Defining folds
2025-06-19 06:25:45,447:INFO:Declaring metric variables
2025-06-19 06:25:45,452:INFO:Importing untrained model
2025-06-19 06:25:45,456:INFO:Dummy Classifier Imported successfully
2025-06-19 06:25:45,465:INFO:Starting cross validation
2025-06-19 06:25:45,466:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-19 06:25:45,567:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,568:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,577:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,578:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,588:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,588:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,591:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,592:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,594:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,594:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,594:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,595:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,597:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,599:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,600:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,604:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,605:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-19 06:25:45,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-19 06:25:45,617:INFO:Calculating mean and std
2025-06-19 06:25:45,618:INFO:Creating metrics dataframe
2025-06-19 06:25:45,619:INFO:Uploading results into container
2025-06-19 06:25:45,620:INFO:Uploading model into container now
2025-06-19 06:25:45,620:INFO:_master_model_container: 16
2025-06-19 06:25:45,620:INFO:_display_container: 2
2025-06-19 06:25:45,621:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-19 06:25:45,621:INFO:create_model() successfully completed......................................
2025-06-19 06:25:45,747:INFO:SubProcess create_model() end ==================================
2025-06-19 06:25:45,747:INFO:Creating metrics dataframe
2025-06-19 06:25:45,754:WARNING:Styler.applymap has been deprecated. Use Styler.map instead.

2025-06-19 06:25:45,768:INFO:Initializing create_model()
2025-06-19 06:25:45,768:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-19 06:25:45,768:INFO:Checking exceptions
2025-06-19 06:25:45,770:INFO:Importing libraries
2025-06-19 06:25:45,770:INFO:Copying training dataset
2025-06-19 06:25:45,774:INFO:Defining folds
2025-06-19 06:25:45,774:INFO:Declaring metric variables
2025-06-19 06:25:45,774:INFO:Importing untrained model
2025-06-19 06:25:45,774:INFO:Declaring custom model
2025-06-19 06:25:45,775:INFO:Gradient Boosting Classifier Imported successfully
2025-06-19 06:25:45,777:INFO:Cross validation set to False
2025-06-19 06:25:45,777:INFO:Fitting Model
2025-06-19 06:25:45,973:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-19 06:25:45,973:INFO:create_model() successfully completed......................................
2025-06-19 06:25:46,130:INFO:_master_model_container: 16
2025-06-19 06:25:46,130:INFO:_display_container: 2
2025-06-19 06:25:46,131:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-19 06:25:46,131:INFO:compare_models() successfully completed......................................
2025-06-19 06:25:46,132:INFO:Initializing evaluate_model()
2025-06-19 06:25:46,132:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-19 06:25:46,141:INFO:Initializing plot_model()
2025-06-19 06:25:46,141:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, system=True)
2025-06-19 06:25:46,141:INFO:Checking exceptions
2025-06-19 06:25:46,143:INFO:Preloading libraries
2025-06-19 06:25:46,148:INFO:Copying training dataset
2025-06-19 06:25:46,148:INFO:Plot type: pipeline
2025-06-19 06:25:46,282:INFO:Visual Rendered Successfully
2025-06-19 06:25:46,412:INFO:plot_model() successfully completed......................................
2025-06-19 06:25:57,086:INFO:Initializing plot_model()
2025-06-19 06:25:57,086:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, system=True)
2025-06-19 06:25:57,086:INFO:Checking exceptions
2025-06-19 06:25:57,089:INFO:Preloading libraries
2025-06-19 06:25:57,093:INFO:Copying training dataset
2025-06-19 06:25:57,093:INFO:Plot type: parameter
2025-06-19 06:25:57,097:INFO:Visual Rendered Successfully
2025-06-19 06:25:57,243:INFO:plot_model() successfully completed......................................
2025-06-19 06:26:03,888:INFO:Initializing plot_model()
2025-06-19 06:26:03,889:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, system=True)
2025-06-19 06:26:03,889:INFO:Checking exceptions
2025-06-19 06:26:03,890:INFO:Preloading libraries
2025-06-19 06:26:03,895:INFO:Copying training dataset
2025-06-19 06:26:03,895:INFO:Plot type: auc
2025-06-19 06:26:04,034:INFO:Fitting Model
2025-06-19 06:26:04,034:WARNING:X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names

2025-06-19 06:26:04,034:INFO:Scoring test/hold-out set
2025-06-19 06:26:04,229:INFO:Visual Rendered Successfully
2025-06-19 06:26:04,386:INFO:plot_model() successfully completed......................................
2025-06-19 06:26:04,957:INFO:Initializing plot_model()
2025-06-19 06:26:04,957:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, system=True)
2025-06-19 06:26:04,957:INFO:Checking exceptions
2025-06-19 06:26:04,959:INFO:Preloading libraries
2025-06-19 06:26:04,966:INFO:Copying training dataset
2025-06-19 06:26:04,966:INFO:Plot type: confusion_matrix
2025-06-19 06:26:05,095:INFO:Fitting Model
2025-06-19 06:26:05,095:WARNING:X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names

2025-06-19 06:26:05,096:INFO:Scoring test/hold-out set
2025-06-19 06:26:05,198:INFO:Visual Rendered Successfully
2025-06-19 06:26:05,336:INFO:plot_model() successfully completed......................................
2025-06-19 06:27:46,652:INFO:Initializing plot_model()
2025-06-19 06:27:46,653:INFO:plot_model(plot=threshold, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, system=True)
2025-06-19 06:27:46,654:INFO:Checking exceptions
2025-06-19 06:27:46,659:INFO:Preloading libraries
2025-06-19 06:27:46,667:INFO:Copying training dataset
2025-06-19 06:27:46,667:INFO:Plot type: threshold
2025-06-19 06:27:46,785:INFO:Fitting Model
2025-06-19 06:27:53,787:WARNING:X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names

2025-06-19 06:27:53,801:INFO:Scoring test/hold-out set
2025-06-19 06:27:54,047:INFO:Visual Rendered Successfully
2025-06-19 06:27:54,186:INFO:plot_model() successfully completed......................................
2025-06-19 06:27:54,350:INFO:Initializing plot_model()
2025-06-19 06:27:54,350:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BE33E67A00>, system=True)
2025-06-19 06:27:54,350:INFO:Checking exceptions
2025-06-19 06:27:54,354:INFO:Preloading libraries
2025-06-19 06:27:54,358:INFO:Copying training dataset
2025-06-19 06:27:54,358:INFO:Plot type: rfe
2025-06-19 06:27:54,487:INFO:Fitting Model
2025-06-20 02:00:23,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-20 02:00:23,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-20 02:00:23,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-20 02:00:23,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-20 02:00:26,187:INFO:PyCaret ClassificationExperiment
2025-06-20 02:00:26,187:INFO:Logging name: clf-default-name
2025-06-20 02:00:26,187:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:00:26,187:INFO:version 3.3.2
2025-06-20 02:00:26,187:INFO:Initializing setup()
2025-06-20 02:00:26,187:INFO:self.USI: 68a3
2025-06-20 02:00:26,187:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:00:26,187:INFO:Checking environment
2025-06-20 02:00:26,187:INFO:python_version: 3.9.21
2025-06-20 02:00:26,187:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:00:26,187:INFO:machine: AMD64
2025-06-20 02:00:26,187:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:00:26,188:INFO:Memory: svmem(total=25372119040, available=5768826880, percent=77.3, used=19603292160, free=5768826880)
2025-06-20 02:00:26,188:INFO:Physical Core: 10
2025-06-20 02:00:26,188:INFO:Logical Core: 16
2025-06-20 02:00:26,188:INFO:Checking libraries
2025-06-20 02:00:26,188:INFO:System:
2025-06-20 02:00:26,188:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:00:26,188:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:00:26,188:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:00:26,188:INFO:PyCaret required dependencies:
2025-06-20 02:00:27,425:INFO:                 pip: 24.2
2025-06-20 02:00:27,425:INFO:          setuptools: 75.1.0
2025-06-20 02:00:27,425:INFO:             pycaret: 3.3.2
2025-06-20 02:00:27,425:INFO:             IPython: 8.12.0
2025-06-20 02:00:27,425:INFO:          ipywidgets: 8.1.5
2025-06-20 02:00:27,425:INFO:                tqdm: 4.67.1
2025-06-20 02:00:27,425:INFO:               numpy: 1.26.4
2025-06-20 02:00:27,425:INFO:              pandas: 2.1.4
2025-06-20 02:00:27,425:INFO:              jinja2: 3.1.5
2025-06-20 02:00:27,425:INFO:               scipy: 1.11.4
2025-06-20 02:00:27,425:INFO:              joblib: 1.3.2
2025-06-20 02:00:27,425:INFO:             sklearn: 1.4.2
2025-06-20 02:00:27,425:INFO:                pyod: 2.0.3
2025-06-20 02:00:27,425:INFO:            imblearn: 0.12.4
2025-06-20 02:00:27,425:INFO:   category_encoders: 2.6.4
2025-06-20 02:00:27,425:INFO:            lightgbm: 4.6.0
2025-06-20 02:00:27,425:INFO:               numba: 0.60.0
2025-06-20 02:00:27,425:INFO:            requests: 2.32.3
2025-06-20 02:00:27,425:INFO:          matplotlib: 3.7.5
2025-06-20 02:00:27,425:INFO:          scikitplot: 0.3.7
2025-06-20 02:00:27,425:INFO:         yellowbrick: 1.5
2025-06-20 02:00:27,425:INFO:              plotly: 5.24.1
2025-06-20 02:00:27,425:INFO:    plotly-resampler: Not installed
2025-06-20 02:00:27,425:INFO:             kaleido: 0.2.1
2025-06-20 02:00:27,425:INFO:           schemdraw: 0.15
2025-06-20 02:00:27,425:INFO:         statsmodels: 0.14.4
2025-06-20 02:00:27,425:INFO:              sktime: 0.26.0
2025-06-20 02:00:27,426:INFO:               tbats: 1.1.3
2025-06-20 02:00:27,426:INFO:            pmdarima: 2.0.4
2025-06-20 02:00:27,426:INFO:              psutil: 5.9.0
2025-06-20 02:00:27,426:INFO:          markupsafe: 2.1.5
2025-06-20 02:00:27,426:INFO:             pickle5: Not installed
2025-06-20 02:00:27,426:INFO:         cloudpickle: 2.2.1
2025-06-20 02:00:27,426:INFO:         deprecation: 2.1.0
2025-06-20 02:00:27,426:INFO:              xxhash: 3.5.0
2025-06-20 02:00:27,426:INFO:           wurlitzer: Not installed
2025-06-20 02:00:27,426:INFO:PyCaret optional dependencies:
2025-06-20 02:00:28,624:INFO:                shap: 0.44.1
2025-06-20 02:00:28,624:INFO:           interpret: 0.6.10
2025-06-20 02:00:28,624:INFO:                umap: 0.5.7
2025-06-20 02:00:28,624:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:00:28,624:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:00:28,624:INFO:             autoviz: Not installed
2025-06-20 02:00:28,624:INFO:           fairlearn: 0.7.0
2025-06-20 02:00:28,624:INFO:          deepchecks: Not installed
2025-06-20 02:00:28,624:INFO:             xgboost: 2.1.4
2025-06-20 02:00:28,624:INFO:            catboost: 1.2.8
2025-06-20 02:00:28,624:INFO:              kmodes: 0.12.2
2025-06-20 02:00:28,624:INFO:             mlxtend: 0.23.4
2025-06-20 02:00:28,624:INFO:       statsforecast: 1.5.0
2025-06-20 02:00:28,624:INFO:        tune_sklearn: Not installed
2025-06-20 02:00:28,624:INFO:                 ray: Not installed
2025-06-20 02:00:28,624:INFO:            hyperopt: 0.2.7
2025-06-20 02:00:28,624:INFO:              optuna: 4.3.0
2025-06-20 02:00:28,624:INFO:               skopt: 0.10.2
2025-06-20 02:00:28,624:INFO:              mlflow: 2.22.0
2025-06-20 02:00:28,624:INFO:              gradio: Not installed
2025-06-20 02:00:28,624:INFO:             fastapi: 0.115.7
2025-06-20 02:00:28,624:INFO:             uvicorn: 0.34.0
2025-06-20 02:00:28,624:INFO:              m2cgen: 0.10.0
2025-06-20 02:00:28,625:INFO:           evidently: 0.4.40
2025-06-20 02:00:28,625:INFO:               fugue: 0.8.7
2025-06-20 02:00:28,625:INFO:           streamlit: Not installed
2025-06-20 02:00:28,625:INFO:             prophet: 1.1.6
2025-06-20 02:00:28,625:INFO:None
2025-06-20 02:00:28,625:INFO:Set up data.
2025-06-20 02:00:28,630:INFO:Set up folding strategy.
2025-06-20 02:00:28,630:INFO:Set up train/test split.
2025-06-20 02:00:28,635:INFO:Set up index.
2025-06-20 02:00:28,635:INFO:Assigning column types.
2025-06-20 02:00:28,639:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:00:28,669:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:00:28,672:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:00:28,700:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:28,702:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:28,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:00:28,849:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:00:28,868:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:28,870:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:28,871:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:00:28,902:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:00:28,923:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:28,924:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:28,957:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:00:28,981:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:28,983:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:28,984:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:00:29,036:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:29,038:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:29,090:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:29,092:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:29,094:INFO:Preparing preprocessing pipeline...
2025-06-20 02:00:29,096:INFO:Set up label encoding.
2025-06-20 02:00:29,096:INFO:Set up simple imputation.
2025-06-20 02:00:29,098:INFO:Set up encoding of ordinal features.
2025-06-20 02:00:29,099:INFO:Set up encoding of categorical features.
2025-06-20 02:00:29,099:INFO:Set up feature normalization.
2025-06-20 02:00:29,171:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:00:29,186:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_spent_Alone',
                                             'Social_event_attendance',
                                             'Going_outside',
                                             'Friends_circle_size',
                                             'Post_frequency',
                                             '...
                                                               mapping=[{'col': 'Stage_fear',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'Drained_after_socializing',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:00:29,187:INFO:Creating final display dataframe.
2025-06-20 02:00:29,348:INFO:Setup _display_container:                     Description                       Value
0                    Session id                          42
1                        Target                 Personality
2                   Target type                      Binary
3                Target mapping  Extrovert: 0, Introvert: 1
4           Original data shape                   (2900, 9)
5        Transformed data shape                   (2900, 9)
6   Transformed train set shape                   (2320, 9)
7    Transformed test set shape                    (580, 9)
8              Numeric features                           6
9          Categorical features                           2
10     Rows with missing values                        4.3%
11                   Preprocess                        True
12              Imputation type                      simple
13           Numeric imputation                        mean
14       Categorical imputation                        mode
15     Maximum one-hot encoding                          25
16              Encoding method                        None
17                    Normalize                        True
18             Normalize method                      zscore
19               Fold Generator             StratifiedKFold
20                  Fold Number                          10
21                     CPU Jobs                          -1
22                      Use GPU                       False
23               Log Experiment                       False
24              Experiment Name            clf-default-name
25                          USI                        68a3
2025-06-20 02:00:29,401:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:29,403:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:29,455:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:00:29,457:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:00:29,458:INFO:setup() successfully completed in 3.27s...............
2025-06-20 02:00:29,458:INFO:Initializing compare_models()
2025-06-20 02:00:29,458:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:00:29,458:INFO:Checking exceptions
2025-06-20 02:00:29,461:INFO:Preparing display monitor
2025-06-20 02:00:29,485:INFO:Initializing Logistic Regression
2025-06-20 02:00:29,486:INFO:Total runtime is 1.6697247823079427e-05 minutes
2025-06-20 02:00:29,492:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:29,492:INFO:Initializing create_model()
2025-06-20 02:00:29,492:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:29,492:INFO:Checking exceptions
2025-06-20 02:00:29,492:INFO:Importing libraries
2025-06-20 02:00:29,492:INFO:Copying training dataset
2025-06-20 02:00:29,495:INFO:Defining folds
2025-06-20 02:00:29,495:INFO:Declaring metric variables
2025-06-20 02:00:29,504:INFO:Importing untrained model
2025-06-20 02:00:29,510:INFO:Logistic Regression Imported successfully
2025-06-20 02:00:29,523:INFO:Starting cross validation
2025-06-20 02:00:29,524:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:35,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,162:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,177:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,184:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,185:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,187:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,189:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,193:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,198:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,206:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,208:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,209:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,211:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,212:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,216:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,217:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,217:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,222:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,222:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,227:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,240:INFO:Calculating mean and std
2025-06-20 02:00:35,244:INFO:Creating metrics dataframe
2025-06-20 02:00:35,248:INFO:Uploading results into container
2025-06-20 02:00:35,249:INFO:Uploading model into container now
2025-06-20 02:00:35,251:INFO:_master_model_container: 1
2025-06-20 02:00:35,251:INFO:_display_container: 2
2025-06-20 02:00:35,251:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-20 02:00:35,251:INFO:create_model() successfully completed......................................
2025-06-20 02:00:35,389:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:35,389:INFO:Creating metrics dataframe
2025-06-20 02:00:35,395:INFO:Initializing K Neighbors Classifier
2025-06-20 02:00:35,395:INFO:Total runtime is 0.09849671522776286 minutes
2025-06-20 02:00:35,413:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:35,414:INFO:Initializing create_model()
2025-06-20 02:00:35,414:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:35,414:INFO:Checking exceptions
2025-06-20 02:00:35,414:INFO:Importing libraries
2025-06-20 02:00:35,414:INFO:Copying training dataset
2025-06-20 02:00:35,432:INFO:Defining folds
2025-06-20 02:00:35,433:INFO:Declaring metric variables
2025-06-20 02:00:35,451:INFO:Importing untrained model
2025-06-20 02:00:35,463:INFO:K Neighbors Classifier Imported successfully
2025-06-20 02:00:35,488:INFO:Starting cross validation
2025-06-20 02:00:35,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:35,742:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,750:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,759:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,759:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,764:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,764:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,768:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,791:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:35,794:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,352:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,372:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,377:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,547:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,555:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,572:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:42,596:INFO:Calculating mean and std
2025-06-20 02:00:42,598:INFO:Creating metrics dataframe
2025-06-20 02:00:42,609:INFO:Uploading results into container
2025-06-20 02:00:42,610:INFO:Uploading model into container now
2025-06-20 02:00:42,611:INFO:_master_model_container: 2
2025-06-20 02:00:42,611:INFO:_display_container: 2
2025-06-20 02:00:42,611:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-20 02:00:42,611:INFO:create_model() successfully completed......................................
2025-06-20 02:00:42,774:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:42,775:INFO:Creating metrics dataframe
2025-06-20 02:00:42,785:INFO:Initializing Naive Bayes
2025-06-20 02:00:42,785:INFO:Total runtime is 0.22166264057159424 minutes
2025-06-20 02:00:42,794:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:42,795:INFO:Initializing create_model()
2025-06-20 02:00:42,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:42,795:INFO:Checking exceptions
2025-06-20 02:00:42,795:INFO:Importing libraries
2025-06-20 02:00:42,795:INFO:Copying training dataset
2025-06-20 02:00:42,804:INFO:Defining folds
2025-06-20 02:00:42,804:INFO:Declaring metric variables
2025-06-20 02:00:42,813:INFO:Importing untrained model
2025-06-20 02:00:42,821:INFO:Naive Bayes Imported successfully
2025-06-20 02:00:42,837:INFO:Starting cross validation
2025-06-20 02:00:42,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:43,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,319:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,322:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,324:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,332:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,334:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,339:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,344:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,351:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:43,389:INFO:Calculating mean and std
2025-06-20 02:00:43,394:INFO:Creating metrics dataframe
2025-06-20 02:00:43,399:INFO:Uploading results into container
2025-06-20 02:00:43,399:INFO:Uploading model into container now
2025-06-20 02:00:43,400:INFO:_master_model_container: 3
2025-06-20 02:00:43,400:INFO:_display_container: 2
2025-06-20 02:00:43,400:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:00:43,400:INFO:create_model() successfully completed......................................
2025-06-20 02:00:43,589:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:43,589:INFO:Creating metrics dataframe
2025-06-20 02:00:43,613:INFO:Initializing Decision Tree Classifier
2025-06-20 02:00:43,613:INFO:Total runtime is 0.23546274105707804 minutes
2025-06-20 02:00:43,626:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:43,627:INFO:Initializing create_model()
2025-06-20 02:00:43,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:43,627:INFO:Checking exceptions
2025-06-20 02:00:43,627:INFO:Importing libraries
2025-06-20 02:00:43,627:INFO:Copying training dataset
2025-06-20 02:00:43,652:INFO:Defining folds
2025-06-20 02:00:43,653:INFO:Declaring metric variables
2025-06-20 02:00:43,666:INFO:Importing untrained model
2025-06-20 02:00:43,678:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:00:43,706:INFO:Starting cross validation
2025-06-20 02:00:43,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:44,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,157:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,161:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,164:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,164:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,166:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,171:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,173:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,173:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,176:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,176:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,179:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,179:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,187:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,190:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,191:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,192:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,192:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,193:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,203:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,203:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,204:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,211:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:44,236:INFO:Calculating mean and std
2025-06-20 02:00:44,240:INFO:Creating metrics dataframe
2025-06-20 02:00:44,246:INFO:Uploading results into container
2025-06-20 02:00:44,247:INFO:Uploading model into container now
2025-06-20 02:00:44,247:INFO:_master_model_container: 4
2025-06-20 02:00:44,247:INFO:_display_container: 2
2025-06-20 02:00:44,248:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:00:44,248:INFO:create_model() successfully completed......................................
2025-06-20 02:00:44,479:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:44,480:INFO:Creating metrics dataframe
2025-06-20 02:00:44,510:INFO:Initializing SVM - Linear Kernel
2025-06-20 02:00:44,511:INFO:Total runtime is 0.25041908025741577 minutes
2025-06-20 02:00:44,519:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:44,520:INFO:Initializing create_model()
2025-06-20 02:00:44,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:44,520:INFO:Checking exceptions
2025-06-20 02:00:44,520:INFO:Importing libraries
2025-06-20 02:00:44,520:INFO:Copying training dataset
2025-06-20 02:00:44,531:INFO:Defining folds
2025-06-20 02:00:44,532:INFO:Declaring metric variables
2025-06-20 02:00:44,547:INFO:Importing untrained model
2025-06-20 02:00:44,560:INFO:SVM - Linear Kernel Imported successfully
2025-06-20 02:00:44,587:INFO:Starting cross validation
2025-06-20 02:00:44,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:45,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,132:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,137:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,145:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,147:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,149:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,158:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,159:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,162:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,186:INFO:Calculating mean and std
2025-06-20 02:00:45,200:INFO:Creating metrics dataframe
2025-06-20 02:00:45,207:INFO:Uploading results into container
2025-06-20 02:00:45,207:INFO:Uploading model into container now
2025-06-20 02:00:45,208:INFO:_master_model_container: 5
2025-06-20 02:00:45,208:INFO:_display_container: 2
2025-06-20 02:00:45,209:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-20 02:00:45,209:INFO:create_model() successfully completed......................................
2025-06-20 02:00:45,365:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:45,365:INFO:Creating metrics dataframe
2025-06-20 02:00:45,371:INFO:Initializing Ridge Classifier
2025-06-20 02:00:45,371:INFO:Total runtime is 0.26475681861241657 minutes
2025-06-20 02:00:45,377:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:45,378:INFO:Initializing create_model()
2025-06-20 02:00:45,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:45,378:INFO:Checking exceptions
2025-06-20 02:00:45,378:INFO:Importing libraries
2025-06-20 02:00:45,378:INFO:Copying training dataset
2025-06-20 02:00:45,381:INFO:Defining folds
2025-06-20 02:00:45,381:INFO:Declaring metric variables
2025-06-20 02:00:45,386:INFO:Importing untrained model
2025-06-20 02:00:45,392:INFO:Ridge Classifier Imported successfully
2025-06-20 02:00:45,400:INFO:Starting cross validation
2025-06-20 02:00:45,401:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:45,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,502:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,514:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,533:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:45,543:INFO:Calculating mean and std
2025-06-20 02:00:45,544:INFO:Creating metrics dataframe
2025-06-20 02:00:45,546:INFO:Uploading results into container
2025-06-20 02:00:45,546:INFO:Uploading model into container now
2025-06-20 02:00:45,547:INFO:_master_model_container: 6
2025-06-20 02:00:45,547:INFO:_display_container: 2
2025-06-20 02:00:45,547:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-20 02:00:45,547:INFO:create_model() successfully completed......................................
2025-06-20 02:00:45,661:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:45,661:INFO:Creating metrics dataframe
2025-06-20 02:00:45,667:INFO:Initializing Random Forest Classifier
2025-06-20 02:00:45,667:INFO:Total runtime is 0.2696947932243347 minutes
2025-06-20 02:00:45,672:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:45,672:INFO:Initializing create_model()
2025-06-20 02:00:45,672:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:45,672:INFO:Checking exceptions
2025-06-20 02:00:45,672:INFO:Importing libraries
2025-06-20 02:00:45,672:INFO:Copying training dataset
2025-06-20 02:00:45,676:INFO:Defining folds
2025-06-20 02:00:45,676:INFO:Declaring metric variables
2025-06-20 02:00:45,680:INFO:Importing untrained model
2025-06-20 02:00:45,685:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:00:45,694:INFO:Starting cross validation
2025-06-20 02:00:45,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:46,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,069:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,072:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,091:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,091:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,110:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,110:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,116:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,205:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,210:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,215:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,229:INFO:Calculating mean and std
2025-06-20 02:00:46,233:INFO:Creating metrics dataframe
2025-06-20 02:00:46,235:INFO:Uploading results into container
2025-06-20 02:00:46,235:INFO:Uploading model into container now
2025-06-20 02:00:46,236:INFO:_master_model_container: 7
2025-06-20 02:00:46,236:INFO:_display_container: 2
2025-06-20 02:00:46,236:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:00:46,237:INFO:create_model() successfully completed......................................
2025-06-20 02:00:46,372:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:46,372:INFO:Creating metrics dataframe
2025-06-20 02:00:46,386:INFO:Initializing Quadratic Discriminant Analysis
2025-06-20 02:00:46,386:INFO:Total runtime is 0.2816714286804199 minutes
2025-06-20 02:00:46,392:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:46,393:INFO:Initializing create_model()
2025-06-20 02:00:46,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:46,393:INFO:Checking exceptions
2025-06-20 02:00:46,393:INFO:Importing libraries
2025-06-20 02:00:46,393:INFO:Copying training dataset
2025-06-20 02:00:46,396:INFO:Defining folds
2025-06-20 02:00:46,396:INFO:Declaring metric variables
2025-06-20 02:00:46,402:INFO:Importing untrained model
2025-06-20 02:00:46,406:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:00:46,414:INFO:Starting cross validation
2025-06-20 02:00:46,416:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:46,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,482:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,493:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:00:46,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,512:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,513:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,517:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,518:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,519:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,527:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,528:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,530:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,531:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,531:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,539:INFO:Calculating mean and std
2025-06-20 02:00:46,540:INFO:Creating metrics dataframe
2025-06-20 02:00:46,542:INFO:Uploading results into container
2025-06-20 02:00:46,542:INFO:Uploading model into container now
2025-06-20 02:00:46,542:INFO:_master_model_container: 8
2025-06-20 02:00:46,543:INFO:_display_container: 2
2025-06-20 02:00:46,543:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:00:46,543:INFO:create_model() successfully completed......................................
2025-06-20 02:00:46,652:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:46,653:INFO:Creating metrics dataframe
2025-06-20 02:00:46,659:INFO:Initializing Ada Boost Classifier
2025-06-20 02:00:46,659:INFO:Total runtime is 0.28622204462687173 minutes
2025-06-20 02:00:46,663:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:46,664:INFO:Initializing create_model()
2025-06-20 02:00:46,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:46,664:INFO:Checking exceptions
2025-06-20 02:00:46,664:INFO:Importing libraries
2025-06-20 02:00:46,664:INFO:Copying training dataset
2025-06-20 02:00:46,667:INFO:Defining folds
2025-06-20 02:00:46,667:INFO:Declaring metric variables
2025-06-20 02:00:46,672:INFO:Importing untrained model
2025-06-20 02:00:46,677:INFO:Ada Boost Classifier Imported successfully
2025-06-20 02:00:46,686:INFO:Starting cross validation
2025-06-20 02:00:46,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:46,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,749:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,751:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,754:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,756:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,763:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:00:46,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,934:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,944:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,945:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,945:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,946:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,949:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,950:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,955:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,956:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,957:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,959:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:46,976:INFO:Calculating mean and std
2025-06-20 02:00:46,977:INFO:Creating metrics dataframe
2025-06-20 02:00:46,979:INFO:Uploading results into container
2025-06-20 02:00:46,979:INFO:Uploading model into container now
2025-06-20 02:00:46,979:INFO:_master_model_container: 9
2025-06-20 02:00:46,980:INFO:_display_container: 2
2025-06-20 02:00:46,980:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-20 02:00:46,980:INFO:create_model() successfully completed......................................
2025-06-20 02:00:47,097:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:47,097:INFO:Creating metrics dataframe
2025-06-20 02:00:47,106:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:00:47,106:INFO:Total runtime is 0.2936745802561442 minutes
2025-06-20 02:00:47,111:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:47,112:INFO:Initializing create_model()
2025-06-20 02:00:47,112:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:47,112:INFO:Checking exceptions
2025-06-20 02:00:47,112:INFO:Importing libraries
2025-06-20 02:00:47,112:INFO:Copying training dataset
2025-06-20 02:00:47,116:INFO:Defining folds
2025-06-20 02:00:47,116:INFO:Declaring metric variables
2025-06-20 02:00:47,122:INFO:Importing untrained model
2025-06-20 02:00:47,127:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:00:47,137:INFO:Starting cross validation
2025-06-20 02:00:47,138:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:47,540:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,543:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,552:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,553:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,554:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,555:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,557:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,558:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,563:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,570:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,571:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,573:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,575:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,578:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,601:INFO:Calculating mean and std
2025-06-20 02:00:47,602:INFO:Creating metrics dataframe
2025-06-20 02:00:47,604:INFO:Uploading results into container
2025-06-20 02:00:47,604:INFO:Uploading model into container now
2025-06-20 02:00:47,605:INFO:_master_model_container: 10
2025-06-20 02:00:47,605:INFO:_display_container: 2
2025-06-20 02:00:47,605:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:00:47,605:INFO:create_model() successfully completed......................................
2025-06-20 02:00:47,716:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:47,716:INFO:Creating metrics dataframe
2025-06-20 02:00:47,723:INFO:Initializing Linear Discriminant Analysis
2025-06-20 02:00:47,723:INFO:Total runtime is 0.30396551291147866 minutes
2025-06-20 02:00:47,728:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:47,728:INFO:Initializing create_model()
2025-06-20 02:00:47,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:47,728:INFO:Checking exceptions
2025-06-20 02:00:47,728:INFO:Importing libraries
2025-06-20 02:00:47,728:INFO:Copying training dataset
2025-06-20 02:00:47,732:INFO:Defining folds
2025-06-20 02:00:47,732:INFO:Declaring metric variables
2025-06-20 02:00:47,736:INFO:Importing untrained model
2025-06-20 02:00:47,741:INFO:Linear Discriminant Analysis Imported successfully
2025-06-20 02:00:47,748:INFO:Starting cross validation
2025-06-20 02:00:47,749:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:47,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,845:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,865:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:47,883:INFO:Calculating mean and std
2025-06-20 02:00:47,884:INFO:Creating metrics dataframe
2025-06-20 02:00:47,885:INFO:Uploading results into container
2025-06-20 02:00:47,886:INFO:Uploading model into container now
2025-06-20 02:00:47,886:INFO:_master_model_container: 11
2025-06-20 02:00:47,886:INFO:_display_container: 2
2025-06-20 02:00:47,887:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-20 02:00:47,887:INFO:create_model() successfully completed......................................
2025-06-20 02:00:48,003:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:48,003:INFO:Creating metrics dataframe
2025-06-20 02:00:48,010:INFO:Initializing Extra Trees Classifier
2025-06-20 02:00:48,011:INFO:Total runtime is 0.3087583740552266 minutes
2025-06-20 02:00:48,015:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:48,015:INFO:Initializing create_model()
2025-06-20 02:00:48,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:48,015:INFO:Checking exceptions
2025-06-20 02:00:48,016:INFO:Importing libraries
2025-06-20 02:00:48,016:INFO:Copying training dataset
2025-06-20 02:00:48,019:INFO:Defining folds
2025-06-20 02:00:48,019:INFO:Declaring metric variables
2025-06-20 02:00:48,024:INFO:Importing untrained model
2025-06-20 02:00:48,028:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:00:48,036:INFO:Starting cross validation
2025-06-20 02:00:48,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:48,360:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,371:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,392:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,395:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,406:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,410:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,411:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,412:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,415:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,415:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,415:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,417:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,417:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,465:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,468:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,470:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:48,491:INFO:Calculating mean and std
2025-06-20 02:00:48,492:INFO:Creating metrics dataframe
2025-06-20 02:00:48,494:INFO:Uploading results into container
2025-06-20 02:00:48,495:INFO:Uploading model into container now
2025-06-20 02:00:48,495:INFO:_master_model_container: 12
2025-06-20 02:00:48,495:INFO:_display_container: 2
2025-06-20 02:00:48,496:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:00:48,496:INFO:create_model() successfully completed......................................
2025-06-20 02:00:48,607:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:48,607:INFO:Creating metrics dataframe
2025-06-20 02:00:48,614:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:00:48,614:INFO:Total runtime is 0.31881820360819496 minutes
2025-06-20 02:00:48,619:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:48,619:INFO:Initializing create_model()
2025-06-20 02:00:48,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:48,620:INFO:Checking exceptions
2025-06-20 02:00:48,620:INFO:Importing libraries
2025-06-20 02:00:48,620:INFO:Copying training dataset
2025-06-20 02:00:48,624:INFO:Defining folds
2025-06-20 02:00:48,624:INFO:Declaring metric variables
2025-06-20 02:00:48,628:INFO:Importing untrained model
2025-06-20 02:00:48,634:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:00:48,643:INFO:Starting cross validation
2025-06-20 02:00:48,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:49,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,333:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,337:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,343:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,346:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,358:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,362:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,379:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,382:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,382:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,385:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,390:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,393:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:49,409:INFO:Calculating mean and std
2025-06-20 02:00:49,411:INFO:Creating metrics dataframe
2025-06-20 02:00:49,412:INFO:Uploading results into container
2025-06-20 02:00:49,413:INFO:Uploading model into container now
2025-06-20 02:00:49,413:INFO:_master_model_container: 13
2025-06-20 02:00:49,413:INFO:_display_container: 2
2025-06-20 02:00:49,414:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:00:49,414:INFO:create_model() successfully completed......................................
2025-06-20 02:00:49,527:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:49,529:INFO:Creating metrics dataframe
2025-06-20 02:00:49,536:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:00:49,536:INFO:Total runtime is 0.3341800332069397 minutes
2025-06-20 02:00:49,540:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:49,541:INFO:Initializing create_model()
2025-06-20 02:00:49,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:49,541:INFO:Checking exceptions
2025-06-20 02:00:49,541:INFO:Importing libraries
2025-06-20 02:00:49,541:INFO:Copying training dataset
2025-06-20 02:00:49,546:INFO:Defining folds
2025-06-20 02:00:49,546:INFO:Declaring metric variables
2025-06-20 02:00:49,552:INFO:Importing untrained model
2025-06-20 02:00:49,557:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:00:49,567:INFO:Starting cross validation
2025-06-20 02:00:49,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:51,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,074:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,074:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,237:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,241:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,244:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,290:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,295:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,295:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:51,331:INFO:Calculating mean and std
2025-06-20 02:00:51,332:INFO:Creating metrics dataframe
2025-06-20 02:00:51,335:INFO:Uploading results into container
2025-06-20 02:00:51,335:INFO:Uploading model into container now
2025-06-20 02:00:51,336:INFO:_master_model_container: 14
2025-06-20 02:00:51,336:INFO:_display_container: 2
2025-06-20 02:00:51,337:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:00:51,337:INFO:create_model() successfully completed......................................
2025-06-20 02:00:51,457:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:51,457:INFO:Creating metrics dataframe
2025-06-20 02:00:51,465:INFO:Initializing CatBoost Classifier
2025-06-20 02:00:51,466:INFO:Total runtime is 0.3663383364677429 minutes
2025-06-20 02:00:51,470:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:51,471:INFO:Initializing create_model()
2025-06-20 02:00:51,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:51,471:INFO:Checking exceptions
2025-06-20 02:00:51,471:INFO:Importing libraries
2025-06-20 02:00:51,471:INFO:Copying training dataset
2025-06-20 02:00:51,475:INFO:Defining folds
2025-06-20 02:00:51,475:INFO:Declaring metric variables
2025-06-20 02:00:51,479:INFO:Importing untrained model
2025-06-20 02:00:51,484:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:00:51,492:INFO:Starting cross validation
2025-06-20 02:00:51,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:55,555:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,555:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,560:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,566:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,578:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,578:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,582:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,582:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,583:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,588:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,588:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,590:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,592:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,593:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,595:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:55,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,811:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,814:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,835:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,841:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:57,851:INFO:Calculating mean and std
2025-06-20 02:00:57,852:INFO:Creating metrics dataframe
2025-06-20 02:00:57,854:INFO:Uploading results into container
2025-06-20 02:00:57,855:INFO:Uploading model into container now
2025-06-20 02:00:57,855:INFO:_master_model_container: 15
2025-06-20 02:00:57,855:INFO:_display_container: 2
2025-06-20 02:00:57,855:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A820585E0>
2025-06-20 02:00:57,855:INFO:create_model() successfully completed......................................
2025-06-20 02:00:57,968:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:57,968:INFO:Creating metrics dataframe
2025-06-20 02:00:57,976:INFO:Initializing Dummy Classifier
2025-06-20 02:00:57,976:INFO:Total runtime is 0.47484610875447586 minutes
2025-06-20 02:00:57,981:INFO:SubProcess create_model() called ==================================
2025-06-20 02:00:57,981:INFO:Initializing create_model()
2025-06-20 02:00:57,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8213FD30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:57,981:INFO:Checking exceptions
2025-06-20 02:00:57,981:INFO:Importing libraries
2025-06-20 02:00:57,981:INFO:Copying training dataset
2025-06-20 02:00:57,985:INFO:Defining folds
2025-06-20 02:00:57,986:INFO:Declaring metric variables
2025-06-20 02:00:57,990:INFO:Importing untrained model
2025-06-20 02:00:57,994:INFO:Dummy Classifier Imported successfully
2025-06-20 02:00:58,003:INFO:Starting cross validation
2025-06-20 02:00:58,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:00:58,073:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,090:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,096:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,097:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,097:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:00:58,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:00:58,132:INFO:Calculating mean and std
2025-06-20 02:00:58,133:INFO:Creating metrics dataframe
2025-06-20 02:00:58,135:INFO:Uploading results into container
2025-06-20 02:00:58,135:INFO:Uploading model into container now
2025-06-20 02:00:58,136:INFO:_master_model_container: 16
2025-06-20 02:00:58,136:INFO:_display_container: 2
2025-06-20 02:00:58,136:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-20 02:00:58,136:INFO:create_model() successfully completed......................................
2025-06-20 02:00:58,251:INFO:SubProcess create_model() end ==================================
2025-06-20 02:00:58,251:INFO:Creating metrics dataframe
2025-06-20 02:00:58,261:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:00:58,272:INFO:Initializing create_model()
2025-06-20 02:00:58,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:00:58,272:INFO:Checking exceptions
2025-06-20 02:00:58,274:INFO:Importing libraries
2025-06-20 02:00:58,274:INFO:Copying training dataset
2025-06-20 02:00:58,278:INFO:Defining folds
2025-06-20 02:00:58,278:INFO:Declaring metric variables
2025-06-20 02:00:58,278:INFO:Importing untrained model
2025-06-20 02:00:58,278:INFO:Declaring custom model
2025-06-20 02:00:58,278:INFO:Naive Bayes Imported successfully
2025-06-20 02:00:58,279:INFO:Cross validation set to False
2025-06-20 02:00:58,279:INFO:Fitting Model
2025-06-20 02:00:58,314:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:00:58,314:INFO:create_model() successfully completed......................................
2025-06-20 02:00:58,447:INFO:_master_model_container: 16
2025-06-20 02:00:58,447:INFO:_display_container: 2
2025-06-20 02:00:58,447:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:00:58,447:INFO:compare_models() successfully completed......................................
2025-06-20 02:00:58,447:INFO:Initializing evaluate_model()
2025-06-20 02:00:58,447:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-20 02:00:58,460:INFO:Initializing plot_model()
2025-06-20 02:00:58,460:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A598C4BB0>, system=True)
2025-06-20 02:00:58,460:INFO:Checking exceptions
2025-06-20 02:00:58,462:INFO:Preloading libraries
2025-06-20 02:00:58,462:INFO:Copying training dataset
2025-06-20 02:00:58,462:INFO:Plot type: pipeline
2025-06-20 02:00:58,671:INFO:Visual Rendered Successfully
2025-06-20 02:00:58,785:INFO:plot_model() successfully completed......................................
2025-06-20 02:02:51,592:INFO:PyCaret ClassificationExperiment
2025-06-20 02:02:51,592:INFO:Logging name: clf-default-name
2025-06-20 02:02:51,592:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:02:51,592:INFO:version 3.3.2
2025-06-20 02:02:51,592:INFO:Initializing setup()
2025-06-20 02:02:51,592:INFO:self.USI: 5287
2025-06-20 02:02:51,592:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:02:51,592:INFO:Checking environment
2025-06-20 02:02:51,592:INFO:python_version: 3.9.21
2025-06-20 02:02:51,592:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:02:51,592:INFO:machine: AMD64
2025-06-20 02:02:51,592:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:02:51,592:INFO:Memory: svmem(total=25372119040, available=3616833536, percent=85.7, used=21755285504, free=3616833536)
2025-06-20 02:02:51,593:INFO:Physical Core: 10
2025-06-20 02:02:51,593:INFO:Logical Core: 16
2025-06-20 02:02:51,593:INFO:Checking libraries
2025-06-20 02:02:51,593:INFO:System:
2025-06-20 02:02:51,593:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:02:51,593:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:02:51,593:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:02:51,593:INFO:PyCaret required dependencies:
2025-06-20 02:02:51,593:INFO:                 pip: 24.2
2025-06-20 02:02:51,593:INFO:          setuptools: 75.1.0
2025-06-20 02:02:51,593:INFO:             pycaret: 3.3.2
2025-06-20 02:02:51,593:INFO:             IPython: 8.12.0
2025-06-20 02:02:51,593:INFO:          ipywidgets: 8.1.5
2025-06-20 02:02:51,593:INFO:                tqdm: 4.67.1
2025-06-20 02:02:51,593:INFO:               numpy: 1.26.4
2025-06-20 02:02:51,593:INFO:              pandas: 2.1.4
2025-06-20 02:02:51,593:INFO:              jinja2: 3.1.5
2025-06-20 02:02:51,593:INFO:               scipy: 1.11.4
2025-06-20 02:02:51,593:INFO:              joblib: 1.3.2
2025-06-20 02:02:51,593:INFO:             sklearn: 1.4.2
2025-06-20 02:02:51,593:INFO:                pyod: 2.0.3
2025-06-20 02:02:51,593:INFO:            imblearn: 0.12.4
2025-06-20 02:02:51,593:INFO:   category_encoders: 2.6.4
2025-06-20 02:02:51,593:INFO:            lightgbm: 4.6.0
2025-06-20 02:02:51,593:INFO:               numba: 0.60.0
2025-06-20 02:02:51,593:INFO:            requests: 2.32.3
2025-06-20 02:02:51,593:INFO:          matplotlib: 3.7.5
2025-06-20 02:02:51,593:INFO:          scikitplot: 0.3.7
2025-06-20 02:02:51,593:INFO:         yellowbrick: 1.5
2025-06-20 02:02:51,593:INFO:              plotly: 5.24.1
2025-06-20 02:02:51,593:INFO:    plotly-resampler: Not installed
2025-06-20 02:02:51,593:INFO:             kaleido: 0.2.1
2025-06-20 02:02:51,593:INFO:           schemdraw: 0.15
2025-06-20 02:02:51,593:INFO:         statsmodels: 0.14.4
2025-06-20 02:02:51,593:INFO:              sktime: 0.26.0
2025-06-20 02:02:51,593:INFO:               tbats: 1.1.3
2025-06-20 02:02:51,594:INFO:            pmdarima: 2.0.4
2025-06-20 02:02:51,594:INFO:              psutil: 5.9.0
2025-06-20 02:02:51,594:INFO:          markupsafe: 2.1.5
2025-06-20 02:02:51,594:INFO:             pickle5: Not installed
2025-06-20 02:02:51,594:INFO:         cloudpickle: 2.2.1
2025-06-20 02:02:51,594:INFO:         deprecation: 2.1.0
2025-06-20 02:02:51,594:INFO:              xxhash: 3.5.0
2025-06-20 02:02:51,594:INFO:           wurlitzer: Not installed
2025-06-20 02:02:51,594:INFO:PyCaret optional dependencies:
2025-06-20 02:02:51,594:INFO:                shap: 0.44.1
2025-06-20 02:02:51,594:INFO:           interpret: 0.6.10
2025-06-20 02:02:51,594:INFO:                umap: 0.5.7
2025-06-20 02:02:51,594:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:02:51,594:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:02:51,595:INFO:             autoviz: Not installed
2025-06-20 02:02:51,595:INFO:           fairlearn: 0.7.0
2025-06-20 02:02:51,595:INFO:          deepchecks: Not installed
2025-06-20 02:02:51,595:INFO:             xgboost: 2.1.4
2025-06-20 02:02:51,595:INFO:            catboost: 1.2.8
2025-06-20 02:02:51,595:INFO:              kmodes: 0.12.2
2025-06-20 02:02:51,595:INFO:             mlxtend: 0.23.4
2025-06-20 02:02:51,595:INFO:       statsforecast: 1.5.0
2025-06-20 02:02:51,595:INFO:        tune_sklearn: Not installed
2025-06-20 02:02:51,595:INFO:                 ray: Not installed
2025-06-20 02:02:51,595:INFO:            hyperopt: 0.2.7
2025-06-20 02:02:51,595:INFO:              optuna: 4.3.0
2025-06-20 02:02:51,595:INFO:               skopt: 0.10.2
2025-06-20 02:02:51,595:INFO:              mlflow: 2.22.0
2025-06-20 02:02:51,595:INFO:              gradio: Not installed
2025-06-20 02:02:51,595:INFO:             fastapi: 0.115.7
2025-06-20 02:02:51,595:INFO:             uvicorn: 0.34.0
2025-06-20 02:02:51,595:INFO:              m2cgen: 0.10.0
2025-06-20 02:02:51,595:INFO:           evidently: 0.4.40
2025-06-20 02:02:51,595:INFO:               fugue: 0.8.7
2025-06-20 02:02:51,595:INFO:           streamlit: Not installed
2025-06-20 02:02:51,595:INFO:             prophet: 1.1.6
2025-06-20 02:02:51,595:INFO:None
2025-06-20 02:02:51,595:INFO:Set up data.
2025-06-20 02:02:51,602:INFO:Set up folding strategy.
2025-06-20 02:02:51,602:INFO:Set up train/test split.
2025-06-20 02:02:51,608:INFO:Set up index.
2025-06-20 02:02:51,608:INFO:Assigning column types.
2025-06-20 02:02:51,612:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:02:51,645:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:02:51,646:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:02:51,665:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:51,669:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:51,697:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:02:51,698:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:02:51,715:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:51,716:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:51,717:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:02:51,747:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:02:51,764:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:51,766:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:51,797:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:02:51,815:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:51,817:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:51,817:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:02:51,866:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:51,868:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:51,917:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:51,919:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:51,920:INFO:Preparing preprocessing pipeline...
2025-06-20 02:02:51,921:INFO:Set up label encoding.
2025-06-20 02:02:51,921:INFO:Set up simple imputation.
2025-06-20 02:02:51,924:INFO:Set up encoding of ordinal features.
2025-06-20 02:02:51,925:INFO:Set up encoding of categorical features.
2025-06-20 02:02:51,925:INFO:Set up feature normalization.
2025-06-20 02:02:51,980:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:02:51,995:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Time_spent_Alone',
                                             'Social_event_attendance',
                                             'Going_outside',
                                             'Friends_circle_size',
                                             'Post_frequency',
                                             '...
                                                               mapping=[{'col': 'Stage_fear',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64},
                                                                        {'col': 'Drained_after_socializing',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': No     0
Yes    1
NaN   -1
dtype: int64}],
                                                               return_df=True,
                                                               verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:02:51,995:INFO:Creating final display dataframe.
2025-06-20 02:02:52,137:INFO:Setup _display_container:                     Description                       Value
0                    Session id                          42
1                        Target                 Personality
2                   Target type                      Binary
3                Target mapping  Extrovert: 0, Introvert: 1
4           Original data shape                   (2900, 9)
5        Transformed data shape                   (2900, 9)
6   Transformed train set shape                   (2320, 9)
7    Transformed test set shape                    (580, 9)
8              Numeric features                           6
9          Categorical features                           2
10     Rows with missing values                        4.3%
11                   Preprocess                        True
12              Imputation type                      simple
13           Numeric imputation                        mean
14       Categorical imputation                        mode
15     Maximum one-hot encoding                          25
16              Encoding method                        None
17                    Normalize                        True
18             Normalize method                      zscore
19               Fold Generator             StratifiedKFold
20                  Fold Number                          10
21                     CPU Jobs                          -1
22                      Use GPU                       False
23               Log Experiment                       False
24              Experiment Name            clf-default-name
25                          USI                        5287
2025-06-20 02:02:52,182:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:52,184:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:52,230:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:02:52,233:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:02:52,234:INFO:setup() successfully completed in 0.65s...............
2025-06-20 02:02:52,234:INFO:Initializing compare_models()
2025-06-20 02:02:52,234:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:02:52,234:INFO:Checking exceptions
2025-06-20 02:02:52,236:INFO:Preparing display monitor
2025-06-20 02:02:52,260:INFO:Initializing Logistic Regression
2025-06-20 02:02:52,260:INFO:Total runtime is 0.0 minutes
2025-06-20 02:02:52,265:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:52,265:INFO:Initializing create_model()
2025-06-20 02:02:52,266:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:52,266:INFO:Checking exceptions
2025-06-20 02:02:52,266:INFO:Importing libraries
2025-06-20 02:02:52,266:INFO:Copying training dataset
2025-06-20 02:02:52,269:INFO:Defining folds
2025-06-20 02:02:52,270:INFO:Declaring metric variables
2025-06-20 02:02:52,274:INFO:Importing untrained model
2025-06-20 02:02:52,278:INFO:Logistic Regression Imported successfully
2025-06-20 02:02:52,287:INFO:Starting cross validation
2025-06-20 02:02:52,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:52,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,372:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,372:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,374:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,377:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,378:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,380:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,387:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,389:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,392:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,395:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,395:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,401:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,401:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,402:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,403:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,421:INFO:Calculating mean and std
2025-06-20 02:02:52,421:INFO:Creating metrics dataframe
2025-06-20 02:02:52,423:INFO:Uploading results into container
2025-06-20 02:02:52,423:INFO:Uploading model into container now
2025-06-20 02:02:52,423:INFO:_master_model_container: 1
2025-06-20 02:02:52,423:INFO:_display_container: 2
2025-06-20 02:02:52,424:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-20 02:02:52,424:INFO:create_model() successfully completed......................................
2025-06-20 02:02:52,557:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:52,557:INFO:Creating metrics dataframe
2025-06-20 02:02:52,563:INFO:Initializing K Neighbors Classifier
2025-06-20 02:02:52,563:INFO:Total runtime is 0.005046780904134115 minutes
2025-06-20 02:02:52,567:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:52,567:INFO:Initializing create_model()
2025-06-20 02:02:52,567:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:52,568:INFO:Checking exceptions
2025-06-20 02:02:52,568:INFO:Importing libraries
2025-06-20 02:02:52,568:INFO:Copying training dataset
2025-06-20 02:02:52,570:INFO:Defining folds
2025-06-20 02:02:52,570:INFO:Declaring metric variables
2025-06-20 02:02:52,574:INFO:Importing untrained model
2025-06-20 02:02:52,579:INFO:K Neighbors Classifier Imported successfully
2025-06-20 02:02:52,588:INFO:Starting cross validation
2025-06-20 02:02:52,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:52,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,728:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,732:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,738:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,739:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,742:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,743:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,744:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,748:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,752:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,753:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,756:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,767:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,767:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,769:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:52,778:INFO:Calculating mean and std
2025-06-20 02:02:52,778:INFO:Creating metrics dataframe
2025-06-20 02:02:52,779:INFO:Uploading results into container
2025-06-20 02:02:52,779:INFO:Uploading model into container now
2025-06-20 02:02:52,779:INFO:_master_model_container: 2
2025-06-20 02:02:52,779:INFO:_display_container: 2
2025-06-20 02:02:52,780:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-20 02:02:52,780:INFO:create_model() successfully completed......................................
2025-06-20 02:02:52,903:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:52,903:INFO:Creating metrics dataframe
2025-06-20 02:02:52,910:INFO:Initializing Naive Bayes
2025-06-20 02:02:52,910:INFO:Total runtime is 0.010835679372151692 minutes
2025-06-20 02:02:52,916:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:52,917:INFO:Initializing create_model()
2025-06-20 02:02:52,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:52,917:INFO:Checking exceptions
2025-06-20 02:02:52,917:INFO:Importing libraries
2025-06-20 02:02:52,917:INFO:Copying training dataset
2025-06-20 02:02:52,921:INFO:Defining folds
2025-06-20 02:02:52,921:INFO:Declaring metric variables
2025-06-20 02:02:52,926:INFO:Importing untrained model
2025-06-20 02:02:52,931:INFO:Naive Bayes Imported successfully
2025-06-20 02:02:52,939:INFO:Starting cross validation
2025-06-20 02:02:52,941:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:53,021:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,021:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,024:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,025:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,026:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,031:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,033:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,033:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,034:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,036:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,036:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,036:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,043:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,044:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,044:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,047:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,048:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,057:INFO:Calculating mean and std
2025-06-20 02:02:53,057:INFO:Creating metrics dataframe
2025-06-20 02:02:53,059:INFO:Uploading results into container
2025-06-20 02:02:53,059:INFO:Uploading model into container now
2025-06-20 02:02:53,060:INFO:_master_model_container: 3
2025-06-20 02:02:53,060:INFO:_display_container: 2
2025-06-20 02:02:53,060:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:02:53,060:INFO:create_model() successfully completed......................................
2025-06-20 02:02:53,176:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:53,176:INFO:Creating metrics dataframe
2025-06-20 02:02:53,182:INFO:Initializing Decision Tree Classifier
2025-06-20 02:02:53,182:INFO:Total runtime is 0.015370142459869385 minutes
2025-06-20 02:02:53,189:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:53,189:INFO:Initializing create_model()
2025-06-20 02:02:53,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:53,189:INFO:Checking exceptions
2025-06-20 02:02:53,189:INFO:Importing libraries
2025-06-20 02:02:53,189:INFO:Copying training dataset
2025-06-20 02:02:53,193:INFO:Defining folds
2025-06-20 02:02:53,193:INFO:Declaring metric variables
2025-06-20 02:02:53,197:INFO:Importing untrained model
2025-06-20 02:02:53,201:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:02:53,209:INFO:Starting cross validation
2025-06-20 02:02:53,210:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:53,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,288:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,288:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,307:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,310:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,318:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,319:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,321:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,323:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,340:INFO:Calculating mean and std
2025-06-20 02:02:53,341:INFO:Creating metrics dataframe
2025-06-20 02:02:53,342:INFO:Uploading results into container
2025-06-20 02:02:53,343:INFO:Uploading model into container now
2025-06-20 02:02:53,343:INFO:_master_model_container: 4
2025-06-20 02:02:53,344:INFO:_display_container: 2
2025-06-20 02:02:53,344:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:02:53,344:INFO:create_model() successfully completed......................................
2025-06-20 02:02:53,479:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:53,479:INFO:Creating metrics dataframe
2025-06-20 02:02:53,486:INFO:Initializing SVM - Linear Kernel
2025-06-20 02:02:53,486:INFO:Total runtime is 0.020430163542429606 minutes
2025-06-20 02:02:53,490:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:53,491:INFO:Initializing create_model()
2025-06-20 02:02:53,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:53,491:INFO:Checking exceptions
2025-06-20 02:02:53,491:INFO:Importing libraries
2025-06-20 02:02:53,491:INFO:Copying training dataset
2025-06-20 02:02:53,496:INFO:Defining folds
2025-06-20 02:02:53,496:INFO:Declaring metric variables
2025-06-20 02:02:53,501:INFO:Importing untrained model
2025-06-20 02:02:53,506:INFO:SVM - Linear Kernel Imported successfully
2025-06-20 02:02:53,514:INFO:Starting cross validation
2025-06-20 02:02:53,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:53,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,603:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,604:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,613:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,616:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,622:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,622:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,625:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,626:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,627:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,628:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,629:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,630:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,631:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,633:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,634:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,635:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,637:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,637:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,638:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,651:INFO:Calculating mean and std
2025-06-20 02:02:53,652:INFO:Creating metrics dataframe
2025-06-20 02:02:53,654:INFO:Uploading results into container
2025-06-20 02:02:53,654:INFO:Uploading model into container now
2025-06-20 02:02:53,654:INFO:_master_model_container: 5
2025-06-20 02:02:53,655:INFO:_display_container: 2
2025-06-20 02:02:53,655:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-20 02:02:53,655:INFO:create_model() successfully completed......................................
2025-06-20 02:02:53,778:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:53,778:INFO:Creating metrics dataframe
2025-06-20 02:02:53,785:INFO:Initializing Ridge Classifier
2025-06-20 02:02:53,785:INFO:Total runtime is 0.025423550605773927 minutes
2025-06-20 02:02:53,789:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:53,789:INFO:Initializing create_model()
2025-06-20 02:02:53,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:53,789:INFO:Checking exceptions
2025-06-20 02:02:53,790:INFO:Importing libraries
2025-06-20 02:02:53,790:INFO:Copying training dataset
2025-06-20 02:02:53,793:INFO:Defining folds
2025-06-20 02:02:53,793:INFO:Declaring metric variables
2025-06-20 02:02:53,798:INFO:Importing untrained model
2025-06-20 02:02:53,801:INFO:Ridge Classifier Imported successfully
2025-06-20 02:02:53,808:INFO:Starting cross validation
2025-06-20 02:02:53,809:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:53,897:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,903:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,908:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,912:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,914:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,917:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,918:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,919:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,922:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,924:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,924:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,926:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,927:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,944:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,947:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,948:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,955:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:53,963:INFO:Calculating mean and std
2025-06-20 02:02:53,964:INFO:Creating metrics dataframe
2025-06-20 02:02:53,966:INFO:Uploading results into container
2025-06-20 02:02:53,966:INFO:Uploading model into container now
2025-06-20 02:02:53,967:INFO:_master_model_container: 6
2025-06-20 02:02:53,967:INFO:_display_container: 2
2025-06-20 02:02:53,967:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-20 02:02:53,967:INFO:create_model() successfully completed......................................
2025-06-20 02:02:54,080:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:54,080:INFO:Creating metrics dataframe
2025-06-20 02:02:54,086:INFO:Initializing Random Forest Classifier
2025-06-20 02:02:54,086:INFO:Total runtime is 0.03043351968129476 minutes
2025-06-20 02:02:54,090:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:54,091:INFO:Initializing create_model()
2025-06-20 02:02:54,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:54,091:INFO:Checking exceptions
2025-06-20 02:02:54,091:INFO:Importing libraries
2025-06-20 02:02:54,091:INFO:Copying training dataset
2025-06-20 02:02:54,095:INFO:Defining folds
2025-06-20 02:02:54,095:INFO:Declaring metric variables
2025-06-20 02:02:54,099:INFO:Importing untrained model
2025-06-20 02:02:54,103:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:02:54,113:INFO:Starting cross validation
2025-06-20 02:02:54,114:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:54,470:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,474:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,494:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,495:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,501:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,506:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,510:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,516:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,524:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,578:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,581:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,607:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,610:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,613:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,617:INFO:Calculating mean and std
2025-06-20 02:02:54,618:INFO:Creating metrics dataframe
2025-06-20 02:02:54,620:INFO:Uploading results into container
2025-06-20 02:02:54,621:INFO:Uploading model into container now
2025-06-20 02:02:54,622:INFO:_master_model_container: 7
2025-06-20 02:02:54,622:INFO:_display_container: 2
2025-06-20 02:02:54,622:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:02:54,623:INFO:create_model() successfully completed......................................
2025-06-20 02:02:54,739:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:54,739:INFO:Creating metrics dataframe
2025-06-20 02:02:54,745:INFO:Initializing Quadratic Discriminant Analysis
2025-06-20 02:02:54,745:INFO:Total runtime is 0.041409099102020265 minutes
2025-06-20 02:02:54,749:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:54,750:INFO:Initializing create_model()
2025-06-20 02:02:54,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:54,750:INFO:Checking exceptions
2025-06-20 02:02:54,750:INFO:Importing libraries
2025-06-20 02:02:54,750:INFO:Copying training dataset
2025-06-20 02:02:54,754:INFO:Defining folds
2025-06-20 02:02:54,754:INFO:Declaring metric variables
2025-06-20 02:02:54,758:INFO:Importing untrained model
2025-06-20 02:02:54,763:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:02:54,771:INFO:Starting cross validation
2025-06-20 02:02:54,772:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:54,822:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,830:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,833:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,838:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,842:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,846:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,848:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:02:54,851:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,860:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,864:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,865:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,867:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,868:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,873:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,880:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,884:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:54,896:INFO:Calculating mean and std
2025-06-20 02:02:54,897:INFO:Creating metrics dataframe
2025-06-20 02:02:54,899:INFO:Uploading results into container
2025-06-20 02:02:54,899:INFO:Uploading model into container now
2025-06-20 02:02:54,900:INFO:_master_model_container: 8
2025-06-20 02:02:54,900:INFO:_display_container: 2
2025-06-20 02:02:54,900:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:02:54,900:INFO:create_model() successfully completed......................................
2025-06-20 02:02:55,022:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:55,022:INFO:Creating metrics dataframe
2025-06-20 02:02:55,029:INFO:Initializing Ada Boost Classifier
2025-06-20 02:02:55,029:INFO:Total runtime is 0.04614908695220948 minutes
2025-06-20 02:02:55,034:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:55,035:INFO:Initializing create_model()
2025-06-20 02:02:55,035:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:55,035:INFO:Checking exceptions
2025-06-20 02:02:55,035:INFO:Importing libraries
2025-06-20 02:02:55,035:INFO:Copying training dataset
2025-06-20 02:02:55,038:INFO:Defining folds
2025-06-20 02:02:55,038:INFO:Declaring metric variables
2025-06-20 02:02:55,043:INFO:Importing untrained model
2025-06-20 02:02:55,047:INFO:Ada Boost Classifier Imported successfully
2025-06-20 02:02:55,056:INFO:Starting cross validation
2025-06-20 02:02:55,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:55,099:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,112:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,118:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,121:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,126:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:02:55,256:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,259:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,262:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,278:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,282:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,289:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,292:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,296:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,299:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,302:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,306:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,308:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,309:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,313:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,314:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,315:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,316:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,318:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,334:INFO:Calculating mean and std
2025-06-20 02:02:55,334:INFO:Creating metrics dataframe
2025-06-20 02:02:55,336:INFO:Uploading results into container
2025-06-20 02:02:55,337:INFO:Uploading model into container now
2025-06-20 02:02:55,337:INFO:_master_model_container: 9
2025-06-20 02:02:55,337:INFO:_display_container: 2
2025-06-20 02:02:55,337:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-20 02:02:55,337:INFO:create_model() successfully completed......................................
2025-06-20 02:02:55,457:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:55,457:INFO:Creating metrics dataframe
2025-06-20 02:02:55,465:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:02:55,465:INFO:Total runtime is 0.053412032127380375 minutes
2025-06-20 02:02:55,470:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:55,470:INFO:Initializing create_model()
2025-06-20 02:02:55,470:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:55,470:INFO:Checking exceptions
2025-06-20 02:02:55,470:INFO:Importing libraries
2025-06-20 02:02:55,470:INFO:Copying training dataset
2025-06-20 02:02:55,474:INFO:Defining folds
2025-06-20 02:02:55,474:INFO:Declaring metric variables
2025-06-20 02:02:55,479:INFO:Importing untrained model
2025-06-20 02:02:55,484:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:02:55,491:INFO:Starting cross validation
2025-06-20 02:02:55,493:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:55,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,844:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,847:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,850:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,859:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,859:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,869:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,871:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,872:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,873:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,873:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,874:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,876:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,878:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:55,892:INFO:Calculating mean and std
2025-06-20 02:02:55,893:INFO:Creating metrics dataframe
2025-06-20 02:02:55,895:INFO:Uploading results into container
2025-06-20 02:02:55,895:INFO:Uploading model into container now
2025-06-20 02:02:55,895:INFO:_master_model_container: 10
2025-06-20 02:02:55,896:INFO:_display_container: 2
2025-06-20 02:02:55,896:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:02:55,896:INFO:create_model() successfully completed......................................
2025-06-20 02:02:56,019:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:56,019:INFO:Creating metrics dataframe
2025-06-20 02:02:56,028:INFO:Initializing Linear Discriminant Analysis
2025-06-20 02:02:56,028:INFO:Total runtime is 0.0627925713857015 minutes
2025-06-20 02:02:56,032:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:56,032:INFO:Initializing create_model()
2025-06-20 02:02:56,032:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:56,032:INFO:Checking exceptions
2025-06-20 02:02:56,032:INFO:Importing libraries
2025-06-20 02:02:56,032:INFO:Copying training dataset
2025-06-20 02:02:56,035:INFO:Defining folds
2025-06-20 02:02:56,036:INFO:Declaring metric variables
2025-06-20 02:02:56,041:INFO:Importing untrained model
2025-06-20 02:02:56,047:INFO:Linear Discriminant Analysis Imported successfully
2025-06-20 02:02:56,056:INFO:Starting cross validation
2025-06-20 02:02:56,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:56,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,155:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,158:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,163:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,174:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,175:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,177:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,177:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,178:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,179:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,180:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,181:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,183:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,184:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,185:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,186:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,187:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,187:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,188:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,192:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,192:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,218:INFO:Calculating mean and std
2025-06-20 02:02:56,219:INFO:Creating metrics dataframe
2025-06-20 02:02:56,221:INFO:Uploading results into container
2025-06-20 02:02:56,221:INFO:Uploading model into container now
2025-06-20 02:02:56,222:INFO:_master_model_container: 11
2025-06-20 02:02:56,222:INFO:_display_container: 2
2025-06-20 02:02:56,222:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-20 02:02:56,222:INFO:create_model() successfully completed......................................
2025-06-20 02:02:56,346:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:56,346:INFO:Creating metrics dataframe
2025-06-20 02:02:56,354:INFO:Initializing Extra Trees Classifier
2025-06-20 02:02:56,354:INFO:Total runtime is 0.06822778383890789 minutes
2025-06-20 02:02:56,358:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:56,358:INFO:Initializing create_model()
2025-06-20 02:02:56,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:56,358:INFO:Checking exceptions
2025-06-20 02:02:56,358:INFO:Importing libraries
2025-06-20 02:02:56,358:INFO:Copying training dataset
2025-06-20 02:02:56,362:INFO:Defining folds
2025-06-20 02:02:56,362:INFO:Declaring metric variables
2025-06-20 02:02:56,366:INFO:Importing untrained model
2025-06-20 02:02:56,370:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:02:56,378:INFO:Starting cross validation
2025-06-20 02:02:56,379:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:56,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,745:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,749:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,757:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,758:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,759:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,761:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,762:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,762:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,763:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,765:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,767:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,772:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,776:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,803:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,848:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,855:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:56,860:INFO:Calculating mean and std
2025-06-20 02:02:56,861:INFO:Creating metrics dataframe
2025-06-20 02:02:56,862:INFO:Uploading results into container
2025-06-20 02:02:56,863:INFO:Uploading model into container now
2025-06-20 02:02:56,863:INFO:_master_model_container: 12
2025-06-20 02:02:56,864:INFO:_display_container: 2
2025-06-20 02:02:56,864:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:02:56,864:INFO:create_model() successfully completed......................................
2025-06-20 02:02:56,982:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:56,982:INFO:Creating metrics dataframe
2025-06-20 02:02:56,990:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:02:56,990:INFO:Total runtime is 0.07884067694346111 minutes
2025-06-20 02:02:56,994:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:56,994:INFO:Initializing create_model()
2025-06-20 02:02:56,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:56,994:INFO:Checking exceptions
2025-06-20 02:02:56,994:INFO:Importing libraries
2025-06-20 02:02:56,994:INFO:Copying training dataset
2025-06-20 02:02:56,999:INFO:Defining folds
2025-06-20 02:02:57,000:INFO:Declaring metric variables
2025-06-20 02:02:57,007:INFO:Importing untrained model
2025-06-20 02:02:57,013:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:02:57,027:INFO:Starting cross validation
2025-06-20 02:02:57,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:57,182:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,185:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,188:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,205:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,214:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,219:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,221:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,227:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,234:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,235:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,239:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,245:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,314:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,320:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,480:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,483:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,486:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,487:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,488:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,492:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:57,516:INFO:Calculating mean and std
2025-06-20 02:02:57,516:INFO:Creating metrics dataframe
2025-06-20 02:02:57,518:INFO:Uploading results into container
2025-06-20 02:02:57,519:INFO:Uploading model into container now
2025-06-20 02:02:57,519:INFO:_master_model_container: 13
2025-06-20 02:02:57,519:INFO:_display_container: 2
2025-06-20 02:02:57,520:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:02:57,520:INFO:create_model() successfully completed......................................
2025-06-20 02:02:57,642:INFO:SubProcess create_model() end ==================================
2025-06-20 02:02:57,642:INFO:Creating metrics dataframe
2025-06-20 02:02:57,649:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:02:57,649:INFO:Total runtime is 0.08981280326843263 minutes
2025-06-20 02:02:57,653:INFO:SubProcess create_model() called ==================================
2025-06-20 02:02:57,653:INFO:Initializing create_model()
2025-06-20 02:02:57,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:02:57,653:INFO:Checking exceptions
2025-06-20 02:02:57,653:INFO:Importing libraries
2025-06-20 02:02:57,653:INFO:Copying training dataset
2025-06-20 02:02:57,657:INFO:Defining folds
2025-06-20 02:02:57,657:INFO:Declaring metric variables
2025-06-20 02:02:57,661:INFO:Importing untrained model
2025-06-20 02:02:57,666:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:02:57,674:INFO:Starting cross validation
2025-06-20 02:02:57,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:02:59,799:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,803:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,807:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,933:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,962:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,966:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:02:59,971:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,015:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,024:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,044:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,049:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,054:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,059:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,063:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,066:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,067:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,074:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,123:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,135:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:00,149:INFO:Calculating mean and std
2025-06-20 02:03:00,151:INFO:Creating metrics dataframe
2025-06-20 02:03:00,153:INFO:Uploading results into container
2025-06-20 02:03:00,153:INFO:Uploading model into container now
2025-06-20 02:03:00,154:INFO:_master_model_container: 14
2025-06-20 02:03:00,154:INFO:_display_container: 2
2025-06-20 02:03:00,155:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:03:00,155:INFO:create_model() successfully completed......................................
2025-06-20 02:03:00,286:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:00,287:INFO:Creating metrics dataframe
2025-06-20 02:03:00,295:INFO:Initializing CatBoost Classifier
2025-06-20 02:03:00,295:INFO:Total runtime is 0.1339132030804952 minutes
2025-06-20 02:03:00,299:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:00,300:INFO:Initializing create_model()
2025-06-20 02:03:00,300:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:00,300:INFO:Checking exceptions
2025-06-20 02:03:00,300:INFO:Importing libraries
2025-06-20 02:03:00,300:INFO:Copying training dataset
2025-06-20 02:03:00,303:INFO:Defining folds
2025-06-20 02:03:00,304:INFO:Declaring metric variables
2025-06-20 02:03:00,308:INFO:Importing untrained model
2025-06-20 02:03:00,312:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:03:00,319:INFO:Starting cross validation
2025-06-20 02:03:00,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:02,920:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,921:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,925:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,926:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,926:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,929:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,932:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,935:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:02,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:04,961:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:04,966:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:04,970:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,854:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,856:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,860:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:05,868:INFO:Calculating mean and std
2025-06-20 02:03:05,869:INFO:Creating metrics dataframe
2025-06-20 02:03:05,870:INFO:Uploading results into container
2025-06-20 02:03:05,871:INFO:Uploading model into container now
2025-06-20 02:03:05,871:INFO:_master_model_container: 15
2025-06-20 02:03:05,871:INFO:_display_container: 2
2025-06-20 02:03:05,871:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A8272F250>
2025-06-20 02:03:05,871:INFO:create_model() successfully completed......................................
2025-06-20 02:03:05,991:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:05,992:INFO:Creating metrics dataframe
2025-06-20 02:03:06,001:INFO:Initializing Dummy Classifier
2025-06-20 02:03:06,002:INFO:Total runtime is 0.22902724345525105 minutes
2025-06-20 02:03:06,006:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:06,006:INFO:Initializing create_model()
2025-06-20 02:03:06,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82794250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:06,006:INFO:Checking exceptions
2025-06-20 02:03:06,006:INFO:Importing libraries
2025-06-20 02:03:06,007:INFO:Copying training dataset
2025-06-20 02:03:06,011:INFO:Defining folds
2025-06-20 02:03:06,011:INFO:Declaring metric variables
2025-06-20 02:03:06,015:INFO:Importing untrained model
2025-06-20 02:03:06,020:INFO:Dummy Classifier Imported successfully
2025-06-20 02:03:06,030:INFO:Starting cross validation
2025-06-20 02:03:06,031:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:06,094:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,105:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,108:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,123:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,123:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,125:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,130:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,132:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,141:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,144:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,146:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,150:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,151:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,152:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,153:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:06,155:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Introvert') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-20 02:03:06,165:INFO:Calculating mean and std
2025-06-20 02:03:06,166:INFO:Creating metrics dataframe
2025-06-20 02:03:06,168:INFO:Uploading results into container
2025-06-20 02:03:06,168:INFO:Uploading model into container now
2025-06-20 02:03:06,169:INFO:_master_model_container: 16
2025-06-20 02:03:06,169:INFO:_display_container: 2
2025-06-20 02:03:06,169:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-20 02:03:06,169:INFO:create_model() successfully completed......................................
2025-06-20 02:03:06,289:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:06,289:INFO:Creating metrics dataframe
2025-06-20 02:03:06,297:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:03:06,306:INFO:Initializing create_model()
2025-06-20 02:03:06,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:06,306:INFO:Checking exceptions
2025-06-20 02:03:06,307:INFO:Importing libraries
2025-06-20 02:03:06,308:INFO:Copying training dataset
2025-06-20 02:03:06,310:INFO:Defining folds
2025-06-20 02:03:06,310:INFO:Declaring metric variables
2025-06-20 02:03:06,311:INFO:Importing untrained model
2025-06-20 02:03:06,311:INFO:Declaring custom model
2025-06-20 02:03:06,311:INFO:Naive Bayes Imported successfully
2025-06-20 02:03:06,311:INFO:Cross validation set to False
2025-06-20 02:03:06,312:INFO:Fitting Model
2025-06-20 02:03:06,339:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:03:06,339:INFO:create_model() successfully completed......................................
2025-06-20 02:03:06,477:INFO:_master_model_container: 16
2025-06-20 02:03:06,477:INFO:_display_container: 2
2025-06-20 02:03:06,478:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:03:06,478:INFO:compare_models() successfully completed......................................
2025-06-20 02:03:06,478:INFO:Initializing evaluate_model()
2025-06-20 02:03:06,478:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-20 02:03:06,485:INFO:Initializing plot_model()
2025-06-20 02:03:06,485:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A825A8340>, system=True)
2025-06-20 02:03:06,485:INFO:Checking exceptions
2025-06-20 02:03:06,487:INFO:Preloading libraries
2025-06-20 02:03:06,487:INFO:Copying training dataset
2025-06-20 02:03:06,487:INFO:Plot type: pipeline
2025-06-20 02:03:06,625:INFO:Visual Rendered Successfully
2025-06-20 02:03:06,742:INFO:plot_model() successfully completed......................................
2025-06-20 02:03:19,255:INFO:PyCaret ClassificationExperiment
2025-06-20 02:03:19,255:INFO:Logging name: clf-default-name
2025-06-20 02:03:19,255:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:03:19,255:INFO:version 3.3.2
2025-06-20 02:03:19,255:INFO:Initializing setup()
2025-06-20 02:03:19,255:INFO:self.USI: 4e1c
2025-06-20 02:03:19,255:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:03:19,255:INFO:Checking environment
2025-06-20 02:03:19,255:INFO:python_version: 3.9.21
2025-06-20 02:03:19,255:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:03:19,255:INFO:machine: AMD64
2025-06-20 02:03:19,255:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:03:19,255:INFO:Memory: svmem(total=25372119040, available=2911023104, percent=88.5, used=22461095936, free=2911023104)
2025-06-20 02:03:19,255:INFO:Physical Core: 10
2025-06-20 02:03:19,255:INFO:Logical Core: 16
2025-06-20 02:03:19,255:INFO:Checking libraries
2025-06-20 02:03:19,255:INFO:System:
2025-06-20 02:03:19,255:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:03:19,255:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:03:19,255:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:03:19,255:INFO:PyCaret required dependencies:
2025-06-20 02:03:19,256:INFO:                 pip: 24.2
2025-06-20 02:03:19,256:INFO:          setuptools: 75.1.0
2025-06-20 02:03:19,256:INFO:             pycaret: 3.3.2
2025-06-20 02:03:19,256:INFO:             IPython: 8.12.0
2025-06-20 02:03:19,256:INFO:          ipywidgets: 8.1.5
2025-06-20 02:03:19,256:INFO:                tqdm: 4.67.1
2025-06-20 02:03:19,256:INFO:               numpy: 1.26.4
2025-06-20 02:03:19,256:INFO:              pandas: 2.1.4
2025-06-20 02:03:19,257:INFO:              jinja2: 3.1.5
2025-06-20 02:03:19,257:INFO:               scipy: 1.11.4
2025-06-20 02:03:19,257:INFO:              joblib: 1.3.2
2025-06-20 02:03:19,257:INFO:             sklearn: 1.4.2
2025-06-20 02:03:19,257:INFO:                pyod: 2.0.3
2025-06-20 02:03:19,257:INFO:            imblearn: 0.12.4
2025-06-20 02:03:19,257:INFO:   category_encoders: 2.6.4
2025-06-20 02:03:19,257:INFO:            lightgbm: 4.6.0
2025-06-20 02:03:19,257:INFO:               numba: 0.60.0
2025-06-20 02:03:19,257:INFO:            requests: 2.32.3
2025-06-20 02:03:19,257:INFO:          matplotlib: 3.7.5
2025-06-20 02:03:19,257:INFO:          scikitplot: 0.3.7
2025-06-20 02:03:19,257:INFO:         yellowbrick: 1.5
2025-06-20 02:03:19,257:INFO:              plotly: 5.24.1
2025-06-20 02:03:19,257:INFO:    plotly-resampler: Not installed
2025-06-20 02:03:19,257:INFO:             kaleido: 0.2.1
2025-06-20 02:03:19,257:INFO:           schemdraw: 0.15
2025-06-20 02:03:19,257:INFO:         statsmodels: 0.14.4
2025-06-20 02:03:19,257:INFO:              sktime: 0.26.0
2025-06-20 02:03:19,257:INFO:               tbats: 1.1.3
2025-06-20 02:03:19,257:INFO:            pmdarima: 2.0.4
2025-06-20 02:03:19,257:INFO:              psutil: 5.9.0
2025-06-20 02:03:19,257:INFO:          markupsafe: 2.1.5
2025-06-20 02:03:19,257:INFO:             pickle5: Not installed
2025-06-20 02:03:19,257:INFO:         cloudpickle: 2.2.1
2025-06-20 02:03:19,257:INFO:         deprecation: 2.1.0
2025-06-20 02:03:19,257:INFO:              xxhash: 3.5.0
2025-06-20 02:03:19,257:INFO:           wurlitzer: Not installed
2025-06-20 02:03:19,257:INFO:PyCaret optional dependencies:
2025-06-20 02:03:19,258:INFO:                shap: 0.44.1
2025-06-20 02:03:19,258:INFO:           interpret: 0.6.10
2025-06-20 02:03:19,258:INFO:                umap: 0.5.7
2025-06-20 02:03:19,258:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:03:19,258:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:03:19,258:INFO:             autoviz: Not installed
2025-06-20 02:03:19,258:INFO:           fairlearn: 0.7.0
2025-06-20 02:03:19,258:INFO:          deepchecks: Not installed
2025-06-20 02:03:19,258:INFO:             xgboost: 2.1.4
2025-06-20 02:03:19,258:INFO:            catboost: 1.2.8
2025-06-20 02:03:19,258:INFO:              kmodes: 0.12.2
2025-06-20 02:03:19,258:INFO:             mlxtend: 0.23.4
2025-06-20 02:03:19,258:INFO:       statsforecast: 1.5.0
2025-06-20 02:03:19,258:INFO:        tune_sklearn: Not installed
2025-06-20 02:03:19,258:INFO:                 ray: Not installed
2025-06-20 02:03:19,258:INFO:            hyperopt: 0.2.7
2025-06-20 02:03:19,258:INFO:              optuna: 4.3.0
2025-06-20 02:03:19,258:INFO:               skopt: 0.10.2
2025-06-20 02:03:19,258:INFO:              mlflow: 2.22.0
2025-06-20 02:03:19,258:INFO:              gradio: Not installed
2025-06-20 02:03:19,258:INFO:             fastapi: 0.115.7
2025-06-20 02:03:19,258:INFO:             uvicorn: 0.34.0
2025-06-20 02:03:19,258:INFO:              m2cgen: 0.10.0
2025-06-20 02:03:19,258:INFO:           evidently: 0.4.40
2025-06-20 02:03:19,258:INFO:               fugue: 0.8.7
2025-06-20 02:03:19,258:INFO:           streamlit: Not installed
2025-06-20 02:03:19,258:INFO:             prophet: 1.1.6
2025-06-20 02:03:19,258:INFO:None
2025-06-20 02:03:19,258:INFO:Set up data.
2025-06-20 02:03:19,262:INFO:Set up folding strategy.
2025-06-20 02:03:19,262:INFO:Set up train/test split.
2025-06-20 02:03:19,266:INFO:Set up index.
2025-06-20 02:03:19,266:INFO:Assigning column types.
2025-06-20 02:03:19,268:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:03:19,298:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:03:19,299:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:03:19,317:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,319:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,351:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:03:19,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:03:19,369:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,370:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,372:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:03:19,401:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:03:19,420:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,421:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,450:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:03:19,469:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,470:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,471:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:03:19,516:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,517:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,564:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,566:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,567:INFO:Preparing preprocessing pipeline...
2025-06-20 02:03:19,568:INFO:Set up simple imputation.
2025-06-20 02:03:19,572:INFO:Set up encoding of categorical features.
2025-06-20 02:03:19,572:INFO:Set up feature normalization.
2025-06-20 02:03:19,625:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:03:19,628:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:03:19,628:INFO:Creating final display dataframe.
2025-06-20 02:03:19,744:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target       Personality
2                   Target type            Binary
3           Original data shape         (2900, 4)
4        Transformed data shape         (2900, 8)
5   Transformed train set shape         (2320, 8)
6    Transformed test set shape          (580, 8)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              4e1c
2025-06-20 02:03:19,791:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,793:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,843:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:03:19,845:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:03:19,846:INFO:setup() successfully completed in 0.59s...............
2025-06-20 02:03:19,846:INFO:Initializing compare_models()
2025-06-20 02:03:19,846:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:03:19,846:INFO:Checking exceptions
2025-06-20 02:03:19,849:INFO:Preparing display monitor
2025-06-20 02:03:19,877:INFO:Initializing Logistic Regression
2025-06-20 02:03:19,877:INFO:Total runtime is 0.0 minutes
2025-06-20 02:03:19,882:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:19,883:INFO:Initializing create_model()
2025-06-20 02:03:19,883:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:19,883:INFO:Checking exceptions
2025-06-20 02:03:19,883:INFO:Importing libraries
2025-06-20 02:03:19,883:INFO:Copying training dataset
2025-06-20 02:03:19,886:INFO:Defining folds
2025-06-20 02:03:19,886:INFO:Declaring metric variables
2025-06-20 02:03:19,891:INFO:Importing untrained model
2025-06-20 02:03:19,896:INFO:Logistic Regression Imported successfully
2025-06-20 02:03:19,905:INFO:Starting cross validation
2025-06-20 02:03:19,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:20,067:INFO:Calculating mean and std
2025-06-20 02:03:20,067:INFO:Creating metrics dataframe
2025-06-20 02:03:20,069:INFO:Uploading results into container
2025-06-20 02:03:20,070:INFO:Uploading model into container now
2025-06-20 02:03:20,070:INFO:_master_model_container: 1
2025-06-20 02:03:20,070:INFO:_display_container: 2
2025-06-20 02:03:20,070:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-20 02:03:20,070:INFO:create_model() successfully completed......................................
2025-06-20 02:03:20,203:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:20,203:INFO:Creating metrics dataframe
2025-06-20 02:03:20,208:INFO:Initializing K Neighbors Classifier
2025-06-20 02:03:20,208:INFO:Total runtime is 0.005517137050628662 minutes
2025-06-20 02:03:20,212:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:20,212:INFO:Initializing create_model()
2025-06-20 02:03:20,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:20,212:INFO:Checking exceptions
2025-06-20 02:03:20,212:INFO:Importing libraries
2025-06-20 02:03:20,212:INFO:Copying training dataset
2025-06-20 02:03:20,215:INFO:Defining folds
2025-06-20 02:03:20,215:INFO:Declaring metric variables
2025-06-20 02:03:20,218:INFO:Importing untrained model
2025-06-20 02:03:20,223:INFO:K Neighbors Classifier Imported successfully
2025-06-20 02:03:20,232:INFO:Starting cross validation
2025-06-20 02:03:20,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:20,442:INFO:Calculating mean and std
2025-06-20 02:03:20,442:INFO:Creating metrics dataframe
2025-06-20 02:03:20,444:INFO:Uploading results into container
2025-06-20 02:03:20,444:INFO:Uploading model into container now
2025-06-20 02:03:20,444:INFO:_master_model_container: 2
2025-06-20 02:03:20,444:INFO:_display_container: 2
2025-06-20 02:03:20,445:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-20 02:03:20,445:INFO:create_model() successfully completed......................................
2025-06-20 02:03:20,572:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:20,573:INFO:Creating metrics dataframe
2025-06-20 02:03:20,578:INFO:Initializing Naive Bayes
2025-06-20 02:03:20,578:INFO:Total runtime is 0.011696132024129231 minutes
2025-06-20 02:03:20,583:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:20,583:INFO:Initializing create_model()
2025-06-20 02:03:20,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:20,584:INFO:Checking exceptions
2025-06-20 02:03:20,584:INFO:Importing libraries
2025-06-20 02:03:20,584:INFO:Copying training dataset
2025-06-20 02:03:20,586:INFO:Defining folds
2025-06-20 02:03:20,586:INFO:Declaring metric variables
2025-06-20 02:03:20,590:INFO:Importing untrained model
2025-06-20 02:03:20,594:INFO:Naive Bayes Imported successfully
2025-06-20 02:03:20,602:INFO:Starting cross validation
2025-06-20 02:03:20,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:20,739:INFO:Calculating mean and std
2025-06-20 02:03:20,739:INFO:Creating metrics dataframe
2025-06-20 02:03:20,741:INFO:Uploading results into container
2025-06-20 02:03:20,741:INFO:Uploading model into container now
2025-06-20 02:03:20,741:INFO:_master_model_container: 3
2025-06-20 02:03:20,742:INFO:_display_container: 2
2025-06-20 02:03:20,742:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:03:20,742:INFO:create_model() successfully completed......................................
2025-06-20 02:03:20,866:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:20,866:INFO:Creating metrics dataframe
2025-06-20 02:03:20,871:INFO:Initializing Decision Tree Classifier
2025-06-20 02:03:20,871:INFO:Total runtime is 0.016576731204986574 minutes
2025-06-20 02:03:20,876:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:20,876:INFO:Initializing create_model()
2025-06-20 02:03:20,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:20,876:INFO:Checking exceptions
2025-06-20 02:03:20,876:INFO:Importing libraries
2025-06-20 02:03:20,876:INFO:Copying training dataset
2025-06-20 02:03:20,879:INFO:Defining folds
2025-06-20 02:03:20,879:INFO:Declaring metric variables
2025-06-20 02:03:20,884:INFO:Importing untrained model
2025-06-20 02:03:20,890:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:03:20,898:INFO:Starting cross validation
2025-06-20 02:03:20,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:21,021:INFO:Calculating mean and std
2025-06-20 02:03:21,022:INFO:Creating metrics dataframe
2025-06-20 02:03:21,023:INFO:Uploading results into container
2025-06-20 02:03:21,025:INFO:Uploading model into container now
2025-06-20 02:03:21,025:INFO:_master_model_container: 4
2025-06-20 02:03:21,025:INFO:_display_container: 2
2025-06-20 02:03:21,025:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:03:21,025:INFO:create_model() successfully completed......................................
2025-06-20 02:03:21,147:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:21,148:INFO:Creating metrics dataframe
2025-06-20 02:03:21,154:INFO:Initializing SVM - Linear Kernel
2025-06-20 02:03:21,154:INFO:Total runtime is 0.02129673957824707 minutes
2025-06-20 02:03:21,159:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:21,160:INFO:Initializing create_model()
2025-06-20 02:03:21,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:21,160:INFO:Checking exceptions
2025-06-20 02:03:21,160:INFO:Importing libraries
2025-06-20 02:03:21,160:INFO:Copying training dataset
2025-06-20 02:03:21,164:INFO:Defining folds
2025-06-20 02:03:21,164:INFO:Declaring metric variables
2025-06-20 02:03:21,170:INFO:Importing untrained model
2025-06-20 02:03:21,174:INFO:SVM - Linear Kernel Imported successfully
2025-06-20 02:03:21,183:INFO:Starting cross validation
2025-06-20 02:03:21,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:21,331:INFO:Calculating mean and std
2025-06-20 02:03:21,332:INFO:Creating metrics dataframe
2025-06-20 02:03:21,334:INFO:Uploading results into container
2025-06-20 02:03:21,334:INFO:Uploading model into container now
2025-06-20 02:03:21,334:INFO:_master_model_container: 5
2025-06-20 02:03:21,334:INFO:_display_container: 2
2025-06-20 02:03:21,335:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-20 02:03:21,335:INFO:create_model() successfully completed......................................
2025-06-20 02:03:21,464:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:21,464:INFO:Creating metrics dataframe
2025-06-20 02:03:21,469:INFO:Initializing Ridge Classifier
2025-06-20 02:03:21,469:INFO:Total runtime is 0.026540295282999674 minutes
2025-06-20 02:03:21,476:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:21,476:INFO:Initializing create_model()
2025-06-20 02:03:21,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:21,476:INFO:Checking exceptions
2025-06-20 02:03:21,476:INFO:Importing libraries
2025-06-20 02:03:21,476:INFO:Copying training dataset
2025-06-20 02:03:21,480:INFO:Defining folds
2025-06-20 02:03:21,480:INFO:Declaring metric variables
2025-06-20 02:03:21,484:INFO:Importing untrained model
2025-06-20 02:03:21,489:INFO:Ridge Classifier Imported successfully
2025-06-20 02:03:21,506:INFO:Starting cross validation
2025-06-20 02:03:21,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:21,645:INFO:Calculating mean and std
2025-06-20 02:03:21,646:INFO:Creating metrics dataframe
2025-06-20 02:03:21,648:INFO:Uploading results into container
2025-06-20 02:03:21,649:INFO:Uploading model into container now
2025-06-20 02:03:21,649:INFO:_master_model_container: 6
2025-06-20 02:03:21,649:INFO:_display_container: 2
2025-06-20 02:03:21,650:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-20 02:03:21,650:INFO:create_model() successfully completed......................................
2025-06-20 02:03:21,772:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:21,772:INFO:Creating metrics dataframe
2025-06-20 02:03:21,778:INFO:Initializing Random Forest Classifier
2025-06-20 02:03:21,779:INFO:Total runtime is 0.03171357313791911 minutes
2025-06-20 02:03:21,783:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:21,783:INFO:Initializing create_model()
2025-06-20 02:03:21,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:21,783:INFO:Checking exceptions
2025-06-20 02:03:21,783:INFO:Importing libraries
2025-06-20 02:03:21,783:INFO:Copying training dataset
2025-06-20 02:03:21,787:INFO:Defining folds
2025-06-20 02:03:21,787:INFO:Declaring metric variables
2025-06-20 02:03:21,791:INFO:Importing untrained model
2025-06-20 02:03:21,797:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:03:21,805:INFO:Starting cross validation
2025-06-20 02:03:21,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:22,359:INFO:Calculating mean and std
2025-06-20 02:03:22,361:INFO:Creating metrics dataframe
2025-06-20 02:03:22,362:INFO:Uploading results into container
2025-06-20 02:03:22,363:INFO:Uploading model into container now
2025-06-20 02:03:22,363:INFO:_master_model_container: 7
2025-06-20 02:03:22,363:INFO:_display_container: 2
2025-06-20 02:03:22,363:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:03:22,363:INFO:create_model() successfully completed......................................
2025-06-20 02:03:22,501:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:22,501:INFO:Creating metrics dataframe
2025-06-20 02:03:22,508:INFO:Initializing Quadratic Discriminant Analysis
2025-06-20 02:03:22,508:INFO:Total runtime is 0.043860308329264325 minutes
2025-06-20 02:03:22,513:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:22,513:INFO:Initializing create_model()
2025-06-20 02:03:22,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:22,513:INFO:Checking exceptions
2025-06-20 02:03:22,513:INFO:Importing libraries
2025-06-20 02:03:22,513:INFO:Copying training dataset
2025-06-20 02:03:22,519:INFO:Defining folds
2025-06-20 02:03:22,519:INFO:Declaring metric variables
2025-06-20 02:03:22,524:INFO:Importing untrained model
2025-06-20 02:03:22,531:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:03:22,539:INFO:Starting cross validation
2025-06-20 02:03:22,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:22,593:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,598:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,605:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,605:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,612:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,612:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,616:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,623:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,625:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:22,672:INFO:Calculating mean and std
2025-06-20 02:03:22,673:INFO:Creating metrics dataframe
2025-06-20 02:03:22,675:INFO:Uploading results into container
2025-06-20 02:03:22,675:INFO:Uploading model into container now
2025-06-20 02:03:22,676:INFO:_master_model_container: 8
2025-06-20 02:03:22,676:INFO:_display_container: 2
2025-06-20 02:03:22,676:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:03:22,676:INFO:create_model() successfully completed......................................
2025-06-20 02:03:22,801:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:22,801:INFO:Creating metrics dataframe
2025-06-20 02:03:22,808:INFO:Initializing Ada Boost Classifier
2025-06-20 02:03:22,808:INFO:Total runtime is 0.048854625225067144 minutes
2025-06-20 02:03:22,815:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:22,815:INFO:Initializing create_model()
2025-06-20 02:03:22,816:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:22,816:INFO:Checking exceptions
2025-06-20 02:03:22,816:INFO:Importing libraries
2025-06-20 02:03:22,816:INFO:Copying training dataset
2025-06-20 02:03:22,820:INFO:Defining folds
2025-06-20 02:03:22,820:INFO:Declaring metric variables
2025-06-20 02:03:22,829:INFO:Importing untrained model
2025-06-20 02:03:22,836:INFO:Ada Boost Classifier Imported successfully
2025-06-20 02:03:22,847:INFO:Starting cross validation
2025-06-20 02:03:22,848:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:22,907:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,911:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,914:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,915:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,915:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,919:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,923:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,927:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,930:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:22,931:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:03:23,140:INFO:Calculating mean and std
2025-06-20 02:03:23,141:INFO:Creating metrics dataframe
2025-06-20 02:03:23,142:INFO:Uploading results into container
2025-06-20 02:03:23,143:INFO:Uploading model into container now
2025-06-20 02:03:23,143:INFO:_master_model_container: 9
2025-06-20 02:03:23,144:INFO:_display_container: 2
2025-06-20 02:03:23,144:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-20 02:03:23,144:INFO:create_model() successfully completed......................................
2025-06-20 02:03:23,270:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:23,270:INFO:Creating metrics dataframe
2025-06-20 02:03:23,277:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:03:23,278:INFO:Total runtime is 0.05668816169102987 minutes
2025-06-20 02:03:23,282:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:23,282:INFO:Initializing create_model()
2025-06-20 02:03:23,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:23,282:INFO:Checking exceptions
2025-06-20 02:03:23,282:INFO:Importing libraries
2025-06-20 02:03:23,282:INFO:Copying training dataset
2025-06-20 02:03:23,286:INFO:Defining folds
2025-06-20 02:03:23,286:INFO:Declaring metric variables
2025-06-20 02:03:23,291:INFO:Importing untrained model
2025-06-20 02:03:23,295:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:03:23,303:INFO:Starting cross validation
2025-06-20 02:03:23,304:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:23,656:INFO:Calculating mean and std
2025-06-20 02:03:23,657:INFO:Creating metrics dataframe
2025-06-20 02:03:23,659:INFO:Uploading results into container
2025-06-20 02:03:23,659:INFO:Uploading model into container now
2025-06-20 02:03:23,660:INFO:_master_model_container: 10
2025-06-20 02:03:23,660:INFO:_display_container: 2
2025-06-20 02:03:23,660:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:03:23,660:INFO:create_model() successfully completed......................................
2025-06-20 02:03:23,787:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:23,787:INFO:Creating metrics dataframe
2025-06-20 02:03:23,794:INFO:Initializing Linear Discriminant Analysis
2025-06-20 02:03:23,795:INFO:Total runtime is 0.06531093915303549 minutes
2025-06-20 02:03:23,799:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:23,799:INFO:Initializing create_model()
2025-06-20 02:03:23,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:23,799:INFO:Checking exceptions
2025-06-20 02:03:23,799:INFO:Importing libraries
2025-06-20 02:03:23,799:INFO:Copying training dataset
2025-06-20 02:03:23,803:INFO:Defining folds
2025-06-20 02:03:23,803:INFO:Declaring metric variables
2025-06-20 02:03:23,807:INFO:Importing untrained model
2025-06-20 02:03:23,812:INFO:Linear Discriminant Analysis Imported successfully
2025-06-20 02:03:23,820:INFO:Starting cross validation
2025-06-20 02:03:23,821:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:23,968:INFO:Calculating mean and std
2025-06-20 02:03:23,969:INFO:Creating metrics dataframe
2025-06-20 02:03:23,970:INFO:Uploading results into container
2025-06-20 02:03:23,971:INFO:Uploading model into container now
2025-06-20 02:03:23,972:INFO:_master_model_container: 11
2025-06-20 02:03:23,972:INFO:_display_container: 2
2025-06-20 02:03:23,972:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-20 02:03:23,972:INFO:create_model() successfully completed......................................
2025-06-20 02:03:24,096:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:24,096:INFO:Creating metrics dataframe
2025-06-20 02:03:24,104:INFO:Initializing Extra Trees Classifier
2025-06-20 02:03:24,104:INFO:Total runtime is 0.07044881582260132 minutes
2025-06-20 02:03:24,108:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:24,108:INFO:Initializing create_model()
2025-06-20 02:03:24,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:24,109:INFO:Checking exceptions
2025-06-20 02:03:24,109:INFO:Importing libraries
2025-06-20 02:03:24,109:INFO:Copying training dataset
2025-06-20 02:03:24,112:INFO:Defining folds
2025-06-20 02:03:24,112:INFO:Declaring metric variables
2025-06-20 02:03:24,117:INFO:Importing untrained model
2025-06-20 02:03:24,121:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:03:24,129:INFO:Starting cross validation
2025-06-20 02:03:24,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:24,591:INFO:Calculating mean and std
2025-06-20 02:03:24,592:INFO:Creating metrics dataframe
2025-06-20 02:03:24,594:INFO:Uploading results into container
2025-06-20 02:03:24,594:INFO:Uploading model into container now
2025-06-20 02:03:24,595:INFO:_master_model_container: 12
2025-06-20 02:03:24,595:INFO:_display_container: 2
2025-06-20 02:03:24,595:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:03:24,595:INFO:create_model() successfully completed......................................
2025-06-20 02:03:24,725:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:24,725:INFO:Creating metrics dataframe
2025-06-20 02:03:24,733:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:03:24,733:INFO:Total runtime is 0.08093514442443847 minutes
2025-06-20 02:03:24,739:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:24,739:INFO:Initializing create_model()
2025-06-20 02:03:24,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:24,739:INFO:Checking exceptions
2025-06-20 02:03:24,739:INFO:Importing libraries
2025-06-20 02:03:24,739:INFO:Copying training dataset
2025-06-20 02:03:24,743:INFO:Defining folds
2025-06-20 02:03:24,743:INFO:Declaring metric variables
2025-06-20 02:03:24,747:INFO:Importing untrained model
2025-06-20 02:03:24,753:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:03:24,763:INFO:Starting cross validation
2025-06-20 02:03:24,765:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:25,093:INFO:Calculating mean and std
2025-06-20 02:03:25,094:INFO:Creating metrics dataframe
2025-06-20 02:03:25,096:INFO:Uploading results into container
2025-06-20 02:03:25,096:INFO:Uploading model into container now
2025-06-20 02:03:25,096:INFO:_master_model_container: 13
2025-06-20 02:03:25,097:INFO:_display_container: 2
2025-06-20 02:03:25,097:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:03:25,097:INFO:create_model() successfully completed......................................
2025-06-20 02:03:25,222:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:25,222:INFO:Creating metrics dataframe
2025-06-20 02:03:25,230:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:03:25,230:INFO:Total runtime is 0.08922132651011148 minutes
2025-06-20 02:03:25,234:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:25,235:INFO:Initializing create_model()
2025-06-20 02:03:25,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:25,235:INFO:Checking exceptions
2025-06-20 02:03:25,235:INFO:Importing libraries
2025-06-20 02:03:25,235:INFO:Copying training dataset
2025-06-20 02:03:25,238:INFO:Defining folds
2025-06-20 02:03:25,239:INFO:Declaring metric variables
2025-06-20 02:03:25,244:INFO:Importing untrained model
2025-06-20 02:03:25,248:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:03:25,257:INFO:Starting cross validation
2025-06-20 02:03:25,258:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:35,277:INFO:Calculating mean and std
2025-06-20 02:03:35,279:INFO:Creating metrics dataframe
2025-06-20 02:03:35,281:INFO:Uploading results into container
2025-06-20 02:03:35,281:INFO:Uploading model into container now
2025-06-20 02:03:35,281:INFO:_master_model_container: 14
2025-06-20 02:03:35,282:INFO:_display_container: 2
2025-06-20 02:03:35,282:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:03:35,283:INFO:create_model() successfully completed......................................
2025-06-20 02:03:35,432:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:35,433:INFO:Creating metrics dataframe
2025-06-20 02:03:35,441:INFO:Initializing CatBoost Classifier
2025-06-20 02:03:35,441:INFO:Total runtime is 0.2594061533610026 minutes
2025-06-20 02:03:35,445:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:35,446:INFO:Initializing create_model()
2025-06-20 02:03:35,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:35,446:INFO:Checking exceptions
2025-06-20 02:03:35,446:INFO:Importing libraries
2025-06-20 02:03:35,446:INFO:Copying training dataset
2025-06-20 02:03:35,449:INFO:Defining folds
2025-06-20 02:03:35,451:INFO:Declaring metric variables
2025-06-20 02:03:35,455:INFO:Importing untrained model
2025-06-20 02:03:35,459:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:03:35,468:INFO:Starting cross validation
2025-06-20 02:03:35,469:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:40,952:INFO:Calculating mean and std
2025-06-20 02:03:40,953:INFO:Creating metrics dataframe
2025-06-20 02:03:40,955:INFO:Uploading results into container
2025-06-20 02:03:40,956:INFO:Uploading model into container now
2025-06-20 02:03:40,956:INFO:_master_model_container: 15
2025-06-20 02:03:40,957:INFO:_display_container: 2
2025-06-20 02:03:40,957:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A82E314C0>
2025-06-20 02:03:40,957:INFO:create_model() successfully completed......................................
2025-06-20 02:03:41,079:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:41,079:INFO:Creating metrics dataframe
2025-06-20 02:03:41,087:INFO:Initializing Dummy Classifier
2025-06-20 02:03:41,087:INFO:Total runtime is 0.3535119613011678 minutes
2025-06-20 02:03:41,091:INFO:SubProcess create_model() called ==================================
2025-06-20 02:03:41,091:INFO:Initializing create_model()
2025-06-20 02:03:41,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A82E8C5B0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:41,091:INFO:Checking exceptions
2025-06-20 02:03:41,091:INFO:Importing libraries
2025-06-20 02:03:41,091:INFO:Copying training dataset
2025-06-20 02:03:41,096:INFO:Defining folds
2025-06-20 02:03:41,096:INFO:Declaring metric variables
2025-06-20 02:03:41,101:INFO:Importing untrained model
2025-06-20 02:03:41,105:INFO:Dummy Classifier Imported successfully
2025-06-20 02:03:41,113:INFO:Starting cross validation
2025-06-20 02:03:41,115:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:03:41,196:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,211:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,215:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,223:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,233:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:03:41,297:INFO:Calculating mean and std
2025-06-20 02:03:41,298:INFO:Creating metrics dataframe
2025-06-20 02:03:41,300:INFO:Uploading results into container
2025-06-20 02:03:41,300:INFO:Uploading model into container now
2025-06-20 02:03:41,301:INFO:_master_model_container: 16
2025-06-20 02:03:41,301:INFO:_display_container: 2
2025-06-20 02:03:41,301:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-20 02:03:41,301:INFO:create_model() successfully completed......................................
2025-06-20 02:03:41,427:INFO:SubProcess create_model() end ==================================
2025-06-20 02:03:41,427:INFO:Creating metrics dataframe
2025-06-20 02:03:41,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:03:41,445:INFO:Initializing create_model()
2025-06-20 02:03:41,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:03:41,445:INFO:Checking exceptions
2025-06-20 02:03:41,446:INFO:Importing libraries
2025-06-20 02:03:41,446:INFO:Copying training dataset
2025-06-20 02:03:41,449:INFO:Defining folds
2025-06-20 02:03:41,449:INFO:Declaring metric variables
2025-06-20 02:03:41,449:INFO:Importing untrained model
2025-06-20 02:03:41,449:INFO:Declaring custom model
2025-06-20 02:03:41,450:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:03:41,451:INFO:Cross validation set to False
2025-06-20 02:03:41,451:INFO:Fitting Model
2025-06-20 02:03:41,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:03:41,491:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:03:41,491:INFO:create_model() successfully completed......................................
2025-06-20 02:03:41,640:INFO:_master_model_container: 16
2025-06-20 02:03:41,640:INFO:_display_container: 2
2025-06-20 02:03:41,640:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:03:41,640:INFO:compare_models() successfully completed......................................
2025-06-20 02:03:41,641:INFO:Initializing evaluate_model()
2025-06-20 02:03:41,641:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-06-20 02:03:41,648:INFO:Initializing plot_model()
2025-06-20 02:03:41,648:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:03:41,648:INFO:Checking exceptions
2025-06-20 02:03:41,649:INFO:Preloading libraries
2025-06-20 02:03:41,649:INFO:Copying training dataset
2025-06-20 02:03:41,650:INFO:Plot type: pipeline
2025-06-20 02:03:41,779:INFO:Visual Rendered Successfully
2025-06-20 02:03:41,913:INFO:plot_model() successfully completed......................................
2025-06-20 02:04:00,080:INFO:Initializing plot_model()
2025-06-20 02:04:00,080:INFO:plot_model(plot=rfe, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:00,080:INFO:Checking exceptions
2025-06-20 02:04:03,185:INFO:Initializing plot_model()
2025-06-20 02:04:03,185:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:03,185:INFO:Checking exceptions
2025-06-20 02:04:03,187:INFO:Preloading libraries
2025-06-20 02:04:03,187:INFO:Copying training dataset
2025-06-20 02:04:03,187:INFO:Plot type: class_report
2025-06-20 02:04:03,319:INFO:Fitting Model
2025-06-20 02:04:03,319:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but QuadraticDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2025-06-20 02:04:03,319:INFO:Scoring test/hold-out set
2025-06-20 02:04:03,480:INFO:Visual Rendered Successfully
2025-06-20 02:04:03,613:INFO:plot_model() successfully completed......................................
2025-06-20 02:04:13,283:INFO:Initializing plot_model()
2025-06-20 02:04:13,284:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:13,284:INFO:Checking exceptions
2025-06-20 02:04:13,286:INFO:Preloading libraries
2025-06-20 02:04:13,286:INFO:Copying training dataset
2025-06-20 02:04:13,286:INFO:Plot type: confusion_matrix
2025-06-20 02:04:13,393:INFO:Fitting Model
2025-06-20 02:04:13,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but QuadraticDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2025-06-20 02:04:13,394:INFO:Scoring test/hold-out set
2025-06-20 02:04:13,487:INFO:Visual Rendered Successfully
2025-06-20 02:04:13,626:INFO:plot_model() successfully completed......................................
2025-06-20 02:04:19,868:INFO:Initializing plot_model()
2025-06-20 02:04:19,868:INFO:plot_model(plot=learning, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:19,868:INFO:Checking exceptions
2025-06-20 02:04:19,871:INFO:Preloading libraries
2025-06-20 02:04:19,871:INFO:Copying training dataset
2025-06-20 02:04:19,871:INFO:Plot type: learning
2025-06-20 02:04:19,988:INFO:Fitting Model
2025-06-20 02:04:20,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,014:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,017:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,020:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,021:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,023:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,024:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,026:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,027:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,029:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,031:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,032:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,034:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,035:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,036:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,037:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,041:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,042:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,043:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,044:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,046:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,047:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,049:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,051:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,052:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,054:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,055:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,056:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,059:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,061:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,062:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,063:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,064:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,065:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,066:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,068:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,070:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,071:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,072:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,074:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,075:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,076:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,078:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,079:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,080:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,081:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,082:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,084:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,086:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,087:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,088:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,089:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,091:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,092:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,093:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,095:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,097:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,098:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,100:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,101:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,102:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,103:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,104:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,106:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,107:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,109:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,111:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,112:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,113:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,114:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,115:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,117:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,118:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,119:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,120:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,122:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,124:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,126:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,128:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,129:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,131:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,132:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,134:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,136:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,137:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,140:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,142:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,143:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:04:20,303:INFO:Visual Rendered Successfully
2025-06-20 02:04:20,444:INFO:plot_model() successfully completed......................................
2025-06-20 02:04:26,607:INFO:Initializing plot_model()
2025-06-20 02:04:26,607:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:26,607:INFO:Checking exceptions
2025-06-20 02:04:26,609:INFO:Preloading libraries
2025-06-20 02:04:26,609:INFO:Copying training dataset
2025-06-20 02:04:26,609:INFO:Plot type: pipeline
2025-06-20 02:04:26,733:INFO:Visual Rendered Successfully
2025-06-20 02:04:26,868:INFO:plot_model() successfully completed......................................
2025-06-20 02:04:38,627:INFO:Initializing plot_model()
2025-06-20 02:04:38,627:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:38,627:INFO:Checking exceptions
2025-06-20 02:04:40,202:INFO:Initializing plot_model()
2025-06-20 02:04:40,203:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:40,204:INFO:Checking exceptions
2025-06-20 02:04:40,205:INFO:Preloading libraries
2025-06-20 02:04:40,206:INFO:Copying training dataset
2025-06-20 02:04:40,206:INFO:Plot type: gain
2025-06-20 02:04:40,206:INFO:Generating predictions / predict_proba on X_test
2025-06-20 02:04:40,400:INFO:Visual Rendered Successfully
2025-06-20 02:04:40,545:INFO:plot_model() successfully completed......................................
2025-06-20 02:04:59,103:INFO:Initializing plot_model()
2025-06-20 02:04:59,104:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:04:59,104:INFO:Checking exceptions
2025-06-20 02:04:59,106:INFO:Preloading libraries
2025-06-20 02:04:59,106:INFO:Copying training dataset
2025-06-20 02:04:59,106:INFO:Plot type: confusion_matrix
2025-06-20 02:04:59,217:INFO:Fitting Model
2025-06-20 02:04:59,217:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but QuadraticDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2025-06-20 02:04:59,217:INFO:Scoring test/hold-out set
2025-06-20 02:04:59,310:INFO:Visual Rendered Successfully
2025-06-20 02:04:59,447:INFO:plot_model() successfully completed......................................
2025-06-20 02:05:02,705:INFO:Initializing plot_model()
2025-06-20 02:05:02,705:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A8304E430>, system=True)
2025-06-20 02:05:02,705:INFO:Checking exceptions
2025-06-20 02:06:28,297:INFO:PyCaret ClassificationExperiment
2025-06-20 02:06:28,297:INFO:Logging name: clf-default-name
2025-06-20 02:06:28,298:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:06:28,298:INFO:version 3.3.2
2025-06-20 02:06:28,298:INFO:Initializing setup()
2025-06-20 02:06:28,298:INFO:self.USI: d9b1
2025-06-20 02:06:28,298:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:06:28,298:INFO:Checking environment
2025-06-20 02:06:28,298:INFO:python_version: 3.9.21
2025-06-20 02:06:28,298:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:06:28,298:INFO:machine: AMD64
2025-06-20 02:06:28,298:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:06:28,298:INFO:Memory: svmem(total=25372119040, available=3436441600, percent=86.5, used=21935677440, free=3436441600)
2025-06-20 02:06:28,298:INFO:Physical Core: 10
2025-06-20 02:06:28,298:INFO:Logical Core: 16
2025-06-20 02:06:28,298:INFO:Checking libraries
2025-06-20 02:06:28,299:INFO:System:
2025-06-20 02:06:28,299:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:06:28,299:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:06:28,299:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:06:28,299:INFO:PyCaret required dependencies:
2025-06-20 02:06:28,299:INFO:                 pip: 24.2
2025-06-20 02:06:28,299:INFO:          setuptools: 75.1.0
2025-06-20 02:06:28,299:INFO:             pycaret: 3.3.2
2025-06-20 02:06:28,299:INFO:             IPython: 8.12.0
2025-06-20 02:06:28,299:INFO:          ipywidgets: 8.1.5
2025-06-20 02:06:28,299:INFO:                tqdm: 4.67.1
2025-06-20 02:06:28,299:INFO:               numpy: 1.26.4
2025-06-20 02:06:28,299:INFO:              pandas: 2.1.4
2025-06-20 02:06:28,299:INFO:              jinja2: 3.1.5
2025-06-20 02:06:28,299:INFO:               scipy: 1.11.4
2025-06-20 02:06:28,299:INFO:              joblib: 1.3.2
2025-06-20 02:06:28,299:INFO:             sklearn: 1.4.2
2025-06-20 02:06:28,299:INFO:                pyod: 2.0.3
2025-06-20 02:06:28,299:INFO:            imblearn: 0.12.4
2025-06-20 02:06:28,299:INFO:   category_encoders: 2.6.4
2025-06-20 02:06:28,299:INFO:            lightgbm: 4.6.0
2025-06-20 02:06:28,299:INFO:               numba: 0.60.0
2025-06-20 02:06:28,299:INFO:            requests: 2.32.3
2025-06-20 02:06:28,300:INFO:          matplotlib: 3.7.5
2025-06-20 02:06:28,300:INFO:          scikitplot: 0.3.7
2025-06-20 02:06:28,300:INFO:         yellowbrick: 1.5
2025-06-20 02:06:28,300:INFO:              plotly: 5.24.1
2025-06-20 02:06:28,300:INFO:    plotly-resampler: Not installed
2025-06-20 02:06:28,300:INFO:             kaleido: 0.2.1
2025-06-20 02:06:28,300:INFO:           schemdraw: 0.15
2025-06-20 02:06:28,300:INFO:         statsmodels: 0.14.4
2025-06-20 02:06:28,300:INFO:              sktime: 0.26.0
2025-06-20 02:06:28,300:INFO:               tbats: 1.1.3
2025-06-20 02:06:28,300:INFO:            pmdarima: 2.0.4
2025-06-20 02:06:28,300:INFO:              psutil: 5.9.0
2025-06-20 02:06:28,300:INFO:          markupsafe: 2.1.5
2025-06-20 02:06:28,300:INFO:             pickle5: Not installed
2025-06-20 02:06:28,300:INFO:         cloudpickle: 2.2.1
2025-06-20 02:06:28,300:INFO:         deprecation: 2.1.0
2025-06-20 02:06:28,300:INFO:              xxhash: 3.5.0
2025-06-20 02:06:28,300:INFO:           wurlitzer: Not installed
2025-06-20 02:06:28,300:INFO:PyCaret optional dependencies:
2025-06-20 02:06:28,300:INFO:                shap: 0.44.1
2025-06-20 02:06:28,300:INFO:           interpret: 0.6.10
2025-06-20 02:06:28,301:INFO:                umap: 0.5.7
2025-06-20 02:06:28,301:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:06:28,301:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:06:28,301:INFO:             autoviz: Not installed
2025-06-20 02:06:28,301:INFO:           fairlearn: 0.7.0
2025-06-20 02:06:28,301:INFO:          deepchecks: Not installed
2025-06-20 02:06:28,301:INFO:             xgboost: 2.1.4
2025-06-20 02:06:28,301:INFO:            catboost: 1.2.8
2025-06-20 02:06:28,301:INFO:              kmodes: 0.12.2
2025-06-20 02:06:28,301:INFO:             mlxtend: 0.23.4
2025-06-20 02:06:28,301:INFO:       statsforecast: 1.5.0
2025-06-20 02:06:28,301:INFO:        tune_sklearn: Not installed
2025-06-20 02:06:28,301:INFO:                 ray: Not installed
2025-06-20 02:06:28,301:INFO:            hyperopt: 0.2.7
2025-06-20 02:06:28,301:INFO:              optuna: 4.3.0
2025-06-20 02:06:28,301:INFO:               skopt: 0.10.2
2025-06-20 02:06:28,301:INFO:              mlflow: 2.22.0
2025-06-20 02:06:28,301:INFO:              gradio: Not installed
2025-06-20 02:06:28,301:INFO:             fastapi: 0.115.7
2025-06-20 02:06:28,301:INFO:             uvicorn: 0.34.0
2025-06-20 02:06:28,301:INFO:              m2cgen: 0.10.0
2025-06-20 02:06:28,302:INFO:           evidently: 0.4.40
2025-06-20 02:06:28,302:INFO:               fugue: 0.8.7
2025-06-20 02:06:28,302:INFO:           streamlit: Not installed
2025-06-20 02:06:28,302:INFO:             prophet: 1.1.6
2025-06-20 02:06:28,302:INFO:None
2025-06-20 02:06:28,302:INFO:Set up data.
2025-06-20 02:06:28,307:INFO:Set up folding strategy.
2025-06-20 02:06:28,308:INFO:Set up train/test split.
2025-06-20 02:06:28,312:INFO:Set up index.
2025-06-20 02:06:28,312:INFO:Assigning column types.
2025-06-20 02:06:28,315:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:06:28,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:06:28,345:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:06:28,362:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,364:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,394:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:06:28,395:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:06:28,413:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,414:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,415:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:06:28,446:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:06:28,464:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,466:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,496:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:06:28,519:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,521:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,522:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:06:28,569:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,571:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,618:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,620:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,621:INFO:Preparing preprocessing pipeline...
2025-06-20 02:06:28,622:INFO:Set up simple imputation.
2025-06-20 02:06:28,624:INFO:Set up encoding of categorical features.
2025-06-20 02:06:28,624:INFO:Set up feature normalization.
2025-06-20 02:06:28,672:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:06:28,675:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:06:28,676:INFO:Creating final display dataframe.
2025-06-20 02:06:28,792:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target       Personality
2                   Target type            Binary
3           Original data shape         (2900, 4)
4        Transformed data shape         (2900, 8)
5   Transformed train set shape         (2320, 8)
6    Transformed test set shape          (580, 8)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              d9b1
2025-06-20 02:06:28,838:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,840:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,887:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:06:28,889:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:06:28,890:INFO:setup() successfully completed in 0.6s...............
2025-06-20 02:06:28,890:INFO:Initializing compare_models()
2025-06-20 02:06:28,890:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:06:28,890:INFO:Checking exceptions
2025-06-20 02:06:28,892:INFO:Preparing display monitor
2025-06-20 02:06:28,920:INFO:Initializing Logistic Regression
2025-06-20 02:06:28,921:INFO:Total runtime is 1.666545867919922e-05 minutes
2025-06-20 02:06:28,925:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:28,925:INFO:Initializing create_model()
2025-06-20 02:06:28,925:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:28,925:INFO:Checking exceptions
2025-06-20 02:06:28,925:INFO:Importing libraries
2025-06-20 02:06:28,925:INFO:Copying training dataset
2025-06-20 02:06:28,930:INFO:Defining folds
2025-06-20 02:06:28,930:INFO:Declaring metric variables
2025-06-20 02:06:28,934:INFO:Importing untrained model
2025-06-20 02:06:28,940:INFO:Logistic Regression Imported successfully
2025-06-20 02:06:28,949:INFO:Starting cross validation
2025-06-20 02:06:28,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:29,083:INFO:Calculating mean and std
2025-06-20 02:06:29,084:INFO:Creating metrics dataframe
2025-06-20 02:06:29,086:INFO:Uploading results into container
2025-06-20 02:06:29,086:INFO:Uploading model into container now
2025-06-20 02:06:29,086:INFO:_master_model_container: 1
2025-06-20 02:06:29,086:INFO:_display_container: 2
2025-06-20 02:06:29,086:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-20 02:06:29,086:INFO:create_model() successfully completed......................................
2025-06-20 02:06:29,225:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:29,225:INFO:Creating metrics dataframe
2025-06-20 02:06:29,231:INFO:Initializing K Neighbors Classifier
2025-06-20 02:06:29,231:INFO:Total runtime is 0.005182929833730063 minutes
2025-06-20 02:06:29,235:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:29,236:INFO:Initializing create_model()
2025-06-20 02:06:29,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:29,236:INFO:Checking exceptions
2025-06-20 02:06:29,236:INFO:Importing libraries
2025-06-20 02:06:29,236:INFO:Copying training dataset
2025-06-20 02:06:29,239:INFO:Defining folds
2025-06-20 02:06:29,239:INFO:Declaring metric variables
2025-06-20 02:06:29,243:INFO:Importing untrained model
2025-06-20 02:06:29,249:INFO:K Neighbors Classifier Imported successfully
2025-06-20 02:06:29,258:INFO:Starting cross validation
2025-06-20 02:06:29,260:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:29,471:INFO:Calculating mean and std
2025-06-20 02:06:29,472:INFO:Creating metrics dataframe
2025-06-20 02:06:29,473:INFO:Uploading results into container
2025-06-20 02:06:29,473:INFO:Uploading model into container now
2025-06-20 02:06:29,474:INFO:_master_model_container: 2
2025-06-20 02:06:29,474:INFO:_display_container: 2
2025-06-20 02:06:29,474:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-20 02:06:29,474:INFO:create_model() successfully completed......................................
2025-06-20 02:06:29,610:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:29,610:INFO:Creating metrics dataframe
2025-06-20 02:06:29,616:INFO:Initializing Naive Bayes
2025-06-20 02:06:29,616:INFO:Total runtime is 0.011601380507151288 minutes
2025-06-20 02:06:29,620:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:29,620:INFO:Initializing create_model()
2025-06-20 02:06:29,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:29,621:INFO:Checking exceptions
2025-06-20 02:06:29,621:INFO:Importing libraries
2025-06-20 02:06:29,621:INFO:Copying training dataset
2025-06-20 02:06:29,623:INFO:Defining folds
2025-06-20 02:06:29,624:INFO:Declaring metric variables
2025-06-20 02:06:29,627:INFO:Importing untrained model
2025-06-20 02:06:29,632:INFO:Naive Bayes Imported successfully
2025-06-20 02:06:29,642:INFO:Starting cross validation
2025-06-20 02:06:29,644:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:29,814:INFO:Calculating mean and std
2025-06-20 02:06:29,814:INFO:Creating metrics dataframe
2025-06-20 02:06:29,816:INFO:Uploading results into container
2025-06-20 02:06:29,816:INFO:Uploading model into container now
2025-06-20 02:06:29,816:INFO:_master_model_container: 3
2025-06-20 02:06:29,816:INFO:_display_container: 2
2025-06-20 02:06:29,816:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:06:29,816:INFO:create_model() successfully completed......................................
2025-06-20 02:06:29,960:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:29,960:INFO:Creating metrics dataframe
2025-06-20 02:06:29,966:INFO:Initializing Decision Tree Classifier
2025-06-20 02:06:29,966:INFO:Total runtime is 0.017433945337931318 minutes
2025-06-20 02:06:29,970:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:29,971:INFO:Initializing create_model()
2025-06-20 02:06:29,971:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:29,971:INFO:Checking exceptions
2025-06-20 02:06:29,971:INFO:Importing libraries
2025-06-20 02:06:29,971:INFO:Copying training dataset
2025-06-20 02:06:29,974:INFO:Defining folds
2025-06-20 02:06:29,974:INFO:Declaring metric variables
2025-06-20 02:06:29,979:INFO:Importing untrained model
2025-06-20 02:06:29,984:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:06:29,993:INFO:Starting cross validation
2025-06-20 02:06:29,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:30,127:INFO:Calculating mean and std
2025-06-20 02:06:30,128:INFO:Creating metrics dataframe
2025-06-20 02:06:30,130:INFO:Uploading results into container
2025-06-20 02:06:30,131:INFO:Uploading model into container now
2025-06-20 02:06:30,131:INFO:_master_model_container: 4
2025-06-20 02:06:30,131:INFO:_display_container: 2
2025-06-20 02:06:30,131:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:06:30,131:INFO:create_model() successfully completed......................................
2025-06-20 02:06:30,274:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:30,275:INFO:Creating metrics dataframe
2025-06-20 02:06:30,281:INFO:Initializing SVM - Linear Kernel
2025-06-20 02:06:30,281:INFO:Total runtime is 0.02268251975377401 minutes
2025-06-20 02:06:30,286:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:30,286:INFO:Initializing create_model()
2025-06-20 02:06:30,286:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:30,286:INFO:Checking exceptions
2025-06-20 02:06:30,286:INFO:Importing libraries
2025-06-20 02:06:30,286:INFO:Copying training dataset
2025-06-20 02:06:30,289:INFO:Defining folds
2025-06-20 02:06:30,290:INFO:Declaring metric variables
2025-06-20 02:06:30,294:INFO:Importing untrained model
2025-06-20 02:06:30,298:INFO:SVM - Linear Kernel Imported successfully
2025-06-20 02:06:30,307:INFO:Starting cross validation
2025-06-20 02:06:30,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:30,439:INFO:Calculating mean and std
2025-06-20 02:06:30,440:INFO:Creating metrics dataframe
2025-06-20 02:06:30,442:INFO:Uploading results into container
2025-06-20 02:06:30,442:INFO:Uploading model into container now
2025-06-20 02:06:30,443:INFO:_master_model_container: 5
2025-06-20 02:06:30,443:INFO:_display_container: 2
2025-06-20 02:06:30,443:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-20 02:06:30,443:INFO:create_model() successfully completed......................................
2025-06-20 02:06:30,585:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:30,585:INFO:Creating metrics dataframe
2025-06-20 02:06:30,591:INFO:Initializing Ridge Classifier
2025-06-20 02:06:30,591:INFO:Total runtime is 0.027850941816965742 minutes
2025-06-20 02:06:30,596:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:30,596:INFO:Initializing create_model()
2025-06-20 02:06:30,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:30,597:INFO:Checking exceptions
2025-06-20 02:06:30,597:INFO:Importing libraries
2025-06-20 02:06:30,597:INFO:Copying training dataset
2025-06-20 02:06:30,600:INFO:Defining folds
2025-06-20 02:06:30,600:INFO:Declaring metric variables
2025-06-20 02:06:30,605:INFO:Importing untrained model
2025-06-20 02:06:30,610:INFO:Ridge Classifier Imported successfully
2025-06-20 02:06:30,618:INFO:Starting cross validation
2025-06-20 02:06:30,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:30,738:INFO:Calculating mean and std
2025-06-20 02:06:30,739:INFO:Creating metrics dataframe
2025-06-20 02:06:30,741:INFO:Uploading results into container
2025-06-20 02:06:30,742:INFO:Uploading model into container now
2025-06-20 02:06:30,742:INFO:_master_model_container: 6
2025-06-20 02:06:30,742:INFO:_display_container: 2
2025-06-20 02:06:30,743:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-20 02:06:30,743:INFO:create_model() successfully completed......................................
2025-06-20 02:06:30,884:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:30,884:INFO:Creating metrics dataframe
2025-06-20 02:06:30,892:INFO:Initializing Random Forest Classifier
2025-06-20 02:06:30,892:INFO:Total runtime is 0.032864038149515794 minutes
2025-06-20 02:06:30,898:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:30,898:INFO:Initializing create_model()
2025-06-20 02:06:30,898:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:30,898:INFO:Checking exceptions
2025-06-20 02:06:30,898:INFO:Importing libraries
2025-06-20 02:06:30,898:INFO:Copying training dataset
2025-06-20 02:06:30,901:INFO:Defining folds
2025-06-20 02:06:30,901:INFO:Declaring metric variables
2025-06-20 02:06:30,906:INFO:Importing untrained model
2025-06-20 02:06:30,911:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:06:30,920:INFO:Starting cross validation
2025-06-20 02:06:30,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:31,421:INFO:Calculating mean and std
2025-06-20 02:06:31,422:INFO:Creating metrics dataframe
2025-06-20 02:06:31,424:INFO:Uploading results into container
2025-06-20 02:06:31,424:INFO:Uploading model into container now
2025-06-20 02:06:31,425:INFO:_master_model_container: 7
2025-06-20 02:06:31,425:INFO:_display_container: 2
2025-06-20 02:06:31,425:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:06:31,425:INFO:create_model() successfully completed......................................
2025-06-20 02:06:31,569:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:31,569:INFO:Creating metrics dataframe
2025-06-20 02:06:31,575:INFO:Initializing Quadratic Discriminant Analysis
2025-06-20 02:06:31,575:INFO:Total runtime is 0.04424721002578736 minutes
2025-06-20 02:06:31,579:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:31,580:INFO:Initializing create_model()
2025-06-20 02:06:31,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:31,580:INFO:Checking exceptions
2025-06-20 02:06:31,580:INFO:Importing libraries
2025-06-20 02:06:31,580:INFO:Copying training dataset
2025-06-20 02:06:31,583:INFO:Defining folds
2025-06-20 02:06:31,583:INFO:Declaring metric variables
2025-06-20 02:06:31,587:INFO:Importing untrained model
2025-06-20 02:06:31,592:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:06:31,600:INFO:Starting cross validation
2025-06-20 02:06:31,601:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:31,648:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,654:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,660:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,663:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,663:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,668:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:31,719:INFO:Calculating mean and std
2025-06-20 02:06:31,721:INFO:Creating metrics dataframe
2025-06-20 02:06:31,722:INFO:Uploading results into container
2025-06-20 02:06:31,723:INFO:Uploading model into container now
2025-06-20 02:06:31,723:INFO:_master_model_container: 8
2025-06-20 02:06:31,723:INFO:_display_container: 2
2025-06-20 02:06:31,723:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:31,723:INFO:create_model() successfully completed......................................
2025-06-20 02:06:31,868:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:31,868:INFO:Creating metrics dataframe
2025-06-20 02:06:31,876:INFO:Initializing Ada Boost Classifier
2025-06-20 02:06:31,877:INFO:Total runtime is 0.04928076267242432 minutes
2025-06-20 02:06:31,882:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:31,882:INFO:Initializing create_model()
2025-06-20 02:06:31,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:31,882:INFO:Checking exceptions
2025-06-20 02:06:31,882:INFO:Importing libraries
2025-06-20 02:06:31,882:INFO:Copying training dataset
2025-06-20 02:06:31,885:INFO:Defining folds
2025-06-20 02:06:31,885:INFO:Declaring metric variables
2025-06-20 02:06:31,890:INFO:Importing untrained model
2025-06-20 02:06:31,895:INFO:Ada Boost Classifier Imported successfully
2025-06-20 02:06:31,903:INFO:Starting cross validation
2025-06-20 02:06:31,905:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:31,957:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,960:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,970:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,971:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,972:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,973:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,981:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:31,981:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:06:32,170:INFO:Calculating mean and std
2025-06-20 02:06:32,171:INFO:Creating metrics dataframe
2025-06-20 02:06:32,173:INFO:Uploading results into container
2025-06-20 02:06:32,173:INFO:Uploading model into container now
2025-06-20 02:06:32,174:INFO:_master_model_container: 9
2025-06-20 02:06:32,174:INFO:_display_container: 2
2025-06-20 02:06:32,174:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-20 02:06:32,174:INFO:create_model() successfully completed......................................
2025-06-20 02:06:32,312:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:32,312:INFO:Creating metrics dataframe
2025-06-20 02:06:32,318:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:06:32,318:INFO:Total runtime is 0.056633218129475915 minutes
2025-06-20 02:06:32,322:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:32,323:INFO:Initializing create_model()
2025-06-20 02:06:32,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:32,323:INFO:Checking exceptions
2025-06-20 02:06:32,323:INFO:Importing libraries
2025-06-20 02:06:32,323:INFO:Copying training dataset
2025-06-20 02:06:32,326:INFO:Defining folds
2025-06-20 02:06:32,327:INFO:Declaring metric variables
2025-06-20 02:06:32,331:INFO:Importing untrained model
2025-06-20 02:06:32,336:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:06:32,347:INFO:Starting cross validation
2025-06-20 02:06:32,348:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:32,701:INFO:Calculating mean and std
2025-06-20 02:06:32,702:INFO:Creating metrics dataframe
2025-06-20 02:06:32,703:INFO:Uploading results into container
2025-06-20 02:06:32,704:INFO:Uploading model into container now
2025-06-20 02:06:32,704:INFO:_master_model_container: 10
2025-06-20 02:06:32,704:INFO:_display_container: 2
2025-06-20 02:06:32,705:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:06:32,705:INFO:create_model() successfully completed......................................
2025-06-20 02:06:32,837:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:32,838:INFO:Creating metrics dataframe
2025-06-20 02:06:32,845:INFO:Initializing Linear Discriminant Analysis
2025-06-20 02:06:32,846:INFO:Total runtime is 0.06543219089508057 minutes
2025-06-20 02:06:32,849:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:32,850:INFO:Initializing create_model()
2025-06-20 02:06:32,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:32,850:INFO:Checking exceptions
2025-06-20 02:06:32,850:INFO:Importing libraries
2025-06-20 02:06:32,850:INFO:Copying training dataset
2025-06-20 02:06:32,853:INFO:Defining folds
2025-06-20 02:06:32,853:INFO:Declaring metric variables
2025-06-20 02:06:32,859:INFO:Importing untrained model
2025-06-20 02:06:32,863:INFO:Linear Discriminant Analysis Imported successfully
2025-06-20 02:06:32,871:INFO:Starting cross validation
2025-06-20 02:06:32,873:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:32,998:INFO:Calculating mean and std
2025-06-20 02:06:32,999:INFO:Creating metrics dataframe
2025-06-20 02:06:33,000:INFO:Uploading results into container
2025-06-20 02:06:33,001:INFO:Uploading model into container now
2025-06-20 02:06:33,001:INFO:_master_model_container: 11
2025-06-20 02:06:33,001:INFO:_display_container: 2
2025-06-20 02:06:33,002:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-20 02:06:33,002:INFO:create_model() successfully completed......................................
2025-06-20 02:06:33,136:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:33,136:INFO:Creating metrics dataframe
2025-06-20 02:06:33,143:INFO:Initializing Extra Trees Classifier
2025-06-20 02:06:33,143:INFO:Total runtime is 0.07038422425587972 minutes
2025-06-20 02:06:33,148:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:33,148:INFO:Initializing create_model()
2025-06-20 02:06:33,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:33,148:INFO:Checking exceptions
2025-06-20 02:06:33,148:INFO:Importing libraries
2025-06-20 02:06:33,148:INFO:Copying training dataset
2025-06-20 02:06:33,152:INFO:Defining folds
2025-06-20 02:06:33,152:INFO:Declaring metric variables
2025-06-20 02:06:33,157:INFO:Importing untrained model
2025-06-20 02:06:33,162:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:06:33,173:INFO:Starting cross validation
2025-06-20 02:06:33,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:33,619:INFO:Calculating mean and std
2025-06-20 02:06:33,620:INFO:Creating metrics dataframe
2025-06-20 02:06:33,621:INFO:Uploading results into container
2025-06-20 02:06:33,622:INFO:Uploading model into container now
2025-06-20 02:06:33,622:INFO:_master_model_container: 12
2025-06-20 02:06:33,623:INFO:_display_container: 2
2025-06-20 02:06:33,623:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:06:33,623:INFO:create_model() successfully completed......................................
2025-06-20 02:06:33,756:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:33,756:INFO:Creating metrics dataframe
2025-06-20 02:06:33,763:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:06:33,763:INFO:Total runtime is 0.08071662584940592 minutes
2025-06-20 02:06:33,767:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:33,767:INFO:Initializing create_model()
2025-06-20 02:06:33,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:33,767:INFO:Checking exceptions
2025-06-20 02:06:33,767:INFO:Importing libraries
2025-06-20 02:06:33,767:INFO:Copying training dataset
2025-06-20 02:06:33,770:INFO:Defining folds
2025-06-20 02:06:33,771:INFO:Declaring metric variables
2025-06-20 02:06:33,776:INFO:Importing untrained model
2025-06-20 02:06:33,781:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:06:33,790:INFO:Starting cross validation
2025-06-20 02:06:33,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:34,088:INFO:Calculating mean and std
2025-06-20 02:06:34,089:INFO:Creating metrics dataframe
2025-06-20 02:06:34,091:INFO:Uploading results into container
2025-06-20 02:06:34,091:INFO:Uploading model into container now
2025-06-20 02:06:34,091:INFO:_master_model_container: 13
2025-06-20 02:06:34,092:INFO:_display_container: 2
2025-06-20 02:06:34,092:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:06:34,092:INFO:create_model() successfully completed......................................
2025-06-20 02:06:34,230:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:34,230:INFO:Creating metrics dataframe
2025-06-20 02:06:34,238:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:06:34,238:INFO:Total runtime is 0.08864562114079794 minutes
2025-06-20 02:06:34,242:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:34,243:INFO:Initializing create_model()
2025-06-20 02:06:34,243:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:34,243:INFO:Checking exceptions
2025-06-20 02:06:34,243:INFO:Importing libraries
2025-06-20 02:06:34,243:INFO:Copying training dataset
2025-06-20 02:06:34,246:INFO:Defining folds
2025-06-20 02:06:34,246:INFO:Declaring metric variables
2025-06-20 02:06:34,250:INFO:Importing untrained model
2025-06-20 02:06:34,255:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:06:34,263:INFO:Starting cross validation
2025-06-20 02:06:34,265:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:36,003:INFO:Calculating mean and std
2025-06-20 02:06:36,004:INFO:Creating metrics dataframe
2025-06-20 02:06:36,006:INFO:Uploading results into container
2025-06-20 02:06:36,007:INFO:Uploading model into container now
2025-06-20 02:06:36,007:INFO:_master_model_container: 14
2025-06-20 02:06:36,007:INFO:_display_container: 2
2025-06-20 02:06:36,008:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:06:36,008:INFO:create_model() successfully completed......................................
2025-06-20 02:06:36,153:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:36,153:INFO:Creating metrics dataframe
2025-06-20 02:06:36,161:INFO:Initializing CatBoost Classifier
2025-06-20 02:06:36,161:INFO:Total runtime is 0.12068336407343547 minutes
2025-06-20 02:06:36,166:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:36,166:INFO:Initializing create_model()
2025-06-20 02:06:36,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:36,166:INFO:Checking exceptions
2025-06-20 02:06:36,166:INFO:Importing libraries
2025-06-20 02:06:36,166:INFO:Copying training dataset
2025-06-20 02:06:36,169:INFO:Defining folds
2025-06-20 02:06:36,169:INFO:Declaring metric variables
2025-06-20 02:06:36,174:INFO:Importing untrained model
2025-06-20 02:06:36,179:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:06:36,186:INFO:Starting cross validation
2025-06-20 02:06:36,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:41,330:INFO:Calculating mean and std
2025-06-20 02:06:41,331:INFO:Creating metrics dataframe
2025-06-20 02:06:41,333:INFO:Uploading results into container
2025-06-20 02:06:41,333:INFO:Uploading model into container now
2025-06-20 02:06:41,333:INFO:_master_model_container: 15
2025-06-20 02:06:41,334:INFO:_display_container: 2
2025-06-20 02:06:41,334:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A852025B0>
2025-06-20 02:06:41,334:INFO:create_model() successfully completed......................................
2025-06-20 02:06:41,473:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:41,473:INFO:Creating metrics dataframe
2025-06-20 02:06:41,483:INFO:Initializing Dummy Classifier
2025-06-20 02:06:41,483:INFO:Total runtime is 0.20939125617345172 minutes
2025-06-20 02:06:41,487:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:41,487:INFO:Initializing create_model()
2025-06-20 02:06:41,487:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A84ED9520>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:41,487:INFO:Checking exceptions
2025-06-20 02:06:41,487:INFO:Importing libraries
2025-06-20 02:06:41,487:INFO:Copying training dataset
2025-06-20 02:06:41,491:INFO:Defining folds
2025-06-20 02:06:41,491:INFO:Declaring metric variables
2025-06-20 02:06:41,495:INFO:Importing untrained model
2025-06-20 02:06:41,500:INFO:Dummy Classifier Imported successfully
2025-06-20 02:06:41,508:INFO:Starting cross validation
2025-06-20 02:06:41,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:41,601:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,609:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,614:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,617:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,620:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,626:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:06:41,642:INFO:Calculating mean and std
2025-06-20 02:06:41,643:INFO:Creating metrics dataframe
2025-06-20 02:06:41,644:INFO:Uploading results into container
2025-06-20 02:06:41,644:INFO:Uploading model into container now
2025-06-20 02:06:41,645:INFO:_master_model_container: 16
2025-06-20 02:06:41,645:INFO:_display_container: 2
2025-06-20 02:06:41,645:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-20 02:06:41,645:INFO:create_model() successfully completed......................................
2025-06-20 02:06:41,786:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:41,786:INFO:Creating metrics dataframe
2025-06-20 02:06:41,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:06:41,805:INFO:Initializing create_model()
2025-06-20 02:06:41,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:41,805:INFO:Checking exceptions
2025-06-20 02:06:41,806:INFO:Importing libraries
2025-06-20 02:06:41,806:INFO:Copying training dataset
2025-06-20 02:06:41,809:INFO:Defining folds
2025-06-20 02:06:41,809:INFO:Declaring metric variables
2025-06-20 02:06:41,809:INFO:Importing untrained model
2025-06-20 02:06:41,809:INFO:Declaring custom model
2025-06-20 02:06:41,810:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:06:41,810:INFO:Cross validation set to False
2025-06-20 02:06:41,810:INFO:Fitting Model
2025-06-20 02:06:41,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:41,864:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:41,864:INFO:create_model() successfully completed......................................
2025-06-20 02:06:42,022:INFO:_master_model_container: 16
2025-06-20 02:06:42,022:INFO:_display_container: 2
2025-06-20 02:06:42,022:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:42,022:INFO:compare_models() successfully completed......................................
2025-06-20 02:06:42,022:INFO:Initializing tune_model()
2025-06-20 02:06:42,022:INFO:tune_model(estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>)
2025-06-20 02:06:42,022:INFO:Checking exceptions
2025-06-20 02:06:42,035:INFO:Copying training dataset
2025-06-20 02:06:42,038:INFO:Checking base model
2025-06-20 02:06:42,038:INFO:Base model : Quadratic Discriminant Analysis
2025-06-20 02:06:42,043:INFO:Declaring metric variables
2025-06-20 02:06:42,048:INFO:Defining Hyperparameters
2025-06-20 02:06:42,194:INFO:Tuning with n_jobs=-1
2025-06-20 02:06:42,194:INFO:Initializing RandomizedSearchCV
2025-06-20 02:06:42,266:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,267:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,267:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,271:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,286:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,291:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,295:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,300:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,301:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,303:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,312:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,354:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,379:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,399:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,403:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,405:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,413:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,416:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,422:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,442:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,448:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,454:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,479:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,487:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,489:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,496:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,499:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,501:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,508:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,511:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,520:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,538:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,570:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,578:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,589:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,599:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,611:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,612:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,621:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,628:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,629:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,660:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,664:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,664:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,668:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,681:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,686:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,708:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,719:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,727:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,731:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,737:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,759:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,762:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,770:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,781:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,808:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,813:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,828:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,843:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,852:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,853:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,861:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,865:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,866:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,883:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,906:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,909:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:42,941:INFO:best_params: {'actual_estimator__reg_param': 0.82}
2025-06-20 02:06:42,941:INFO:Hyperparameter search completed
2025-06-20 02:06:42,941:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:42,941:INFO:Initializing create_model()
2025-06-20 02:06:42,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A5BA469A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_param': 0.82})
2025-06-20 02:06:42,941:INFO:Checking exceptions
2025-06-20 02:06:42,941:INFO:Importing libraries
2025-06-20 02:06:42,941:INFO:Copying training dataset
2025-06-20 02:06:42,943:INFO:Defining folds
2025-06-20 02:06:42,943:INFO:Declaring metric variables
2025-06-20 02:06:42,947:INFO:Importing untrained model
2025-06-20 02:06:42,947:INFO:Declaring custom model
2025-06-20 02:06:42,952:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:06:42,960:INFO:Starting cross validation
2025-06-20 02:06:42,961:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:43,006:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,010:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,017:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,022:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,030:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,038:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,039:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,044:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,048:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,050:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,092:INFO:Calculating mean and std
2025-06-20 02:06:43,093:INFO:Creating metrics dataframe
2025-06-20 02:06:43,099:INFO:Finalizing model
2025-06-20 02:06:43,132:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,135:INFO:Uploading results into container
2025-06-20 02:06:43,136:INFO:Uploading model into container now
2025-06-20 02:06:43,136:INFO:_master_model_container: 17
2025-06-20 02:06:43,136:INFO:_display_container: 3
2025-06-20 02:06:43,136:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.82,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:43,136:INFO:create_model() successfully completed......................................
2025-06-20 02:06:43,276:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:43,276:INFO:choose_better activated
2025-06-20 02:06:43,282:INFO:SubProcess create_model() called ==================================
2025-06-20 02:06:43,282:INFO:Initializing create_model()
2025-06-20 02:06:43,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:43,282:INFO:Checking exceptions
2025-06-20 02:06:43,284:INFO:Importing libraries
2025-06-20 02:06:43,284:INFO:Copying training dataset
2025-06-20 02:06:43,286:INFO:Defining folds
2025-06-20 02:06:43,286:INFO:Declaring metric variables
2025-06-20 02:06:43,286:INFO:Importing untrained model
2025-06-20 02:06:43,286:INFO:Declaring custom model
2025-06-20 02:06:43,286:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:06:43,286:INFO:Starting cross validation
2025-06-20 02:06:43,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:06:43,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,342:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,353:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,357:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,363:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,365:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,367:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,368:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,405:INFO:Calculating mean and std
2025-06-20 02:06:43,405:INFO:Creating metrics dataframe
2025-06-20 02:06:43,407:INFO:Finalizing model
2025-06-20 02:06:43,438:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,438:INFO:Uploading results into container
2025-06-20 02:06:43,439:INFO:Uploading model into container now
2025-06-20 02:06:43,439:INFO:_master_model_container: 18
2025-06-20 02:06:43,439:INFO:_display_container: 4
2025-06-20 02:06:43,439:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:43,439:INFO:create_model() successfully completed......................................
2025-06-20 02:06:43,577:INFO:SubProcess create_model() end ==================================
2025-06-20 02:06:43,578:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) result for Accuracy is 0.9388
2025-06-20 02:06:43,578:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.82,
                              store_covariance=False, tol=0.0001) result for Accuracy is 0.9388
2025-06-20 02:06:43,578:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is best model
2025-06-20 02:06:43,578:INFO:choose_better completed
2025-06-20 02:06:43,579:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-20 02:06:43,586:INFO:_master_model_container: 18
2025-06-20 02:06:43,586:INFO:_display_container: 3
2025-06-20 02:06:43,587:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:43,587:INFO:tune_model() successfully completed......................................
2025-06-20 02:06:43,724:INFO:Initializing finalize_model()
2025-06-20 02:06:43,724:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-20 02:06:43,724:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:06:43,726:INFO:Initializing create_model()
2025-06-20 02:06:43,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:06:43,726:INFO:Checking exceptions
2025-06-20 02:06:43,727:INFO:Importing libraries
2025-06-20 02:06:43,727:INFO:Copying training dataset
2025-06-20 02:06:43,728:INFO:Defining folds
2025-06-20 02:06:43,728:INFO:Declaring metric variables
2025-06-20 02:06:43,728:INFO:Importing untrained model
2025-06-20 02:06:43,728:INFO:Declaring custom model
2025-06-20 02:06:43,728:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:06:43,729:INFO:Cross validation set to False
2025-06-20 02:06:43,729:INFO:Fitting Model
2025-06-20 02:06:43,764:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:06:43,770:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-06-20 02:06:43,770:INFO:create_model() successfully completed......................................
2025-06-20 02:06:43,904:INFO:_master_model_container: 18
2025-06-20 02:06:43,904:INFO:_display_container: 3
2025-06-20 02:06:43,910:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-06-20 02:06:43,910:INFO:finalize_model() successfully completed......................................
2025-06-20 02:06:44,055:INFO:Initializing save_model()
2025-06-20 02:06:44,055:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), model_name=personality_classifier_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-20 02:06:44,056:INFO:Adding model into prep_pipe
2025-06-20 02:06:44,056:WARNING:Only Model saved as it was a pipeline.
2025-06-20 02:06:44,060:INFO:personality_classifier_model.pkl saved in current working directory
2025-06-20 02:06:44,064:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-06-20 02:06:44,064:INFO:save_model() successfully completed......................................
2025-06-20 02:06:44,208:INFO:Initializing predict_model()
2025-06-20 02:06:44,208:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024A5BA8B3A0>)
2025-06-20 02:06:44,208:INFO:Checking exceptions
2025-06-20 02:06:44,208:INFO:Preloading libraries
2025-06-20 02:06:44,437:INFO:Initializing plot_model()
2025-06-20 02:06:44,437:INFO:plot_model(plot=feature, fold=None, verbose=True, display=None, display_format=None, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A85061C70>, system=True)
2025-06-20 02:06:44,437:INFO:Checking exceptions
2025-06-20 02:07:41,863:INFO:PyCaret ClassificationExperiment
2025-06-20 02:07:41,863:INFO:Logging name: clf-default-name
2025-06-20 02:07:41,863:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:07:41,863:INFO:version 3.3.2
2025-06-20 02:07:41,863:INFO:Initializing setup()
2025-06-20 02:07:41,863:INFO:self.USI: 288d
2025-06-20 02:07:41,863:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:07:41,863:INFO:Checking environment
2025-06-20 02:07:41,863:INFO:python_version: 3.9.21
2025-06-20 02:07:41,863:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:07:41,863:INFO:machine: AMD64
2025-06-20 02:07:41,863:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:07:41,863:INFO:Memory: svmem(total=25372119040, available=3151597568, percent=87.6, used=22220521472, free=3151597568)
2025-06-20 02:07:41,863:INFO:Physical Core: 10
2025-06-20 02:07:41,864:INFO:Logical Core: 16
2025-06-20 02:07:41,864:INFO:Checking libraries
2025-06-20 02:07:41,864:INFO:System:
2025-06-20 02:07:41,864:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:07:41,864:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:07:41,864:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:07:41,864:INFO:PyCaret required dependencies:
2025-06-20 02:07:41,864:INFO:                 pip: 24.2
2025-06-20 02:07:41,864:INFO:          setuptools: 75.1.0
2025-06-20 02:07:41,864:INFO:             pycaret: 3.3.2
2025-06-20 02:07:41,864:INFO:             IPython: 8.12.0
2025-06-20 02:07:41,864:INFO:          ipywidgets: 8.1.5
2025-06-20 02:07:41,864:INFO:                tqdm: 4.67.1
2025-06-20 02:07:41,864:INFO:               numpy: 1.26.4
2025-06-20 02:07:41,864:INFO:              pandas: 2.1.4
2025-06-20 02:07:41,864:INFO:              jinja2: 3.1.5
2025-06-20 02:07:41,864:INFO:               scipy: 1.11.4
2025-06-20 02:07:41,864:INFO:              joblib: 1.3.2
2025-06-20 02:07:41,864:INFO:             sklearn: 1.4.2
2025-06-20 02:07:41,864:INFO:                pyod: 2.0.3
2025-06-20 02:07:41,864:INFO:            imblearn: 0.12.4
2025-06-20 02:07:41,864:INFO:   category_encoders: 2.6.4
2025-06-20 02:07:41,864:INFO:            lightgbm: 4.6.0
2025-06-20 02:07:41,864:INFO:               numba: 0.60.0
2025-06-20 02:07:41,864:INFO:            requests: 2.32.3
2025-06-20 02:07:41,864:INFO:          matplotlib: 3.7.5
2025-06-20 02:07:41,864:INFO:          scikitplot: 0.3.7
2025-06-20 02:07:41,864:INFO:         yellowbrick: 1.5
2025-06-20 02:07:41,864:INFO:              plotly: 5.24.1
2025-06-20 02:07:41,864:INFO:    plotly-resampler: Not installed
2025-06-20 02:07:41,864:INFO:             kaleido: 0.2.1
2025-06-20 02:07:41,864:INFO:           schemdraw: 0.15
2025-06-20 02:07:41,864:INFO:         statsmodels: 0.14.4
2025-06-20 02:07:41,864:INFO:              sktime: 0.26.0
2025-06-20 02:07:41,864:INFO:               tbats: 1.1.3
2025-06-20 02:07:41,864:INFO:            pmdarima: 2.0.4
2025-06-20 02:07:41,864:INFO:              psutil: 5.9.0
2025-06-20 02:07:41,864:INFO:          markupsafe: 2.1.5
2025-06-20 02:07:41,864:INFO:             pickle5: Not installed
2025-06-20 02:07:41,864:INFO:         cloudpickle: 2.2.1
2025-06-20 02:07:41,864:INFO:         deprecation: 2.1.0
2025-06-20 02:07:41,864:INFO:              xxhash: 3.5.0
2025-06-20 02:07:41,864:INFO:           wurlitzer: Not installed
2025-06-20 02:07:41,864:INFO:PyCaret optional dependencies:
2025-06-20 02:07:41,864:INFO:                shap: 0.44.1
2025-06-20 02:07:41,864:INFO:           interpret: 0.6.10
2025-06-20 02:07:41,864:INFO:                umap: 0.5.7
2025-06-20 02:07:41,864:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:07:41,864:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:07:41,865:INFO:             autoviz: Not installed
2025-06-20 02:07:41,865:INFO:           fairlearn: 0.7.0
2025-06-20 02:07:41,865:INFO:          deepchecks: Not installed
2025-06-20 02:07:41,865:INFO:             xgboost: 2.1.4
2025-06-20 02:07:41,865:INFO:            catboost: 1.2.8
2025-06-20 02:07:41,865:INFO:              kmodes: 0.12.2
2025-06-20 02:07:41,865:INFO:             mlxtend: 0.23.4
2025-06-20 02:07:41,865:INFO:       statsforecast: 1.5.0
2025-06-20 02:07:41,865:INFO:        tune_sklearn: Not installed
2025-06-20 02:07:41,865:INFO:                 ray: Not installed
2025-06-20 02:07:41,865:INFO:            hyperopt: 0.2.7
2025-06-20 02:07:41,865:INFO:              optuna: 4.3.0
2025-06-20 02:07:41,865:INFO:               skopt: 0.10.2
2025-06-20 02:07:41,865:INFO:              mlflow: 2.22.0
2025-06-20 02:07:41,865:INFO:              gradio: Not installed
2025-06-20 02:07:41,865:INFO:             fastapi: 0.115.7
2025-06-20 02:07:41,865:INFO:             uvicorn: 0.34.0
2025-06-20 02:07:41,865:INFO:              m2cgen: 0.10.0
2025-06-20 02:07:41,865:INFO:           evidently: 0.4.40
2025-06-20 02:07:41,865:INFO:               fugue: 0.8.7
2025-06-20 02:07:41,865:INFO:           streamlit: Not installed
2025-06-20 02:07:41,865:INFO:             prophet: 1.1.6
2025-06-20 02:07:41,865:INFO:None
2025-06-20 02:07:41,865:INFO:Set up data.
2025-06-20 02:07:41,868:INFO:Set up folding strategy.
2025-06-20 02:07:41,868:INFO:Set up train/test split.
2025-06-20 02:07:41,872:INFO:Set up index.
2025-06-20 02:07:41,872:INFO:Assigning column types.
2025-06-20 02:07:41,874:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:07:41,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:07:41,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:07:41,950:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:41,953:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:41,984:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:07:41,985:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:07:42,003:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,005:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,005:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:07:42,033:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:07:42,050:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,052:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,082:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:07:42,101:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,103:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,103:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:07:42,151:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,153:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,204:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,206:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,207:INFO:Preparing preprocessing pipeline...
2025-06-20 02:07:42,207:INFO:Set up simple imputation.
2025-06-20 02:07:42,209:INFO:Set up encoding of categorical features.
2025-06-20 02:07:42,209:INFO:Set up feature normalization.
2025-06-20 02:07:42,260:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:07:42,264:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:07:42,264:INFO:Creating final display dataframe.
2025-06-20 02:07:42,382:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target       Personality
2                   Target type            Binary
3           Original data shape         (2900, 4)
4        Transformed data shape         (2900, 8)
5   Transformed train set shape         (2320, 8)
6    Transformed test set shape          (580, 8)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              288d
2025-06-20 02:07:42,429:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,431:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,480:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:07:42,482:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:07:42,483:INFO:setup() successfully completed in 0.62s...............
2025-06-20 02:07:42,483:INFO:Initializing compare_models()
2025-06-20 02:07:42,484:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:07:42,484:INFO:Checking exceptions
2025-06-20 02:07:42,486:INFO:Preparing display monitor
2025-06-20 02:07:42,510:INFO:Initializing Logistic Regression
2025-06-20 02:07:42,510:INFO:Total runtime is 0.0 minutes
2025-06-20 02:07:42,516:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:42,517:INFO:Initializing create_model()
2025-06-20 02:07:42,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:42,517:INFO:Checking exceptions
2025-06-20 02:07:42,517:INFO:Importing libraries
2025-06-20 02:07:42,517:INFO:Copying training dataset
2025-06-20 02:07:42,520:INFO:Defining folds
2025-06-20 02:07:42,520:INFO:Declaring metric variables
2025-06-20 02:07:42,525:INFO:Importing untrained model
2025-06-20 02:07:42,530:INFO:Logistic Regression Imported successfully
2025-06-20 02:07:42,539:INFO:Starting cross validation
2025-06-20 02:07:42,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:42,688:INFO:Calculating mean and std
2025-06-20 02:07:42,688:INFO:Creating metrics dataframe
2025-06-20 02:07:42,690:INFO:Uploading results into container
2025-06-20 02:07:42,690:INFO:Uploading model into container now
2025-06-20 02:07:42,690:INFO:_master_model_container: 1
2025-06-20 02:07:42,691:INFO:_display_container: 2
2025-06-20 02:07:42,691:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-20 02:07:42,691:INFO:create_model() successfully completed......................................
2025-06-20 02:07:42,831:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:42,831:INFO:Creating metrics dataframe
2025-06-20 02:07:42,835:INFO:Initializing K Neighbors Classifier
2025-06-20 02:07:42,835:INFO:Total runtime is 0.005422461032867432 minutes
2025-06-20 02:07:42,839:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:42,839:INFO:Initializing create_model()
2025-06-20 02:07:42,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:42,839:INFO:Checking exceptions
2025-06-20 02:07:42,839:INFO:Importing libraries
2025-06-20 02:07:42,839:INFO:Copying training dataset
2025-06-20 02:07:42,842:INFO:Defining folds
2025-06-20 02:07:42,842:INFO:Declaring metric variables
2025-06-20 02:07:42,846:INFO:Importing untrained model
2025-06-20 02:07:42,851:INFO:K Neighbors Classifier Imported successfully
2025-06-20 02:07:42,860:INFO:Starting cross validation
2025-06-20 02:07:42,861:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:43,061:INFO:Calculating mean and std
2025-06-20 02:07:43,062:INFO:Creating metrics dataframe
2025-06-20 02:07:43,063:INFO:Uploading results into container
2025-06-20 02:07:43,063:INFO:Uploading model into container now
2025-06-20 02:07:43,064:INFO:_master_model_container: 2
2025-06-20 02:07:43,064:INFO:_display_container: 2
2025-06-20 02:07:43,064:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-20 02:07:43,064:INFO:create_model() successfully completed......................................
2025-06-20 02:07:43,208:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:43,208:INFO:Creating metrics dataframe
2025-06-20 02:07:43,214:INFO:Initializing Naive Bayes
2025-06-20 02:07:43,215:INFO:Total runtime is 0.01174784501393636 minutes
2025-06-20 02:07:43,219:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:43,219:INFO:Initializing create_model()
2025-06-20 02:07:43,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:43,219:INFO:Checking exceptions
2025-06-20 02:07:43,219:INFO:Importing libraries
2025-06-20 02:07:43,219:INFO:Copying training dataset
2025-06-20 02:07:43,221:INFO:Defining folds
2025-06-20 02:07:43,222:INFO:Declaring metric variables
2025-06-20 02:07:43,226:INFO:Importing untrained model
2025-06-20 02:07:43,230:INFO:Naive Bayes Imported successfully
2025-06-20 02:07:43,239:INFO:Starting cross validation
2025-06-20 02:07:43,241:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:43,359:INFO:Calculating mean and std
2025-06-20 02:07:43,359:INFO:Creating metrics dataframe
2025-06-20 02:07:43,361:INFO:Uploading results into container
2025-06-20 02:07:43,361:INFO:Uploading model into container now
2025-06-20 02:07:43,362:INFO:_master_model_container: 3
2025-06-20 02:07:43,362:INFO:_display_container: 2
2025-06-20 02:07:43,362:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:07:43,362:INFO:create_model() successfully completed......................................
2025-06-20 02:07:43,507:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:43,507:INFO:Creating metrics dataframe
2025-06-20 02:07:43,513:INFO:Initializing Decision Tree Classifier
2025-06-20 02:07:43,513:INFO:Total runtime is 0.01671861410140991 minutes
2025-06-20 02:07:43,518:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:43,519:INFO:Initializing create_model()
2025-06-20 02:07:43,519:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:43,519:INFO:Checking exceptions
2025-06-20 02:07:43,519:INFO:Importing libraries
2025-06-20 02:07:43,519:INFO:Copying training dataset
2025-06-20 02:07:43,522:INFO:Defining folds
2025-06-20 02:07:43,522:INFO:Declaring metric variables
2025-06-20 02:07:43,526:INFO:Importing untrained model
2025-06-20 02:07:43,531:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:07:43,540:INFO:Starting cross validation
2025-06-20 02:07:43,542:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:43,670:INFO:Calculating mean and std
2025-06-20 02:07:43,671:INFO:Creating metrics dataframe
2025-06-20 02:07:43,673:INFO:Uploading results into container
2025-06-20 02:07:43,673:INFO:Uploading model into container now
2025-06-20 02:07:43,673:INFO:_master_model_container: 4
2025-06-20 02:07:43,673:INFO:_display_container: 2
2025-06-20 02:07:43,673:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:07:43,674:INFO:create_model() successfully completed......................................
2025-06-20 02:07:43,820:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:43,820:INFO:Creating metrics dataframe
2025-06-20 02:07:43,826:INFO:Initializing SVM - Linear Kernel
2025-06-20 02:07:43,826:INFO:Total runtime is 0.021927257378896076 minutes
2025-06-20 02:07:43,830:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:43,831:INFO:Initializing create_model()
2025-06-20 02:07:43,831:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:43,831:INFO:Checking exceptions
2025-06-20 02:07:43,831:INFO:Importing libraries
2025-06-20 02:07:43,831:INFO:Copying training dataset
2025-06-20 02:07:43,833:INFO:Defining folds
2025-06-20 02:07:43,833:INFO:Declaring metric variables
2025-06-20 02:07:43,837:INFO:Importing untrained model
2025-06-20 02:07:43,842:INFO:SVM - Linear Kernel Imported successfully
2025-06-20 02:07:43,849:INFO:Starting cross validation
2025-06-20 02:07:43,851:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:43,967:INFO:Calculating mean and std
2025-06-20 02:07:43,968:INFO:Creating metrics dataframe
2025-06-20 02:07:43,969:INFO:Uploading results into container
2025-06-20 02:07:43,970:INFO:Uploading model into container now
2025-06-20 02:07:43,970:INFO:_master_model_container: 5
2025-06-20 02:07:43,970:INFO:_display_container: 2
2025-06-20 02:07:43,970:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-20 02:07:43,970:INFO:create_model() successfully completed......................................
2025-06-20 02:07:44,118:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:44,118:INFO:Creating metrics dataframe
2025-06-20 02:07:44,125:INFO:Initializing Ridge Classifier
2025-06-20 02:07:44,125:INFO:Total runtime is 0.026918657620747882 minutes
2025-06-20 02:07:44,129:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:44,130:INFO:Initializing create_model()
2025-06-20 02:07:44,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:44,130:INFO:Checking exceptions
2025-06-20 02:07:44,130:INFO:Importing libraries
2025-06-20 02:07:44,130:INFO:Copying training dataset
2025-06-20 02:07:44,133:INFO:Defining folds
2025-06-20 02:07:44,133:INFO:Declaring metric variables
2025-06-20 02:07:44,137:INFO:Importing untrained model
2025-06-20 02:07:44,142:INFO:Ridge Classifier Imported successfully
2025-06-20 02:07:44,149:INFO:Starting cross validation
2025-06-20 02:07:44,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:44,263:INFO:Calculating mean and std
2025-06-20 02:07:44,264:INFO:Creating metrics dataframe
2025-06-20 02:07:44,265:INFO:Uploading results into container
2025-06-20 02:07:44,266:INFO:Uploading model into container now
2025-06-20 02:07:44,267:INFO:_master_model_container: 6
2025-06-20 02:07:44,267:INFO:_display_container: 2
2025-06-20 02:07:44,267:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-20 02:07:44,267:INFO:create_model() successfully completed......................................
2025-06-20 02:07:44,413:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:44,413:INFO:Creating metrics dataframe
2025-06-20 02:07:44,419:INFO:Initializing Random Forest Classifier
2025-06-20 02:07:44,419:INFO:Total runtime is 0.03182254632314046 minutes
2025-06-20 02:07:44,424:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:44,424:INFO:Initializing create_model()
2025-06-20 02:07:44,424:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:44,424:INFO:Checking exceptions
2025-06-20 02:07:44,424:INFO:Importing libraries
2025-06-20 02:07:44,424:INFO:Copying training dataset
2025-06-20 02:07:44,427:INFO:Defining folds
2025-06-20 02:07:44,427:INFO:Declaring metric variables
2025-06-20 02:07:44,432:INFO:Importing untrained model
2025-06-20 02:07:44,435:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:07:44,444:INFO:Starting cross validation
2025-06-20 02:07:44,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:44,980:INFO:Calculating mean and std
2025-06-20 02:07:44,981:INFO:Creating metrics dataframe
2025-06-20 02:07:44,983:INFO:Uploading results into container
2025-06-20 02:07:44,983:INFO:Uploading model into container now
2025-06-20 02:07:44,984:INFO:_master_model_container: 7
2025-06-20 02:07:44,984:INFO:_display_container: 2
2025-06-20 02:07:44,984:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:07:44,984:INFO:create_model() successfully completed......................................
2025-06-20 02:07:45,129:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:45,129:INFO:Creating metrics dataframe
2025-06-20 02:07:45,136:INFO:Initializing Quadratic Discriminant Analysis
2025-06-20 02:07:45,136:INFO:Total runtime is 0.043758865197499594 minutes
2025-06-20 02:07:45,140:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:45,140:INFO:Initializing create_model()
2025-06-20 02:07:45,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:45,140:INFO:Checking exceptions
2025-06-20 02:07:45,140:INFO:Importing libraries
2025-06-20 02:07:45,140:INFO:Copying training dataset
2025-06-20 02:07:45,144:INFO:Defining folds
2025-06-20 02:07:45,144:INFO:Declaring metric variables
2025-06-20 02:07:45,149:INFO:Importing untrained model
2025-06-20 02:07:45,155:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:07:45,163:INFO:Starting cross validation
2025-06-20 02:07:45,165:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:45,213:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,224:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,226:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,228:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,229:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,231:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,234:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,240:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,246:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:45,290:INFO:Calculating mean and std
2025-06-20 02:07:45,291:INFO:Creating metrics dataframe
2025-06-20 02:07:45,293:INFO:Uploading results into container
2025-06-20 02:07:45,293:INFO:Uploading model into container now
2025-06-20 02:07:45,294:INFO:_master_model_container: 8
2025-06-20 02:07:45,294:INFO:_display_container: 2
2025-06-20 02:07:45,294:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:45,294:INFO:create_model() successfully completed......................................
2025-06-20 02:07:45,442:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:45,442:INFO:Creating metrics dataframe
2025-06-20 02:07:45,449:INFO:Initializing Ada Boost Classifier
2025-06-20 02:07:45,449:INFO:Total runtime is 0.048973830540974934 minutes
2025-06-20 02:07:45,453:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:45,454:INFO:Initializing create_model()
2025-06-20 02:07:45,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:45,454:INFO:Checking exceptions
2025-06-20 02:07:45,454:INFO:Importing libraries
2025-06-20 02:07:45,454:INFO:Copying training dataset
2025-06-20 02:07:45,457:INFO:Defining folds
2025-06-20 02:07:45,457:INFO:Declaring metric variables
2025-06-20 02:07:45,462:INFO:Importing untrained model
2025-06-20 02:07:45,467:INFO:Ada Boost Classifier Imported successfully
2025-06-20 02:07:45,476:INFO:Starting cross validation
2025-06-20 02:07:45,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:45,521:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,532:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,534:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,540:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,551:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,554:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,561:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:07:45,812:INFO:Calculating mean and std
2025-06-20 02:07:45,814:INFO:Creating metrics dataframe
2025-06-20 02:07:45,816:INFO:Uploading results into container
2025-06-20 02:07:45,816:INFO:Uploading model into container now
2025-06-20 02:07:45,817:INFO:_master_model_container: 9
2025-06-20 02:07:45,817:INFO:_display_container: 2
2025-06-20 02:07:45,817:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-20 02:07:45,818:INFO:create_model() successfully completed......................................
2025-06-20 02:07:45,964:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:45,964:INFO:Creating metrics dataframe
2025-06-20 02:07:45,971:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:07:45,972:INFO:Total runtime is 0.05769317944844564 minutes
2025-06-20 02:07:45,976:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:45,976:INFO:Initializing create_model()
2025-06-20 02:07:45,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:45,976:INFO:Checking exceptions
2025-06-20 02:07:45,976:INFO:Importing libraries
2025-06-20 02:07:45,977:INFO:Copying training dataset
2025-06-20 02:07:45,981:INFO:Defining folds
2025-06-20 02:07:45,981:INFO:Declaring metric variables
2025-06-20 02:07:45,987:INFO:Importing untrained model
2025-06-20 02:07:45,992:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:07:46,001:INFO:Starting cross validation
2025-06-20 02:07:46,003:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:46,385:INFO:Calculating mean and std
2025-06-20 02:07:46,386:INFO:Creating metrics dataframe
2025-06-20 02:07:46,388:INFO:Uploading results into container
2025-06-20 02:07:46,388:INFO:Uploading model into container now
2025-06-20 02:07:46,389:INFO:_master_model_container: 10
2025-06-20 02:07:46,389:INFO:_display_container: 2
2025-06-20 02:07:46,389:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:07:46,389:INFO:create_model() successfully completed......................................
2025-06-20 02:07:46,547:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:46,548:INFO:Creating metrics dataframe
2025-06-20 02:07:46,555:INFO:Initializing Linear Discriminant Analysis
2025-06-20 02:07:46,555:INFO:Total runtime is 0.06741106510162354 minutes
2025-06-20 02:07:46,560:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:46,560:INFO:Initializing create_model()
2025-06-20 02:07:46,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:46,561:INFO:Checking exceptions
2025-06-20 02:07:46,561:INFO:Importing libraries
2025-06-20 02:07:46,561:INFO:Copying training dataset
2025-06-20 02:07:46,564:INFO:Defining folds
2025-06-20 02:07:46,564:INFO:Declaring metric variables
2025-06-20 02:07:46,569:INFO:Importing untrained model
2025-06-20 02:07:46,574:INFO:Linear Discriminant Analysis Imported successfully
2025-06-20 02:07:46,585:INFO:Starting cross validation
2025-06-20 02:07:46,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:46,697:INFO:Calculating mean and std
2025-06-20 02:07:46,698:INFO:Creating metrics dataframe
2025-06-20 02:07:46,700:INFO:Uploading results into container
2025-06-20 02:07:46,700:INFO:Uploading model into container now
2025-06-20 02:07:46,701:INFO:_master_model_container: 11
2025-06-20 02:07:46,701:INFO:_display_container: 2
2025-06-20 02:07:46,701:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-20 02:07:46,701:INFO:create_model() successfully completed......................................
2025-06-20 02:07:46,852:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:46,852:INFO:Creating metrics dataframe
2025-06-20 02:07:46,860:INFO:Initializing Extra Trees Classifier
2025-06-20 02:07:46,860:INFO:Total runtime is 0.07249751488367716 minutes
2025-06-20 02:07:46,865:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:46,865:INFO:Initializing create_model()
2025-06-20 02:07:46,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:46,865:INFO:Checking exceptions
2025-06-20 02:07:46,865:INFO:Importing libraries
2025-06-20 02:07:46,865:INFO:Copying training dataset
2025-06-20 02:07:46,869:INFO:Defining folds
2025-06-20 02:07:46,870:INFO:Declaring metric variables
2025-06-20 02:07:46,874:INFO:Importing untrained model
2025-06-20 02:07:46,879:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:07:46,890:INFO:Starting cross validation
2025-06-20 02:07:46,892:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:47,336:INFO:Calculating mean and std
2025-06-20 02:07:47,337:INFO:Creating metrics dataframe
2025-06-20 02:07:47,338:INFO:Uploading results into container
2025-06-20 02:07:47,339:INFO:Uploading model into container now
2025-06-20 02:07:47,339:INFO:_master_model_container: 12
2025-06-20 02:07:47,339:INFO:_display_container: 2
2025-06-20 02:07:47,340:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:07:47,340:INFO:create_model() successfully completed......................................
2025-06-20 02:07:47,477:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:47,477:INFO:Creating metrics dataframe
2025-06-20 02:07:47,484:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:07:47,484:INFO:Total runtime is 0.08289605776468913 minutes
2025-06-20 02:07:47,489:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:47,489:INFO:Initializing create_model()
2025-06-20 02:07:47,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:47,489:INFO:Checking exceptions
2025-06-20 02:07:47,489:INFO:Importing libraries
2025-06-20 02:07:47,489:INFO:Copying training dataset
2025-06-20 02:07:47,492:INFO:Defining folds
2025-06-20 02:07:47,493:INFO:Declaring metric variables
2025-06-20 02:07:47,496:INFO:Importing untrained model
2025-06-20 02:07:47,502:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:07:47,511:INFO:Starting cross validation
2025-06-20 02:07:47,512:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:47,696:INFO:Calculating mean and std
2025-06-20 02:07:47,697:INFO:Creating metrics dataframe
2025-06-20 02:07:47,698:INFO:Uploading results into container
2025-06-20 02:07:47,699:INFO:Uploading model into container now
2025-06-20 02:07:47,699:INFO:_master_model_container: 13
2025-06-20 02:07:47,700:INFO:_display_container: 2
2025-06-20 02:07:47,700:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:07:47,700:INFO:create_model() successfully completed......................................
2025-06-20 02:07:47,839:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:47,839:INFO:Creating metrics dataframe
2025-06-20 02:07:47,846:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:07:47,846:INFO:Total runtime is 0.08893074989318847 minutes
2025-06-20 02:07:47,851:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:47,851:INFO:Initializing create_model()
2025-06-20 02:07:47,851:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:47,851:INFO:Checking exceptions
2025-06-20 02:07:47,851:INFO:Importing libraries
2025-06-20 02:07:47,851:INFO:Copying training dataset
2025-06-20 02:07:47,854:INFO:Defining folds
2025-06-20 02:07:47,854:INFO:Declaring metric variables
2025-06-20 02:07:47,858:INFO:Importing untrained model
2025-06-20 02:07:47,864:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:07:47,872:INFO:Starting cross validation
2025-06-20 02:07:47,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:51,225:INFO:Calculating mean and std
2025-06-20 02:07:51,226:INFO:Creating metrics dataframe
2025-06-20 02:07:51,228:INFO:Uploading results into container
2025-06-20 02:07:51,229:INFO:Uploading model into container now
2025-06-20 02:07:51,230:INFO:_master_model_container: 14
2025-06-20 02:07:51,230:INFO:_display_container: 2
2025-06-20 02:07:51,231:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:07:51,231:INFO:create_model() successfully completed......................................
2025-06-20 02:07:51,385:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:51,385:INFO:Creating metrics dataframe
2025-06-20 02:07:51,392:INFO:Initializing CatBoost Classifier
2025-06-20 02:07:51,393:INFO:Total runtime is 0.14805070161819456 minutes
2025-06-20 02:07:51,397:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:51,397:INFO:Initializing create_model()
2025-06-20 02:07:51,397:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:51,397:INFO:Checking exceptions
2025-06-20 02:07:51,397:INFO:Importing libraries
2025-06-20 02:07:51,397:INFO:Copying training dataset
2025-06-20 02:07:51,400:INFO:Defining folds
2025-06-20 02:07:51,400:INFO:Declaring metric variables
2025-06-20 02:07:51,405:INFO:Importing untrained model
2025-06-20 02:07:51,409:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:07:51,418:INFO:Starting cross validation
2025-06-20 02:07:51,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:55,389:INFO:Calculating mean and std
2025-06-20 02:07:55,390:INFO:Creating metrics dataframe
2025-06-20 02:07:55,392:INFO:Uploading results into container
2025-06-20 02:07:55,392:INFO:Uploading model into container now
2025-06-20 02:07:55,392:INFO:_master_model_container: 15
2025-06-20 02:07:55,393:INFO:_display_container: 2
2025-06-20 02:07:55,393:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A85CC5DC0>
2025-06-20 02:07:55,393:INFO:create_model() successfully completed......................................
2025-06-20 02:07:55,544:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:55,544:INFO:Creating metrics dataframe
2025-06-20 02:07:55,552:INFO:Initializing Dummy Classifier
2025-06-20 02:07:55,552:INFO:Total runtime is 0.21736289262771605 minutes
2025-06-20 02:07:55,556:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:55,556:INFO:Initializing create_model()
2025-06-20 02:07:55,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85A53EB0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:55,556:INFO:Checking exceptions
2025-06-20 02:07:55,557:INFO:Importing libraries
2025-06-20 02:07:55,557:INFO:Copying training dataset
2025-06-20 02:07:55,559:INFO:Defining folds
2025-06-20 02:07:55,559:INFO:Declaring metric variables
2025-06-20 02:07:55,564:INFO:Importing untrained model
2025-06-20 02:07:55,568:INFO:Dummy Classifier Imported successfully
2025-06-20 02:07:55,578:INFO:Starting cross validation
2025-06-20 02:07:55,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:55,650:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,653:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,665:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,672:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,674:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,681:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,683:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,684:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:07:55,700:INFO:Calculating mean and std
2025-06-20 02:07:55,701:INFO:Creating metrics dataframe
2025-06-20 02:07:55,702:INFO:Uploading results into container
2025-06-20 02:07:55,703:INFO:Uploading model into container now
2025-06-20 02:07:55,703:INFO:_master_model_container: 16
2025-06-20 02:07:55,703:INFO:_display_container: 2
2025-06-20 02:07:55,704:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-20 02:07:55,704:INFO:create_model() successfully completed......................................
2025-06-20 02:07:55,857:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:55,857:INFO:Creating metrics dataframe
2025-06-20 02:07:55,870:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:07:55,888:INFO:Initializing create_model()
2025-06-20 02:07:55,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:55,890:INFO:Checking exceptions
2025-06-20 02:07:55,892:INFO:Importing libraries
2025-06-20 02:07:55,892:INFO:Copying training dataset
2025-06-20 02:07:55,896:INFO:Defining folds
2025-06-20 02:07:55,896:INFO:Declaring metric variables
2025-06-20 02:07:55,896:INFO:Importing untrained model
2025-06-20 02:07:55,896:INFO:Declaring custom model
2025-06-20 02:07:55,896:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:07:55,898:INFO:Cross validation set to False
2025-06-20 02:07:55,898:INFO:Fitting Model
2025-06-20 02:07:55,955:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:55,955:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:55,955:INFO:create_model() successfully completed......................................
2025-06-20 02:07:56,121:INFO:_master_model_container: 16
2025-06-20 02:07:56,121:INFO:_display_container: 2
2025-06-20 02:07:56,121:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:56,121:INFO:compare_models() successfully completed......................................
2025-06-20 02:07:56,122:INFO:Initializing tune_model()
2025-06-20 02:07:56,122:INFO:tune_model(estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>)
2025-06-20 02:07:56,122:INFO:Checking exceptions
2025-06-20 02:07:56,135:INFO:Copying training dataset
2025-06-20 02:07:56,137:INFO:Checking base model
2025-06-20 02:07:56,137:INFO:Base model : Quadratic Discriminant Analysis
2025-06-20 02:07:56,141:INFO:Declaring metric variables
2025-06-20 02:07:56,145:INFO:Defining Hyperparameters
2025-06-20 02:07:56,294:INFO:Tuning with n_jobs=-1
2025-06-20 02:07:56,294:INFO:Initializing RandomizedSearchCV
2025-06-20 02:07:56,367:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,383:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,384:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,386:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,388:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,390:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,391:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,394:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,397:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,398:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,400:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,421:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,424:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,425:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,460:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,484:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,490:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,500:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,503:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,509:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,522:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,523:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,525:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,556:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,569:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,600:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,600:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,604:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,608:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,619:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,622:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,627:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,638:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,643:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,651:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,675:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,692:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,696:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,700:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,706:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,720:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,723:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,730:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,736:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,740:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,741:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,747:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,779:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,782:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,787:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,788:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,824:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,837:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,839:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,840:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,849:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,857:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,875:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,877:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,879:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,882:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,891:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,917:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,922:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,928:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,936:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,937:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,941:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,963:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,974:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,978:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,980:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,981:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,982:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,983:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:56,984:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,009:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,028:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,057:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,083:INFO:best_params: {'actual_estimator__reg_param': 0.82}
2025-06-20 02:07:57,083:INFO:Hyperparameter search completed
2025-06-20 02:07:57,083:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:57,083:INFO:Initializing create_model()
2025-06-20 02:07:57,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85D88AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_param': 0.82})
2025-06-20 02:07:57,083:INFO:Checking exceptions
2025-06-20 02:07:57,083:INFO:Importing libraries
2025-06-20 02:07:57,083:INFO:Copying training dataset
2025-06-20 02:07:57,086:INFO:Defining folds
2025-06-20 02:07:57,086:INFO:Declaring metric variables
2025-06-20 02:07:57,091:INFO:Importing untrained model
2025-06-20 02:07:57,091:INFO:Declaring custom model
2025-06-20 02:07:57,097:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:07:57,110:INFO:Starting cross validation
2025-06-20 02:07:57,113:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:57,176:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,177:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,185:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,191:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,193:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,195:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,197:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,198:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,201:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,203:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,253:INFO:Calculating mean and std
2025-06-20 02:07:57,256:INFO:Creating metrics dataframe
2025-06-20 02:07:57,261:INFO:Finalizing model
2025-06-20 02:07:57,294:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,299:INFO:Uploading results into container
2025-06-20 02:07:57,299:INFO:Uploading model into container now
2025-06-20 02:07:57,300:INFO:_master_model_container: 17
2025-06-20 02:07:57,300:INFO:_display_container: 3
2025-06-20 02:07:57,300:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.82,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:57,300:INFO:create_model() successfully completed......................................
2025-06-20 02:07:57,452:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:57,453:INFO:choose_better activated
2025-06-20 02:07:57,458:INFO:SubProcess create_model() called ==================================
2025-06-20 02:07:57,459:INFO:Initializing create_model()
2025-06-20 02:07:57,459:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:57,459:INFO:Checking exceptions
2025-06-20 02:07:57,461:INFO:Importing libraries
2025-06-20 02:07:57,461:INFO:Copying training dataset
2025-06-20 02:07:57,463:INFO:Defining folds
2025-06-20 02:07:57,463:INFO:Declaring metric variables
2025-06-20 02:07:57,463:INFO:Importing untrained model
2025-06-20 02:07:57,463:INFO:Declaring custom model
2025-06-20 02:07:57,463:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:07:57,464:INFO:Starting cross validation
2025-06-20 02:07:57,465:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:07:57,529:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,536:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,541:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,544:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,544:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,545:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,549:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,550:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,562:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,611:INFO:Calculating mean and std
2025-06-20 02:07:57,611:INFO:Creating metrics dataframe
2025-06-20 02:07:57,613:INFO:Finalizing model
2025-06-20 02:07:57,646:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:57,647:INFO:Uploading results into container
2025-06-20 02:07:57,647:INFO:Uploading model into container now
2025-06-20 02:07:57,647:INFO:_master_model_container: 18
2025-06-20 02:07:57,647:INFO:_display_container: 4
2025-06-20 02:07:57,648:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:57,648:INFO:create_model() successfully completed......................................
2025-06-20 02:07:57,800:INFO:SubProcess create_model() end ==================================
2025-06-20 02:07:57,800:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) result for Accuracy is 0.9388
2025-06-20 02:07:57,800:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.82,
                              store_covariance=False, tol=0.0001) result for Accuracy is 0.9388
2025-06-20 02:07:57,800:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is best model
2025-06-20 02:07:57,800:INFO:choose_better completed
2025-06-20 02:07:57,800:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-20 02:07:57,810:INFO:_master_model_container: 18
2025-06-20 02:07:57,811:INFO:_display_container: 3
2025-06-20 02:07:57,812:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:57,812:INFO:tune_model() successfully completed......................................
2025-06-20 02:07:57,960:INFO:Initializing finalize_model()
2025-06-20 02:07:57,960:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-20 02:07:57,960:INFO:Finalizing QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:07:57,962:INFO:Initializing create_model()
2025-06-20 02:07:57,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:07:57,962:INFO:Checking exceptions
2025-06-20 02:07:57,964:INFO:Importing libraries
2025-06-20 02:07:57,964:INFO:Copying training dataset
2025-06-20 02:07:57,964:INFO:Defining folds
2025-06-20 02:07:57,964:INFO:Declaring metric variables
2025-06-20 02:07:57,964:INFO:Importing untrained model
2025-06-20 02:07:57,964:INFO:Declaring custom model
2025-06-20 02:07:57,965:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:07:57,965:INFO:Cross validation set to False
2025-06-20 02:07:57,965:INFO:Fitting Model
2025-06-20 02:07:57,998:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:07:58,002:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-06-20 02:07:58,002:INFO:create_model() successfully completed......................................
2025-06-20 02:07:58,145:INFO:_master_model_container: 18
2025-06-20 02:07:58,146:INFO:_display_container: 3
2025-06-20 02:07:58,149:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-06-20 02:07:58,149:INFO:finalize_model() successfully completed......................................
2025-06-20 02:07:58,322:INFO:Initializing save_model()
2025-06-20 02:07:58,322:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), model_name=personality_classifier_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-20 02:07:58,322:INFO:Adding model into prep_pipe
2025-06-20 02:07:58,322:WARNING:Only Model saved as it was a pipeline.
2025-06-20 02:07:58,329:INFO:personality_classifier_model.pkl saved in current working directory
2025-06-20 02:07:58,337:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False)
2025-06-20 02:07:58,337:INFO:save_model() successfully completed......................................
2025-06-20 02:07:58,487:INFO:Initializing predict_model()
2025-06-20 02:07:58,488:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A86004BB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                                               store_covariance=False,
                                               tol=0.0001))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024A8308A700>)
2025-06-20 02:07:58,488:INFO:Checking exceptions
2025-06-20 02:07:58,488:INFO:Preloading libraries
2025-06-20 02:10:40,789:INFO:PyCaret ClassificationExperiment
2025-06-20 02:10:40,789:INFO:Logging name: clf-default-name
2025-06-20 02:10:40,789:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:10:40,789:INFO:version 3.3.2
2025-06-20 02:10:40,789:INFO:Initializing setup()
2025-06-20 02:10:40,789:INFO:self.USI: 0d52
2025-06-20 02:10:40,789:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:10:40,789:INFO:Checking environment
2025-06-20 02:10:40,789:INFO:python_version: 3.9.21
2025-06-20 02:10:40,789:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:10:40,789:INFO:machine: AMD64
2025-06-20 02:10:40,789:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:10:40,789:INFO:Memory: svmem(total=25372119040, available=3028443136, percent=88.1, used=22343675904, free=3028443136)
2025-06-20 02:10:40,789:INFO:Physical Core: 10
2025-06-20 02:10:40,789:INFO:Logical Core: 16
2025-06-20 02:10:40,789:INFO:Checking libraries
2025-06-20 02:10:40,789:INFO:System:
2025-06-20 02:10:40,789:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:10:40,790:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:10:40,790:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:10:40,790:INFO:PyCaret required dependencies:
2025-06-20 02:10:40,790:INFO:                 pip: 24.2
2025-06-20 02:10:40,790:INFO:          setuptools: 75.1.0
2025-06-20 02:10:40,790:INFO:             pycaret: 3.3.2
2025-06-20 02:10:40,790:INFO:             IPython: 8.12.0
2025-06-20 02:10:40,790:INFO:          ipywidgets: 8.1.5
2025-06-20 02:10:40,790:INFO:                tqdm: 4.67.1
2025-06-20 02:10:40,790:INFO:               numpy: 1.26.4
2025-06-20 02:10:40,790:INFO:              pandas: 2.1.4
2025-06-20 02:10:40,790:INFO:              jinja2: 3.1.5
2025-06-20 02:10:40,790:INFO:               scipy: 1.11.4
2025-06-20 02:10:40,790:INFO:              joblib: 1.3.2
2025-06-20 02:10:40,790:INFO:             sklearn: 1.4.2
2025-06-20 02:10:40,790:INFO:                pyod: 2.0.3
2025-06-20 02:10:40,790:INFO:            imblearn: 0.12.4
2025-06-20 02:10:40,790:INFO:   category_encoders: 2.6.4
2025-06-20 02:10:40,790:INFO:            lightgbm: 4.6.0
2025-06-20 02:10:40,790:INFO:               numba: 0.60.0
2025-06-20 02:10:40,790:INFO:            requests: 2.32.3
2025-06-20 02:10:40,790:INFO:          matplotlib: 3.7.5
2025-06-20 02:10:40,790:INFO:          scikitplot: 0.3.7
2025-06-20 02:10:40,790:INFO:         yellowbrick: 1.5
2025-06-20 02:10:40,790:INFO:              plotly: 5.24.1
2025-06-20 02:10:40,790:INFO:    plotly-resampler: Not installed
2025-06-20 02:10:40,790:INFO:             kaleido: 0.2.1
2025-06-20 02:10:40,790:INFO:           schemdraw: 0.15
2025-06-20 02:10:40,790:INFO:         statsmodels: 0.14.4
2025-06-20 02:10:40,790:INFO:              sktime: 0.26.0
2025-06-20 02:10:40,790:INFO:               tbats: 1.1.3
2025-06-20 02:10:40,790:INFO:            pmdarima: 2.0.4
2025-06-20 02:10:40,790:INFO:              psutil: 5.9.0
2025-06-20 02:10:40,790:INFO:          markupsafe: 2.1.5
2025-06-20 02:10:40,790:INFO:             pickle5: Not installed
2025-06-20 02:10:40,790:INFO:         cloudpickle: 2.2.1
2025-06-20 02:10:40,790:INFO:         deprecation: 2.1.0
2025-06-20 02:10:40,790:INFO:              xxhash: 3.5.0
2025-06-20 02:10:40,791:INFO:           wurlitzer: Not installed
2025-06-20 02:10:40,791:INFO:PyCaret optional dependencies:
2025-06-20 02:10:40,791:INFO:                shap: 0.44.1
2025-06-20 02:10:40,791:INFO:           interpret: 0.6.10
2025-06-20 02:10:40,791:INFO:                umap: 0.5.7
2025-06-20 02:10:40,791:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:10:40,791:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:10:40,791:INFO:             autoviz: Not installed
2025-06-20 02:10:40,791:INFO:           fairlearn: 0.7.0
2025-06-20 02:10:40,791:INFO:          deepchecks: Not installed
2025-06-20 02:10:40,791:INFO:             xgboost: 2.1.4
2025-06-20 02:10:40,791:INFO:            catboost: 1.2.8
2025-06-20 02:10:40,791:INFO:              kmodes: 0.12.2
2025-06-20 02:10:40,791:INFO:             mlxtend: 0.23.4
2025-06-20 02:10:40,791:INFO:       statsforecast: 1.5.0
2025-06-20 02:10:40,791:INFO:        tune_sklearn: Not installed
2025-06-20 02:10:40,791:INFO:                 ray: Not installed
2025-06-20 02:10:40,791:INFO:            hyperopt: 0.2.7
2025-06-20 02:10:40,791:INFO:              optuna: 4.3.0
2025-06-20 02:10:40,791:INFO:               skopt: 0.10.2
2025-06-20 02:10:40,791:INFO:              mlflow: 2.22.0
2025-06-20 02:10:40,791:INFO:              gradio: Not installed
2025-06-20 02:10:40,791:INFO:             fastapi: 0.115.7
2025-06-20 02:10:40,791:INFO:             uvicorn: 0.34.0
2025-06-20 02:10:40,791:INFO:              m2cgen: 0.10.0
2025-06-20 02:10:40,791:INFO:           evidently: 0.4.40
2025-06-20 02:10:40,791:INFO:               fugue: 0.8.7
2025-06-20 02:10:40,791:INFO:           streamlit: Not installed
2025-06-20 02:10:40,792:INFO:             prophet: 1.1.6
2025-06-20 02:10:40,792:INFO:None
2025-06-20 02:10:40,792:INFO:Set up data.
2025-06-20 02:10:40,795:INFO:Set up folding strategy.
2025-06-20 02:10:40,795:INFO:Set up train/test split.
2025-06-20 02:10:40,799:INFO:Set up index.
2025-06-20 02:10:40,799:INFO:Assigning column types.
2025-06-20 02:10:40,801:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:10:40,830:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:10:40,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:10:40,849:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:40,850:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:40,879:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:10:40,880:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:10:40,898:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:40,900:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:40,900:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:10:40,928:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:10:40,950:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:40,953:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:40,987:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:10:41,021:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:41,024:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:41,025:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:10:41,071:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:41,073:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:41,124:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:41,126:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:41,127:INFO:Preparing preprocessing pipeline...
2025-06-20 02:10:41,128:INFO:Set up simple imputation.
2025-06-20 02:10:41,129:INFO:Set up encoding of categorical features.
2025-06-20 02:10:41,129:INFO:Set up feature normalization.
2025-06-20 02:10:41,179:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:10:41,183:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:10:41,183:INFO:Creating final display dataframe.
2025-06-20 02:10:41,297:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target       Personality
2                   Target type            Binary
3           Original data shape         (2900, 4)
4        Transformed data shape         (2900, 8)
5   Transformed train set shape         (2320, 8)
6    Transformed test set shape          (580, 8)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              0d52
2025-06-20 02:10:41,344:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:41,346:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:41,392:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:10:41,394:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:10:41,395:INFO:setup() successfully completed in 0.61s...............
2025-06-20 02:10:41,396:INFO:Initializing compare_models()
2025-06-20 02:10:41,396:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:10:41,396:INFO:Checking exceptions
2025-06-20 02:10:41,398:INFO:Preparing display monitor
2025-06-20 02:10:41,422:INFO:Initializing Logistic Regression
2025-06-20 02:10:41,423:INFO:Total runtime is 1.6681353251139323e-05 minutes
2025-06-20 02:10:41,427:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:41,428:INFO:Initializing create_model()
2025-06-20 02:10:41,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:41,428:INFO:Checking exceptions
2025-06-20 02:10:41,428:INFO:Importing libraries
2025-06-20 02:10:41,428:INFO:Copying training dataset
2025-06-20 02:10:41,430:INFO:Defining folds
2025-06-20 02:10:41,430:INFO:Declaring metric variables
2025-06-20 02:10:41,435:INFO:Importing untrained model
2025-06-20 02:10:41,439:INFO:Logistic Regression Imported successfully
2025-06-20 02:10:41,449:INFO:Starting cross validation
2025-06-20 02:10:41,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:41,579:INFO:Calculating mean and std
2025-06-20 02:10:41,580:INFO:Creating metrics dataframe
2025-06-20 02:10:41,581:INFO:Uploading results into container
2025-06-20 02:10:41,581:INFO:Uploading model into container now
2025-06-20 02:10:41,582:INFO:_master_model_container: 1
2025-06-20 02:10:41,582:INFO:_display_container: 2
2025-06-20 02:10:41,582:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-20 02:10:41,582:INFO:create_model() successfully completed......................................
2025-06-20 02:10:41,749:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:41,749:INFO:Creating metrics dataframe
2025-06-20 02:10:41,755:INFO:Initializing K Neighbors Classifier
2025-06-20 02:10:41,755:INFO:Total runtime is 0.005547388394673666 minutes
2025-06-20 02:10:41,759:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:41,760:INFO:Initializing create_model()
2025-06-20 02:10:41,760:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:41,760:INFO:Checking exceptions
2025-06-20 02:10:41,760:INFO:Importing libraries
2025-06-20 02:10:41,760:INFO:Copying training dataset
2025-06-20 02:10:41,762:INFO:Defining folds
2025-06-20 02:10:41,762:INFO:Declaring metric variables
2025-06-20 02:10:41,766:INFO:Importing untrained model
2025-06-20 02:10:41,771:INFO:K Neighbors Classifier Imported successfully
2025-06-20 02:10:41,778:INFO:Starting cross validation
2025-06-20 02:10:41,780:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:41,969:INFO:Calculating mean and std
2025-06-20 02:10:41,969:INFO:Creating metrics dataframe
2025-06-20 02:10:41,971:INFO:Uploading results into container
2025-06-20 02:10:41,971:INFO:Uploading model into container now
2025-06-20 02:10:41,971:INFO:_master_model_container: 2
2025-06-20 02:10:41,971:INFO:_display_container: 2
2025-06-20 02:10:41,972:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-20 02:10:41,972:INFO:create_model() successfully completed......................................
2025-06-20 02:10:42,124:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:42,124:INFO:Creating metrics dataframe
2025-06-20 02:10:42,130:INFO:Initializing Naive Bayes
2025-06-20 02:10:42,131:INFO:Total runtime is 0.01180713971455892 minutes
2025-06-20 02:10:42,135:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:42,135:INFO:Initializing create_model()
2025-06-20 02:10:42,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:42,135:INFO:Checking exceptions
2025-06-20 02:10:42,135:INFO:Importing libraries
2025-06-20 02:10:42,135:INFO:Copying training dataset
2025-06-20 02:10:42,137:INFO:Defining folds
2025-06-20 02:10:42,137:INFO:Declaring metric variables
2025-06-20 02:10:42,142:INFO:Importing untrained model
2025-06-20 02:10:42,146:INFO:Naive Bayes Imported successfully
2025-06-20 02:10:42,153:INFO:Starting cross validation
2025-06-20 02:10:42,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:42,280:INFO:Calculating mean and std
2025-06-20 02:10:42,281:INFO:Creating metrics dataframe
2025-06-20 02:10:42,283:INFO:Uploading results into container
2025-06-20 02:10:42,284:INFO:Uploading model into container now
2025-06-20 02:10:42,284:INFO:_master_model_container: 3
2025-06-20 02:10:42,284:INFO:_display_container: 2
2025-06-20 02:10:42,284:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-20 02:10:42,284:INFO:create_model() successfully completed......................................
2025-06-20 02:10:42,439:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:42,439:INFO:Creating metrics dataframe
2025-06-20 02:10:42,444:INFO:Initializing Decision Tree Classifier
2025-06-20 02:10:42,444:INFO:Total runtime is 0.017020722230275474 minutes
2025-06-20 02:10:42,448:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:42,449:INFO:Initializing create_model()
2025-06-20 02:10:42,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:42,449:INFO:Checking exceptions
2025-06-20 02:10:42,449:INFO:Importing libraries
2025-06-20 02:10:42,449:INFO:Copying training dataset
2025-06-20 02:10:42,451:INFO:Defining folds
2025-06-20 02:10:42,451:INFO:Declaring metric variables
2025-06-20 02:10:42,455:INFO:Importing untrained model
2025-06-20 02:10:42,460:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:10:42,468:INFO:Starting cross validation
2025-06-20 02:10:42,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:42,594:INFO:Calculating mean and std
2025-06-20 02:10:42,595:INFO:Creating metrics dataframe
2025-06-20 02:10:42,596:INFO:Uploading results into container
2025-06-20 02:10:42,597:INFO:Uploading model into container now
2025-06-20 02:10:42,597:INFO:_master_model_container: 4
2025-06-20 02:10:42,597:INFO:_display_container: 2
2025-06-20 02:10:42,597:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:10:42,597:INFO:create_model() successfully completed......................................
2025-06-20 02:10:42,747:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:42,747:INFO:Creating metrics dataframe
2025-06-20 02:10:42,754:INFO:Initializing SVM - Linear Kernel
2025-06-20 02:10:42,754:INFO:Total runtime is 0.02218726476033529 minutes
2025-06-20 02:10:42,758:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:42,758:INFO:Initializing create_model()
2025-06-20 02:10:42,758:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:42,759:INFO:Checking exceptions
2025-06-20 02:10:42,759:INFO:Importing libraries
2025-06-20 02:10:42,759:INFO:Copying training dataset
2025-06-20 02:10:42,761:INFO:Defining folds
2025-06-20 02:10:42,762:INFO:Declaring metric variables
2025-06-20 02:10:42,766:INFO:Importing untrained model
2025-06-20 02:10:42,773:INFO:SVM - Linear Kernel Imported successfully
2025-06-20 02:10:42,781:INFO:Starting cross validation
2025-06-20 02:10:42,783:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:42,906:INFO:Calculating mean and std
2025-06-20 02:10:42,907:INFO:Creating metrics dataframe
2025-06-20 02:10:42,908:INFO:Uploading results into container
2025-06-20 02:10:42,909:INFO:Uploading model into container now
2025-06-20 02:10:42,909:INFO:_master_model_container: 5
2025-06-20 02:10:42,909:INFO:_display_container: 2
2025-06-20 02:10:42,910:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-20 02:10:42,910:INFO:create_model() successfully completed......................................
2025-06-20 02:10:43,081:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:43,081:INFO:Creating metrics dataframe
2025-06-20 02:10:43,087:INFO:Initializing Ridge Classifier
2025-06-20 02:10:43,087:INFO:Total runtime is 0.027745238939921063 minutes
2025-06-20 02:10:43,091:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:43,091:INFO:Initializing create_model()
2025-06-20 02:10:43,092:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:43,092:INFO:Checking exceptions
2025-06-20 02:10:43,092:INFO:Importing libraries
2025-06-20 02:10:43,092:INFO:Copying training dataset
2025-06-20 02:10:43,094:INFO:Defining folds
2025-06-20 02:10:43,094:INFO:Declaring metric variables
2025-06-20 02:10:43,099:INFO:Importing untrained model
2025-06-20 02:10:43,103:INFO:Ridge Classifier Imported successfully
2025-06-20 02:10:43,110:INFO:Starting cross validation
2025-06-20 02:10:43,111:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:43,233:INFO:Calculating mean and std
2025-06-20 02:10:43,234:INFO:Creating metrics dataframe
2025-06-20 02:10:43,235:INFO:Uploading results into container
2025-06-20 02:10:43,236:INFO:Uploading model into container now
2025-06-20 02:10:43,236:INFO:_master_model_container: 6
2025-06-20 02:10:43,237:INFO:_display_container: 2
2025-06-20 02:10:43,237:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-06-20 02:10:43,237:INFO:create_model() successfully completed......................................
2025-06-20 02:10:43,389:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:43,389:INFO:Creating metrics dataframe
2025-06-20 02:10:43,395:INFO:Initializing Random Forest Classifier
2025-06-20 02:10:43,396:INFO:Total runtime is 0.03288787603378296 minutes
2025-06-20 02:10:43,400:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:43,400:INFO:Initializing create_model()
2025-06-20 02:10:43,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:43,400:INFO:Checking exceptions
2025-06-20 02:10:43,400:INFO:Importing libraries
2025-06-20 02:10:43,400:INFO:Copying training dataset
2025-06-20 02:10:43,403:INFO:Defining folds
2025-06-20 02:10:43,403:INFO:Declaring metric variables
2025-06-20 02:10:43,407:INFO:Importing untrained model
2025-06-20 02:10:43,411:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:10:43,419:INFO:Starting cross validation
2025-06-20 02:10:43,420:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:44,044:INFO:Calculating mean and std
2025-06-20 02:10:44,045:INFO:Creating metrics dataframe
2025-06-20 02:10:44,046:INFO:Uploading results into container
2025-06-20 02:10:44,047:INFO:Uploading model into container now
2025-06-20 02:10:44,047:INFO:_master_model_container: 7
2025-06-20 02:10:44,047:INFO:_display_container: 2
2025-06-20 02:10:44,048:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:10:44,048:INFO:create_model() successfully completed......................................
2025-06-20 02:10:44,193:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:44,194:INFO:Creating metrics dataframe
2025-06-20 02:10:44,201:INFO:Initializing Quadratic Discriminant Analysis
2025-06-20 02:10:44,201:INFO:Total runtime is 0.04630324045817057 minutes
2025-06-20 02:10:44,205:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:44,205:INFO:Initializing create_model()
2025-06-20 02:10:44,205:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:44,205:INFO:Checking exceptions
2025-06-20 02:10:44,205:INFO:Importing libraries
2025-06-20 02:10:44,205:INFO:Copying training dataset
2025-06-20 02:10:44,208:INFO:Defining folds
2025-06-20 02:10:44,208:INFO:Declaring metric variables
2025-06-20 02:10:44,213:INFO:Importing untrained model
2025-06-20 02:10:44,217:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:10:44,225:INFO:Starting cross validation
2025-06-20 02:10:44,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:44,277:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,281:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,282:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,285:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,295:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,296:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,298:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,304:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,305:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,311:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:44,340:INFO:Calculating mean and std
2025-06-20 02:10:44,341:INFO:Creating metrics dataframe
2025-06-20 02:10:44,343:INFO:Uploading results into container
2025-06-20 02:10:44,343:INFO:Uploading model into container now
2025-06-20 02:10:44,344:INFO:_master_model_container: 8
2025-06-20 02:10:44,344:INFO:_display_container: 2
2025-06-20 02:10:44,344:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:10:44,344:INFO:create_model() successfully completed......................................
2025-06-20 02:10:44,500:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:44,501:INFO:Creating metrics dataframe
2025-06-20 02:10:44,508:INFO:Initializing Ada Boost Classifier
2025-06-20 02:10:44,508:INFO:Total runtime is 0.05141840775807699 minutes
2025-06-20 02:10:44,513:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:44,513:INFO:Initializing create_model()
2025-06-20 02:10:44,513:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:44,513:INFO:Checking exceptions
2025-06-20 02:10:44,513:INFO:Importing libraries
2025-06-20 02:10:44,513:INFO:Copying training dataset
2025-06-20 02:10:44,516:INFO:Defining folds
2025-06-20 02:10:44,517:INFO:Declaring metric variables
2025-06-20 02:10:44,520:INFO:Importing untrained model
2025-06-20 02:10:44,524:INFO:Ada Boost Classifier Imported successfully
2025-06-20 02:10:44,533:INFO:Starting cross validation
2025-06-20 02:10:44,535:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:44,583:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,585:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,586:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,595:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,601:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,604:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,605:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,606:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,609:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-20 02:10:44,829:INFO:Calculating mean and std
2025-06-20 02:10:44,830:INFO:Creating metrics dataframe
2025-06-20 02:10:44,831:INFO:Uploading results into container
2025-06-20 02:10:44,832:INFO:Uploading model into container now
2025-06-20 02:10:44,832:INFO:_master_model_container: 9
2025-06-20 02:10:44,832:INFO:_display_container: 2
2025-06-20 02:10:44,833:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-06-20 02:10:44,833:INFO:create_model() successfully completed......................................
2025-06-20 02:10:44,981:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:44,981:INFO:Creating metrics dataframe
2025-06-20 02:10:44,992:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:10:44,992:INFO:Total runtime is 0.059495206673940024 minutes
2025-06-20 02:10:45,001:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:45,001:INFO:Initializing create_model()
2025-06-20 02:10:45,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:45,001:INFO:Checking exceptions
2025-06-20 02:10:45,001:INFO:Importing libraries
2025-06-20 02:10:45,001:INFO:Copying training dataset
2025-06-20 02:10:45,005:INFO:Defining folds
2025-06-20 02:10:45,005:INFO:Declaring metric variables
2025-06-20 02:10:45,011:INFO:Importing untrained model
2025-06-20 02:10:45,018:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:10:45,031:INFO:Starting cross validation
2025-06-20 02:10:45,033:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:45,375:INFO:Calculating mean and std
2025-06-20 02:10:45,375:INFO:Creating metrics dataframe
2025-06-20 02:10:45,378:INFO:Uploading results into container
2025-06-20 02:10:45,378:INFO:Uploading model into container now
2025-06-20 02:10:45,378:INFO:_master_model_container: 10
2025-06-20 02:10:45,379:INFO:_display_container: 2
2025-06-20 02:10:45,379:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:10:45,379:INFO:create_model() successfully completed......................................
2025-06-20 02:10:45,529:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:45,530:INFO:Creating metrics dataframe
2025-06-20 02:10:45,536:INFO:Initializing Linear Discriminant Analysis
2025-06-20 02:10:45,536:INFO:Total runtime is 0.06855156024297078 minutes
2025-06-20 02:10:45,541:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:45,541:INFO:Initializing create_model()
2025-06-20 02:10:45,541:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:45,541:INFO:Checking exceptions
2025-06-20 02:10:45,541:INFO:Importing libraries
2025-06-20 02:10:45,541:INFO:Copying training dataset
2025-06-20 02:10:45,545:INFO:Defining folds
2025-06-20 02:10:45,545:INFO:Declaring metric variables
2025-06-20 02:10:45,548:INFO:Importing untrained model
2025-06-20 02:10:45,553:INFO:Linear Discriminant Analysis Imported successfully
2025-06-20 02:10:45,562:INFO:Starting cross validation
2025-06-20 02:10:45,565:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:45,688:INFO:Calculating mean and std
2025-06-20 02:10:45,688:INFO:Creating metrics dataframe
2025-06-20 02:10:45,690:INFO:Uploading results into container
2025-06-20 02:10:45,691:INFO:Uploading model into container now
2025-06-20 02:10:45,691:INFO:_master_model_container: 11
2025-06-20 02:10:45,691:INFO:_display_container: 2
2025-06-20 02:10:45,691:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-20 02:10:45,691:INFO:create_model() successfully completed......................................
2025-06-20 02:10:45,846:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:45,847:INFO:Creating metrics dataframe
2025-06-20 02:10:45,854:INFO:Initializing Extra Trees Classifier
2025-06-20 02:10:45,854:INFO:Total runtime is 0.07386240164438883 minutes
2025-06-20 02:10:45,858:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:45,859:INFO:Initializing create_model()
2025-06-20 02:10:45,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:45,859:INFO:Checking exceptions
2025-06-20 02:10:45,859:INFO:Importing libraries
2025-06-20 02:10:45,859:INFO:Copying training dataset
2025-06-20 02:10:45,862:INFO:Defining folds
2025-06-20 02:10:45,862:INFO:Declaring metric variables
2025-06-20 02:10:45,868:INFO:Importing untrained model
2025-06-20 02:10:45,873:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:10:45,881:INFO:Starting cross validation
2025-06-20 02:10:45,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:46,323:INFO:Calculating mean and std
2025-06-20 02:10:46,324:INFO:Creating metrics dataframe
2025-06-20 02:10:46,325:INFO:Uploading results into container
2025-06-20 02:10:46,326:INFO:Uploading model into container now
2025-06-20 02:10:46,326:INFO:_master_model_container: 12
2025-06-20 02:10:46,326:INFO:_display_container: 2
2025-06-20 02:10:46,326:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:10:46,327:INFO:create_model() successfully completed......................................
2025-06-20 02:10:46,481:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:46,482:INFO:Creating metrics dataframe
2025-06-20 02:10:46,490:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:10:46,490:INFO:Total runtime is 0.08445305824279785 minutes
2025-06-20 02:10:46,494:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:46,495:INFO:Initializing create_model()
2025-06-20 02:10:46,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:46,495:INFO:Checking exceptions
2025-06-20 02:10:46,495:INFO:Importing libraries
2025-06-20 02:10:46,495:INFO:Copying training dataset
2025-06-20 02:10:46,500:INFO:Defining folds
2025-06-20 02:10:46,501:INFO:Declaring metric variables
2025-06-20 02:10:46,505:INFO:Importing untrained model
2025-06-20 02:10:46,509:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:10:46,517:INFO:Starting cross validation
2025-06-20 02:10:46,518:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:46,713:INFO:Calculating mean and std
2025-06-20 02:10:46,714:INFO:Creating metrics dataframe
2025-06-20 02:10:46,715:INFO:Uploading results into container
2025-06-20 02:10:46,716:INFO:Uploading model into container now
2025-06-20 02:10:46,716:INFO:_master_model_container: 13
2025-06-20 02:10:46,716:INFO:_display_container: 2
2025-06-20 02:10:46,716:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:10:46,716:INFO:create_model() successfully completed......................................
2025-06-20 02:10:46,868:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:46,868:INFO:Creating metrics dataframe
2025-06-20 02:10:46,876:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:10:46,876:INFO:Total runtime is 0.09088780085245768 minutes
2025-06-20 02:10:46,881:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:46,881:INFO:Initializing create_model()
2025-06-20 02:10:46,881:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:46,881:INFO:Checking exceptions
2025-06-20 02:10:46,881:INFO:Importing libraries
2025-06-20 02:10:46,881:INFO:Copying training dataset
2025-06-20 02:10:46,884:INFO:Defining folds
2025-06-20 02:10:46,885:INFO:Declaring metric variables
2025-06-20 02:10:46,888:INFO:Importing untrained model
2025-06-20 02:10:46,893:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:10:46,901:INFO:Starting cross validation
2025-06-20 02:10:46,902:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:48,551:INFO:Calculating mean and std
2025-06-20 02:10:48,552:INFO:Creating metrics dataframe
2025-06-20 02:10:48,554:INFO:Uploading results into container
2025-06-20 02:10:48,554:INFO:Uploading model into container now
2025-06-20 02:10:48,555:INFO:_master_model_container: 14
2025-06-20 02:10:48,555:INFO:_display_container: 2
2025-06-20 02:10:48,556:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:10:48,556:INFO:create_model() successfully completed......................................
2025-06-20 02:10:48,714:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:48,714:INFO:Creating metrics dataframe
2025-06-20 02:10:48,723:INFO:Initializing CatBoost Classifier
2025-06-20 02:10:48,723:INFO:Total runtime is 0.12168379624684651 minutes
2025-06-20 02:10:48,727:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:48,727:INFO:Initializing create_model()
2025-06-20 02:10:48,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:48,728:INFO:Checking exceptions
2025-06-20 02:10:48,728:INFO:Importing libraries
2025-06-20 02:10:48,728:INFO:Copying training dataset
2025-06-20 02:10:48,731:INFO:Defining folds
2025-06-20 02:10:48,732:INFO:Declaring metric variables
2025-06-20 02:10:48,737:INFO:Importing untrained model
2025-06-20 02:10:48,741:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:10:48,751:INFO:Starting cross validation
2025-06-20 02:10:48,752:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:53,311:INFO:Calculating mean and std
2025-06-20 02:10:53,312:INFO:Creating metrics dataframe
2025-06-20 02:10:53,315:INFO:Uploading results into container
2025-06-20 02:10:53,316:INFO:Uploading model into container now
2025-06-20 02:10:53,317:INFO:_master_model_container: 15
2025-06-20 02:10:53,317:INFO:_display_container: 2
2025-06-20 02:10:53,317:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A86672370>
2025-06-20 02:10:53,317:INFO:create_model() successfully completed......................................
2025-06-20 02:10:53,475:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:53,475:INFO:Creating metrics dataframe
2025-06-20 02:10:53,483:INFO:Initializing Dummy Classifier
2025-06-20 02:10:53,483:INFO:Total runtime is 0.20101709763209025 minutes
2025-06-20 02:10:53,489:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:53,490:INFO:Initializing create_model()
2025-06-20 02:10:53,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A85AD1400>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:53,490:INFO:Checking exceptions
2025-06-20 02:10:53,490:INFO:Importing libraries
2025-06-20 02:10:53,490:INFO:Copying training dataset
2025-06-20 02:10:53,494:INFO:Defining folds
2025-06-20 02:10:53,495:INFO:Declaring metric variables
2025-06-20 02:10:53,502:INFO:Importing untrained model
2025-06-20 02:10:53,509:INFO:Dummy Classifier Imported successfully
2025-06-20 02:10:53,526:INFO:Starting cross validation
2025-06-20 02:10:53,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:53,624:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,631:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,639:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,642:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,649:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,650:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,655:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,658:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-20 02:10:53,668:INFO:Calculating mean and std
2025-06-20 02:10:53,669:INFO:Creating metrics dataframe
2025-06-20 02:10:53,671:INFO:Uploading results into container
2025-06-20 02:10:53,671:INFO:Uploading model into container now
2025-06-20 02:10:53,671:INFO:_master_model_container: 16
2025-06-20 02:10:53,671:INFO:_display_container: 2
2025-06-20 02:10:53,672:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-06-20 02:10:53,672:INFO:create_model() successfully completed......................................
2025-06-20 02:10:53,825:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:53,825:INFO:Creating metrics dataframe
2025-06-20 02:10:53,834:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:10:53,843:INFO:Initializing create_model()
2025-06-20 02:10:53,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:53,843:INFO:Checking exceptions
2025-06-20 02:10:53,844:INFO:Importing libraries
2025-06-20 02:10:53,844:INFO:Copying training dataset
2025-06-20 02:10:53,846:INFO:Defining folds
2025-06-20 02:10:53,847:INFO:Declaring metric variables
2025-06-20 02:10:53,847:INFO:Importing untrained model
2025-06-20 02:10:53,847:INFO:Declaring custom model
2025-06-20 02:10:53,847:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:10:53,848:INFO:Cross validation set to False
2025-06-20 02:10:53,848:INFO:Fitting Model
2025-06-20 02:10:53,884:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:53,884:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:10:53,885:INFO:create_model() successfully completed......................................
2025-06-20 02:10:54,059:INFO:_master_model_container: 16
2025-06-20 02:10:54,059:INFO:_display_container: 2
2025-06-20 02:10:54,059:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:10:54,059:INFO:compare_models() successfully completed......................................
2025-06-20 02:10:54,059:INFO:Initializing tune_model()
2025-06-20 02:10:54,059:INFO:tune_model(estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>)
2025-06-20 02:10:54,059:INFO:Checking exceptions
2025-06-20 02:10:54,072:INFO:Copying training dataset
2025-06-20 02:10:54,075:INFO:Checking base model
2025-06-20 02:10:54,075:INFO:Base model : Quadratic Discriminant Analysis
2025-06-20 02:10:54,079:INFO:Declaring metric variables
2025-06-20 02:10:54,084:INFO:Defining Hyperparameters
2025-06-20 02:10:54,244:INFO:Tuning with n_jobs=-1
2025-06-20 02:10:54,245:INFO:Initializing RandomizedSearchCV
2025-06-20 02:10:54,317:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,326:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,327:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,335:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,338:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,347:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,348:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,349:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,352:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,359:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,381:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,427:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,435:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,437:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,449:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,451:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,456:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,457:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,458:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,459:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,488:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,507:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,515:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,528:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,542:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,546:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,565:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,568:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,576:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,579:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,584:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,587:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,597:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,618:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,627:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,632:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,637:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,650:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,654:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,656:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,662:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,665:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,670:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,673:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,676:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,677:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,711:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,717:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,726:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,744:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,746:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,755:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,756:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,760:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,760:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,766:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,771:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,773:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,786:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,796:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,806:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,818:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,827:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,836:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,858:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,862:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,863:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,888:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,892:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,895:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,920:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,938:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,940:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,942:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,951:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,953:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,954:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,961:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,967:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,969:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:54,987:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,013:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,016:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,018:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,035:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,058:INFO:best_params: {'actual_estimator__reg_param': 0.82}
2025-06-20 02:10:55,058:INFO:Hyperparameter search completed
2025-06-20 02:10:55,058:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:55,058:INFO:Initializing create_model()
2025-06-20 02:10:55,058:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8627FF40>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'reg_param': 0.82})
2025-06-20 02:10:55,058:INFO:Checking exceptions
2025-06-20 02:10:55,058:INFO:Importing libraries
2025-06-20 02:10:55,058:INFO:Copying training dataset
2025-06-20 02:10:55,061:INFO:Defining folds
2025-06-20 02:10:55,061:INFO:Declaring metric variables
2025-06-20 02:10:55,065:INFO:Importing untrained model
2025-06-20 02:10:55,065:INFO:Declaring custom model
2025-06-20 02:10:55,069:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:10:55,078:INFO:Starting cross validation
2025-06-20 02:10:55,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:55,127:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,133:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,138:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,139:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,148:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,154:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,156:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,167:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,213:INFO:Calculating mean and std
2025-06-20 02:10:55,214:INFO:Creating metrics dataframe
2025-06-20 02:10:55,221:INFO:Finalizing model
2025-06-20 02:10:55,251:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,254:INFO:Uploading results into container
2025-06-20 02:10:55,255:INFO:Uploading model into container now
2025-06-20 02:10:55,255:INFO:_master_model_container: 17
2025-06-20 02:10:55,255:INFO:_display_container: 3
2025-06-20 02:10:55,256:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.82,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:10:55,256:INFO:create_model() successfully completed......................................
2025-06-20 02:10:55,406:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:55,407:INFO:choose_better activated
2025-06-20 02:10:55,412:INFO:SubProcess create_model() called ==================================
2025-06-20 02:10:55,413:INFO:Initializing create_model()
2025-06-20 02:10:55,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:55,413:INFO:Checking exceptions
2025-06-20 02:10:55,414:INFO:Importing libraries
2025-06-20 02:10:55,414:INFO:Copying training dataset
2025-06-20 02:10:55,417:INFO:Defining folds
2025-06-20 02:10:55,417:INFO:Declaring metric variables
2025-06-20 02:10:55,417:INFO:Importing untrained model
2025-06-20 02:10:55,417:INFO:Declaring custom model
2025-06-20 02:10:55,417:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-20 02:10:55,417:INFO:Starting cross validation
2025-06-20 02:10:55,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:10:55,467:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,473:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,478:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,481:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,485:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,498:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,504:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,505:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,542:INFO:Calculating mean and std
2025-06-20 02:10:55,542:INFO:Creating metrics dataframe
2025-06-20 02:10:55,543:INFO:Finalizing model
2025-06-20 02:10:55,574:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-20 02:10:55,575:INFO:Uploading results into container
2025-06-20 02:10:55,575:INFO:Uploading model into container now
2025-06-20 02:10:55,575:INFO:_master_model_container: 18
2025-06-20 02:10:55,576:INFO:_display_container: 4
2025-06-20 02:10:55,576:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:10:55,576:INFO:create_model() successfully completed......................................
2025-06-20 02:10:55,757:INFO:SubProcess create_model() end ==================================
2025-06-20 02:10:55,757:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) result for Accuracy is 0.9388
2025-06-20 02:10:55,757:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.82,
                              store_covariance=False, tol=0.0001) result for Accuracy is 0.9388
2025-06-20 02:10:55,757:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) is best model
2025-06-20 02:10:55,758:INFO:choose_better completed
2025-06-20 02:10:55,758:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-20 02:10:55,765:INFO:_master_model_container: 18
2025-06-20 02:10:55,765:INFO:_display_container: 3
2025-06-20 02:10:55,765:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-20 02:10:55,766:INFO:tune_model() successfully completed......................................
2025-06-20 02:10:55,918:INFO:Initializing create_model()
2025-06-20 02:10:55,918:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:10:55,918:INFO:Checking exceptions
2025-06-20 02:10:55,931:INFO:Importing libraries
2025-06-20 02:10:55,931:INFO:Copying training dataset
2025-06-20 02:10:55,934:INFO:Defining folds
2025-06-20 02:10:55,934:INFO:Declaring metric variables
2025-06-20 02:10:55,938:INFO:Importing untrained model
2025-06-20 02:10:55,942:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:10:55,955:INFO:Starting cross validation
2025-06-20 02:10:55,958:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:11:00,222:INFO:Calculating mean and std
2025-06-20 02:11:00,223:INFO:Creating metrics dataframe
2025-06-20 02:11:00,229:INFO:Finalizing model
2025-06-20 02:11:02,168:INFO:Uploading results into container
2025-06-20 02:11:02,168:INFO:Uploading model into container now
2025-06-20 02:11:02,175:INFO:_master_model_container: 19
2025-06-20 02:11:02,175:INFO:_display_container: 4
2025-06-20 02:11:02,175:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A85E63910>
2025-06-20 02:11:02,175:INFO:create_model() successfully completed......................................
2025-06-20 02:11:02,320:INFO:Initializing finalize_model()
2025-06-20 02:11:02,321:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A85E63910>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-20 02:11:02,321:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x0000024A85E63910>
2025-06-20 02:11:02,322:INFO:Initializing create_model()
2025-06-20 02:11:02,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A85E63910>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:11:02,323:INFO:Checking exceptions
2025-06-20 02:11:02,324:INFO:Importing libraries
2025-06-20 02:11:02,324:INFO:Copying training dataset
2025-06-20 02:11:02,324:INFO:Defining folds
2025-06-20 02:11:02,325:INFO:Declaring metric variables
2025-06-20 02:11:02,325:INFO:Importing untrained model
2025-06-20 02:11:02,325:INFO:Declaring custom model
2025-06-20 02:11:02,325:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:11:02,326:INFO:Cross validation set to False
2025-06-20 02:11:02,326:INFO:Fitting Model
2025-06-20 02:11:04,264:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A8611B850>)],
         verbose=False)
2025-06-20 02:11:04,264:INFO:create_model() successfully completed......................................
2025-06-20 02:11:04,414:INFO:_master_model_container: 19
2025-06-20 02:11:04,414:INFO:_display_container: 4
2025-06-20 02:11:04,419:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A8611B850>)],
         verbose=False)
2025-06-20 02:11:04,419:INFO:finalize_model() successfully completed......................................
2025-06-20 02:11:04,579:INFO:Initializing save_model()
2025-06-20 02:11:04,579:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A8611B850>)],
         verbose=False), model_name=personality_classifier_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-20 02:11:04,579:INFO:Adding model into prep_pipe
2025-06-20 02:11:04,579:WARNING:Only Model saved as it was a pipeline.
2025-06-20 02:11:04,584:INFO:personality_classifier_model.pkl saved in current working directory
2025-06-20 02:11:04,588:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A8611B850>)],
         verbose=False)
2025-06-20 02:11:04,588:INFO:save_model() successfully completed......................................
2025-06-20 02:11:04,746:INFO:Initializing predict_model()
2025-06-20 02:11:04,746:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A860B02B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A8611B850>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024A86506AF0>)
2025-06-20 02:11:04,746:INFO:Checking exceptions
2025-06-20 02:11:04,746:INFO:Preloading libraries
2025-06-20 02:11:58,656:INFO:PyCaret ClassificationExperiment
2025-06-20 02:11:58,657:INFO:Logging name: clf-default-name
2025-06-20 02:11:58,657:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-20 02:11:58,657:INFO:version 3.3.2
2025-06-20 02:11:58,657:INFO:Initializing setup()
2025-06-20 02:11:58,657:INFO:self.USI: 56b6
2025-06-20 02:11:58,657:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'fix_imbalance', 'n_jobs_param', 'X_train', 'y', 'USI', 'exp_id', 'seed', 'gpu_n_jobs_param', 'fold_generator', 'X', 'gpu_param', 'target_param', 'idx', 'fold_groups_param', 'data', 'X_test', '_available_plots', 'is_multiclass', '_ml_usecase', 'exp_name_log', 'pipeline', 'logging_param', 'y_train', 'html_param', 'log_plots_param', 'memory'}
2025-06-20 02:11:58,657:INFO:Checking environment
2025-06-20 02:11:58,657:INFO:python_version: 3.9.21
2025-06-20 02:11:58,657:INFO:python_build: ('main', 'Dec 11 2024 16:35:24')
2025-06-20 02:11:58,658:INFO:machine: AMD64
2025-06-20 02:11:58,658:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-20 02:11:58,658:INFO:Memory: svmem(total=25372119040, available=2860630016, percent=88.7, used=22511489024, free=2860630016)
2025-06-20 02:11:58,658:INFO:Physical Core: 10
2025-06-20 02:11:58,660:INFO:Logical Core: 16
2025-06-20 02:11:58,660:INFO:Checking libraries
2025-06-20 02:11:58,660:INFO:System:
2025-06-20 02:11:58,660:INFO:    python: 3.9.21 (main, Dec 11 2024, 16:35:24) [MSC v.1929 64 bit (AMD64)]
2025-06-20 02:11:58,660:INFO:executable: c:\Users\Asus\anaconda3\envs\RUL\python.exe
2025-06-20 02:11:58,660:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-20 02:11:58,660:INFO:PyCaret required dependencies:
2025-06-20 02:11:58,660:INFO:                 pip: 24.2
2025-06-20 02:11:58,660:INFO:          setuptools: 75.1.0
2025-06-20 02:11:58,660:INFO:             pycaret: 3.3.2
2025-06-20 02:11:58,661:INFO:             IPython: 8.12.0
2025-06-20 02:11:58,661:INFO:          ipywidgets: 8.1.5
2025-06-20 02:11:58,661:INFO:                tqdm: 4.67.1
2025-06-20 02:11:58,661:INFO:               numpy: 1.26.4
2025-06-20 02:11:58,661:INFO:              pandas: 2.1.4
2025-06-20 02:11:58,661:INFO:              jinja2: 3.1.5
2025-06-20 02:11:58,661:INFO:               scipy: 1.11.4
2025-06-20 02:11:58,661:INFO:              joblib: 1.3.2
2025-06-20 02:11:58,661:INFO:             sklearn: 1.4.2
2025-06-20 02:11:58,661:INFO:                pyod: 2.0.3
2025-06-20 02:11:58,661:INFO:            imblearn: 0.12.4
2025-06-20 02:11:58,661:INFO:   category_encoders: 2.6.4
2025-06-20 02:11:58,661:INFO:            lightgbm: 4.6.0
2025-06-20 02:11:58,661:INFO:               numba: 0.60.0
2025-06-20 02:11:58,661:INFO:            requests: 2.32.3
2025-06-20 02:11:58,661:INFO:          matplotlib: 3.7.5
2025-06-20 02:11:58,661:INFO:          scikitplot: 0.3.7
2025-06-20 02:11:58,661:INFO:         yellowbrick: 1.5
2025-06-20 02:11:58,661:INFO:              plotly: 5.24.1
2025-06-20 02:11:58,661:INFO:    plotly-resampler: Not installed
2025-06-20 02:11:58,661:INFO:             kaleido: 0.2.1
2025-06-20 02:11:58,661:INFO:           schemdraw: 0.15
2025-06-20 02:11:58,662:INFO:         statsmodels: 0.14.4
2025-06-20 02:11:58,662:INFO:              sktime: 0.26.0
2025-06-20 02:11:58,665:INFO:               tbats: 1.1.3
2025-06-20 02:11:58,665:INFO:            pmdarima: 2.0.4
2025-06-20 02:11:58,665:INFO:              psutil: 5.9.0
2025-06-20 02:11:58,665:INFO:          markupsafe: 2.1.5
2025-06-20 02:11:58,665:INFO:             pickle5: Not installed
2025-06-20 02:11:58,665:INFO:         cloudpickle: 2.2.1
2025-06-20 02:11:58,665:INFO:         deprecation: 2.1.0
2025-06-20 02:11:58,665:INFO:              xxhash: 3.5.0
2025-06-20 02:11:58,665:INFO:           wurlitzer: Not installed
2025-06-20 02:11:58,665:INFO:PyCaret optional dependencies:
2025-06-20 02:11:58,665:INFO:                shap: 0.44.1
2025-06-20 02:11:58,666:INFO:           interpret: 0.6.10
2025-06-20 02:11:58,666:INFO:                umap: 0.5.7
2025-06-20 02:11:58,666:INFO:     ydata_profiling: 4.16.1
2025-06-20 02:11:58,666:INFO:  explainerdashboard: 0.4.8
2025-06-20 02:11:58,666:INFO:             autoviz: Not installed
2025-06-20 02:11:58,666:INFO:           fairlearn: 0.7.0
2025-06-20 02:11:58,666:INFO:          deepchecks: Not installed
2025-06-20 02:11:58,666:INFO:             xgboost: 2.1.4
2025-06-20 02:11:58,666:INFO:            catboost: 1.2.8
2025-06-20 02:11:58,666:INFO:              kmodes: 0.12.2
2025-06-20 02:11:58,666:INFO:             mlxtend: 0.23.4
2025-06-20 02:11:58,666:INFO:       statsforecast: 1.5.0
2025-06-20 02:11:58,666:INFO:        tune_sklearn: Not installed
2025-06-20 02:11:58,666:INFO:                 ray: Not installed
2025-06-20 02:11:58,666:INFO:            hyperopt: 0.2.7
2025-06-20 02:11:58,666:INFO:              optuna: 4.3.0
2025-06-20 02:11:58,666:INFO:               skopt: 0.10.2
2025-06-20 02:11:58,666:INFO:              mlflow: 2.22.0
2025-06-20 02:11:58,667:INFO:              gradio: Not installed
2025-06-20 02:11:58,667:INFO:             fastapi: 0.115.7
2025-06-20 02:11:58,667:INFO:             uvicorn: 0.34.0
2025-06-20 02:11:58,667:INFO:              m2cgen: 0.10.0
2025-06-20 02:11:58,667:INFO:           evidently: 0.4.40
2025-06-20 02:11:58,667:INFO:               fugue: 0.8.7
2025-06-20 02:11:58,667:INFO:           streamlit: Not installed
2025-06-20 02:11:58,667:INFO:             prophet: 1.1.6
2025-06-20 02:11:58,667:INFO:None
2025-06-20 02:11:58,667:INFO:Set up data.
2025-06-20 02:11:58,674:INFO:Set up folding strategy.
2025-06-20 02:11:58,676:INFO:Set up train/test split.
2025-06-20 02:11:58,687:INFO:Set up index.
2025-06-20 02:11:58,688:INFO:Assigning column types.
2025-06-20 02:11:58,719:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-20 02:11:58,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:11:58,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:11:58,989:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:11:59,002:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:11:59,120:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-20 02:11:59,123:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:11:59,196:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:11:59,201:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:11:59,203:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-20 02:11:59,305:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:11:59,369:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:11:59,374:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:11:59,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-20 02:11:59,524:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:11:59,528:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:11:59,530:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-20 02:11:59,686:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:11:59,692:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:11:59,900:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:11:59,909:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:11:59,911:INFO:Preparing preprocessing pipeline...
2025-06-20 02:11:59,912:INFO:Set up simple imputation.
2025-06-20 02:11:59,916:INFO:Set up encoding of categorical features.
2025-06-20 02:11:59,916:INFO:Set up feature normalization.
2025-06-20 02:12:00,090:INFO:Finished creating preprocessing pipeline.
2025-06-20 02:12:00,102:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2025-06-20 02:12:00,102:INFO:Creating final display dataframe.
2025-06-20 02:12:00,432:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target       Personality
2                   Target type            Binary
3           Original data shape         (2900, 4)
4        Transformed data shape         (2900, 8)
5   Transformed train set shape         (2320, 8)
6    Transformed test set shape          (580, 8)
7              Numeric features                 1
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15                    Normalize              True
16             Normalize method            zscore
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              56b6
2025-06-20 02:12:00,583:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:12:00,589:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:12:00,740:INFO:Soft dependency imported: xgboost: 2.1.4
2025-06-20 02:12:00,744:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-20 02:12:00,747:INFO:setup() successfully completed in 2.1s...............
2025-06-20 02:12:00,751:INFO:Initializing compare_models()
2025-06-20 02:12:00,751:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, include=['rf', 'et', 'gbc', 'lightgbm', 'xgboost', 'catboost', 'dt'], fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, 'include': ['rf', 'et', 'gbc', 'lightgbm', 'xgboost', 'catboost', 'dt'], 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-20 02:12:00,751:INFO:Checking exceptions
2025-06-20 02:12:00,754:INFO:Preparing display monitor
2025-06-20 02:12:00,811:INFO:Initializing Random Forest Classifier
2025-06-20 02:12:00,811:INFO:Total runtime is 1.665353775024414e-05 minutes
2025-06-20 02:12:00,827:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:00,828:INFO:Initializing create_model()
2025-06-20 02:12:00,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:00,829:INFO:Checking exceptions
2025-06-20 02:12:00,829:INFO:Importing libraries
2025-06-20 02:12:00,829:INFO:Copying training dataset
2025-06-20 02:12:00,839:INFO:Defining folds
2025-06-20 02:12:00,839:INFO:Declaring metric variables
2025-06-20 02:12:00,858:INFO:Importing untrained model
2025-06-20 02:12:00,867:INFO:Random Forest Classifier Imported successfully
2025-06-20 02:12:00,888:INFO:Starting cross validation
2025-06-20 02:12:00,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:02,299:INFO:Calculating mean and std
2025-06-20 02:12:02,300:INFO:Creating metrics dataframe
2025-06-20 02:12:02,302:INFO:Uploading results into container
2025-06-20 02:12:02,302:INFO:Uploading model into container now
2025-06-20 02:12:02,302:INFO:_master_model_container: 1
2025-06-20 02:12:02,302:INFO:_display_container: 2
2025-06-20 02:12:02,303:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-06-20 02:12:02,303:INFO:create_model() successfully completed......................................
2025-06-20 02:12:02,466:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:02,466:INFO:Creating metrics dataframe
2025-06-20 02:12:02,472:INFO:Initializing Extra Trees Classifier
2025-06-20 02:12:02,472:INFO:Total runtime is 0.02769606113433838 minutes
2025-06-20 02:12:02,476:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:02,476:INFO:Initializing create_model()
2025-06-20 02:12:02,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:02,476:INFO:Checking exceptions
2025-06-20 02:12:02,477:INFO:Importing libraries
2025-06-20 02:12:02,477:INFO:Copying training dataset
2025-06-20 02:12:02,480:INFO:Defining folds
2025-06-20 02:12:02,480:INFO:Declaring metric variables
2025-06-20 02:12:02,484:INFO:Importing untrained model
2025-06-20 02:12:02,489:INFO:Extra Trees Classifier Imported successfully
2025-06-20 02:12:02,499:INFO:Starting cross validation
2025-06-20 02:12:02,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:02,902:INFO:Calculating mean and std
2025-06-20 02:12:02,903:INFO:Creating metrics dataframe
2025-06-20 02:12:02,904:INFO:Uploading results into container
2025-06-20 02:12:02,905:INFO:Uploading model into container now
2025-06-20 02:12:02,906:INFO:_master_model_container: 2
2025-06-20 02:12:02,906:INFO:_display_container: 2
2025-06-20 02:12:02,907:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-06-20 02:12:02,907:INFO:create_model() successfully completed......................................
2025-06-20 02:12:03,072:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:03,072:INFO:Creating metrics dataframe
2025-06-20 02:12:03,079:INFO:Initializing Gradient Boosting Classifier
2025-06-20 02:12:03,079:INFO:Total runtime is 0.03780521949132284 minutes
2025-06-20 02:12:03,083:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:03,083:INFO:Initializing create_model()
2025-06-20 02:12:03,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:03,083:INFO:Checking exceptions
2025-06-20 02:12:03,083:INFO:Importing libraries
2025-06-20 02:12:03,083:INFO:Copying training dataset
2025-06-20 02:12:03,086:INFO:Defining folds
2025-06-20 02:12:03,086:INFO:Declaring metric variables
2025-06-20 02:12:03,091:INFO:Importing untrained model
2025-06-20 02:12:03,095:INFO:Gradient Boosting Classifier Imported successfully
2025-06-20 02:12:03,107:INFO:Starting cross validation
2025-06-20 02:12:03,110:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:03,497:INFO:Calculating mean and std
2025-06-20 02:12:03,498:INFO:Creating metrics dataframe
2025-06-20 02:12:03,499:INFO:Uploading results into container
2025-06-20 02:12:03,500:INFO:Uploading model into container now
2025-06-20 02:12:03,500:INFO:_master_model_container: 3
2025-06-20 02:12:03,501:INFO:_display_container: 2
2025-06-20 02:12:03,501:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-20 02:12:03,501:INFO:create_model() successfully completed......................................
2025-06-20 02:12:03,663:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:03,663:INFO:Creating metrics dataframe
2025-06-20 02:12:03,669:INFO:Initializing Light Gradient Boosting Machine
2025-06-20 02:12:03,669:INFO:Total runtime is 0.047640065352121994 minutes
2025-06-20 02:12:03,674:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:03,674:INFO:Initializing create_model()
2025-06-20 02:12:03,674:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:03,674:INFO:Checking exceptions
2025-06-20 02:12:03,674:INFO:Importing libraries
2025-06-20 02:12:03,674:INFO:Copying training dataset
2025-06-20 02:12:03,677:INFO:Defining folds
2025-06-20 02:12:03,677:INFO:Declaring metric variables
2025-06-20 02:12:03,681:INFO:Importing untrained model
2025-06-20 02:12:03,687:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-20 02:12:03,696:INFO:Starting cross validation
2025-06-20 02:12:03,698:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:06,491:INFO:Calculating mean and std
2025-06-20 02:12:06,492:INFO:Creating metrics dataframe
2025-06-20 02:12:06,494:INFO:Uploading results into container
2025-06-20 02:12:06,495:INFO:Uploading model into container now
2025-06-20 02:12:06,495:INFO:_master_model_container: 4
2025-06-20 02:12:06,495:INFO:_display_container: 2
2025-06-20 02:12:06,496:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-20 02:12:06,496:INFO:create_model() successfully completed......................................
2025-06-20 02:12:06,661:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:06,661:INFO:Creating metrics dataframe
2025-06-20 02:12:06,667:INFO:Initializing Extreme Gradient Boosting
2025-06-20 02:12:06,668:INFO:Total runtime is 0.09762393236160279 minutes
2025-06-20 02:12:06,672:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:06,673:INFO:Initializing create_model()
2025-06-20 02:12:06,673:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:06,673:INFO:Checking exceptions
2025-06-20 02:12:06,673:INFO:Importing libraries
2025-06-20 02:12:06,673:INFO:Copying training dataset
2025-06-20 02:12:06,677:INFO:Defining folds
2025-06-20 02:12:06,678:INFO:Declaring metric variables
2025-06-20 02:12:06,686:INFO:Importing untrained model
2025-06-20 02:12:06,693:INFO:Extreme Gradient Boosting Imported successfully
2025-06-20 02:12:06,705:INFO:Starting cross validation
2025-06-20 02:12:06,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:06,895:INFO:Calculating mean and std
2025-06-20 02:12:06,896:INFO:Creating metrics dataframe
2025-06-20 02:12:06,898:INFO:Uploading results into container
2025-06-20 02:12:06,899:INFO:Uploading model into container now
2025-06-20 02:12:06,899:INFO:_master_model_container: 5
2025-06-20 02:12:06,899:INFO:_display_container: 2
2025-06-20 02:12:06,900:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-06-20 02:12:06,900:INFO:create_model() successfully completed......................................
2025-06-20 02:12:07,055:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:07,055:INFO:Creating metrics dataframe
2025-06-20 02:12:07,061:INFO:Initializing CatBoost Classifier
2025-06-20 02:12:07,061:INFO:Total runtime is 0.10417506297429403 minutes
2025-06-20 02:12:07,066:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:07,066:INFO:Initializing create_model()
2025-06-20 02:12:07,066:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:07,066:INFO:Checking exceptions
2025-06-20 02:12:07,066:INFO:Importing libraries
2025-06-20 02:12:07,066:INFO:Copying training dataset
2025-06-20 02:12:07,069:INFO:Defining folds
2025-06-20 02:12:07,069:INFO:Declaring metric variables
2025-06-20 02:12:07,075:INFO:Importing untrained model
2025-06-20 02:12:07,079:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:12:07,087:INFO:Starting cross validation
2025-06-20 02:12:07,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:11,398:INFO:Calculating mean and std
2025-06-20 02:12:11,399:INFO:Creating metrics dataframe
2025-06-20 02:12:11,401:INFO:Uploading results into container
2025-06-20 02:12:11,401:INFO:Uploading model into container now
2025-06-20 02:12:11,401:INFO:_master_model_container: 6
2025-06-20 02:12:11,401:INFO:_display_container: 2
2025-06-20 02:12:11,401:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A868F6F40>
2025-06-20 02:12:11,401:INFO:create_model() successfully completed......................................
2025-06-20 02:12:11,556:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:11,558:INFO:Creating metrics dataframe
2025-06-20 02:12:11,563:INFO:Initializing Decision Tree Classifier
2025-06-20 02:12:11,564:INFO:Total runtime is 0.17922362486521404 minutes
2025-06-20 02:12:11,567:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:11,568:INFO:Initializing create_model()
2025-06-20 02:12:11,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A8587F3A0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:11,568:INFO:Checking exceptions
2025-06-20 02:12:11,568:INFO:Importing libraries
2025-06-20 02:12:11,568:INFO:Copying training dataset
2025-06-20 02:12:11,570:INFO:Defining folds
2025-06-20 02:12:11,571:INFO:Declaring metric variables
2025-06-20 02:12:11,575:INFO:Importing untrained model
2025-06-20 02:12:11,580:INFO:Decision Tree Classifier Imported successfully
2025-06-20 02:12:11,588:INFO:Starting cross validation
2025-06-20 02:12:11,589:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:11,724:INFO:Calculating mean and std
2025-06-20 02:12:11,725:INFO:Creating metrics dataframe
2025-06-20 02:12:11,727:INFO:Uploading results into container
2025-06-20 02:12:11,727:INFO:Uploading model into container now
2025-06-20 02:12:11,727:INFO:_master_model_container: 7
2025-06-20 02:12:11,728:INFO:_display_container: 2
2025-06-20 02:12:11,728:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-06-20 02:12:11,728:INFO:create_model() successfully completed......................................
2025-06-20 02:12:11,880:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:11,880:INFO:Creating metrics dataframe
2025-06-20 02:12:11,887:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-06-20 02:12:11,897:INFO:Initializing create_model()
2025-06-20 02:12:11,897:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A868F6F40>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:11,897:INFO:Checking exceptions
2025-06-20 02:12:11,900:INFO:Importing libraries
2025-06-20 02:12:11,900:INFO:Copying training dataset
2025-06-20 02:12:11,902:INFO:Defining folds
2025-06-20 02:12:11,902:INFO:Declaring metric variables
2025-06-20 02:12:11,902:INFO:Importing untrained model
2025-06-20 02:12:11,902:INFO:Declaring custom model
2025-06-20 02:12:11,902:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:12:11,903:INFO:Cross validation set to False
2025-06-20 02:12:11,903:INFO:Fitting Model
2025-06-20 02:12:13,630:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A86C16A00>
2025-06-20 02:12:13,630:INFO:create_model() successfully completed......................................
2025-06-20 02:12:13,796:INFO:_master_model_container: 7
2025-06-20 02:12:13,796:INFO:_display_container: 2
2025-06-20 02:12:13,797:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A86C16A00>
2025-06-20 02:12:13,797:INFO:compare_models() successfully completed......................................
2025-06-20 02:12:13,797:INFO:Initializing tune_model()
2025-06-20 02:12:13,797:INFO:tune_model(estimator=<catboost.core.CatBoostClassifier object at 0x0000024A86C16A00>, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>)
2025-06-20 02:12:13,797:INFO:Checking exceptions
2025-06-20 02:12:13,810:INFO:Copying training dataset
2025-06-20 02:12:13,812:INFO:Checking base model
2025-06-20 02:12:13,813:INFO:Base model : CatBoost Classifier
2025-06-20 02:12:13,818:INFO:Declaring metric variables
2025-06-20 02:12:13,825:INFO:Defining Hyperparameters
2025-06-20 02:12:13,993:INFO:Tuning with n_jobs=-1
2025-06-20 02:12:13,994:INFO:Initializing RandomizedSearchCV
2025-06-20 02:12:20,101:INFO:best_params: {'actual_estimator__random_strength': 0.8, 'actual_estimator__n_estimators': 210, 'actual_estimator__l2_leaf_reg': 2, 'actual_estimator__eta': 0.0001, 'actual_estimator__depth': 3}
2025-06-20 02:12:20,102:INFO:Hyperparameter search completed
2025-06-20 02:12:20,102:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:20,102:INFO:Initializing create_model()
2025-06-20 02:12:20,102:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A86685D60>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024A867CB4F0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'random_strength': 0.8, 'n_estimators': 210, 'l2_leaf_reg': 2, 'eta': 0.0001, 'depth': 3})
2025-06-20 02:12:20,102:INFO:Checking exceptions
2025-06-20 02:12:20,102:INFO:Importing libraries
2025-06-20 02:12:20,102:INFO:Copying training dataset
2025-06-20 02:12:20,106:INFO:Defining folds
2025-06-20 02:12:20,106:INFO:Declaring metric variables
2025-06-20 02:12:20,110:INFO:Importing untrained model
2025-06-20 02:12:20,111:INFO:Declaring custom model
2025-06-20 02:12:20,115:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:12:20,124:INFO:Starting cross validation
2025-06-20 02:12:20,126:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:21,030:INFO:Calculating mean and std
2025-06-20 02:12:21,031:INFO:Creating metrics dataframe
2025-06-20 02:12:21,037:INFO:Finalizing model
2025-06-20 02:12:21,346:INFO:Uploading results into container
2025-06-20 02:12:21,346:INFO:Uploading model into container now
2025-06-20 02:12:21,347:INFO:_master_model_container: 8
2025-06-20 02:12:21,347:INFO:_display_container: 3
2025-06-20 02:12:21,347:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A86C16D60>
2025-06-20 02:12:21,347:INFO:create_model() successfully completed......................................
2025-06-20 02:12:21,499:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:21,500:INFO:choose_better activated
2025-06-20 02:12:21,504:INFO:SubProcess create_model() called ==================================
2025-06-20 02:12:21,505:INFO:Initializing create_model()
2025-06-20 02:12:21,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A86C16A00>, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:21,505:INFO:Checking exceptions
2025-06-20 02:12:21,506:INFO:Importing libraries
2025-06-20 02:12:21,506:INFO:Copying training dataset
2025-06-20 02:12:21,509:INFO:Defining folds
2025-06-20 02:12:21,509:INFO:Declaring metric variables
2025-06-20 02:12:21,509:INFO:Importing untrained model
2025-06-20 02:12:21,509:INFO:Declaring custom model
2025-06-20 02:12:21,509:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:12:21,510:INFO:Starting cross validation
2025-06-20 02:12:21,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:25,727:INFO:Calculating mean and std
2025-06-20 02:12:25,727:INFO:Creating metrics dataframe
2025-06-20 02:12:25,729:INFO:Finalizing model
2025-06-20 02:12:27,709:INFO:Uploading results into container
2025-06-20 02:12:27,709:INFO:Uploading model into container now
2025-06-20 02:12:27,710:INFO:_master_model_container: 9
2025-06-20 02:12:27,710:INFO:_display_container: 4
2025-06-20 02:12:27,710:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A8621B790>
2025-06-20 02:12:27,710:INFO:create_model() successfully completed......................................
2025-06-20 02:12:27,866:INFO:SubProcess create_model() end ==================================
2025-06-20 02:12:27,867:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A8621B790> result for Accuracy is 0.9388
2025-06-20 02:12:27,867:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A86C16D60> result for Accuracy is 0.9388
2025-06-20 02:12:27,867:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A8621B790> is best model
2025-06-20 02:12:27,867:INFO:choose_better completed
2025-06-20 02:12:27,867:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-06-20 02:12:27,878:INFO:_master_model_container: 9
2025-06-20 02:12:27,878:INFO:_display_container: 3
2025-06-20 02:12:27,878:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A8621B790>
2025-06-20 02:12:27,878:INFO:tune_model() successfully completed......................................
2025-06-20 02:12:28,034:INFO:Initializing create_model()
2025-06-20 02:12:28,034:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=catboost, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:28,034:INFO:Checking exceptions
2025-06-20 02:12:28,046:INFO:Importing libraries
2025-06-20 02:12:28,047:INFO:Copying training dataset
2025-06-20 02:12:28,049:INFO:Defining folds
2025-06-20 02:12:28,050:INFO:Declaring metric variables
2025-06-20 02:12:28,055:INFO:Importing untrained model
2025-06-20 02:12:28,063:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:12:28,077:INFO:Starting cross validation
2025-06-20 02:12:28,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-20 02:12:33,029:INFO:Calculating mean and std
2025-06-20 02:12:33,030:INFO:Creating metrics dataframe
2025-06-20 02:12:33,036:INFO:Finalizing model
2025-06-20 02:12:35,115:INFO:Uploading results into container
2025-06-20 02:12:35,116:INFO:Uploading model into container now
2025-06-20 02:12:35,124:INFO:_master_model_container: 10
2025-06-20 02:12:35,124:INFO:_display_container: 4
2025-06-20 02:12:35,124:INFO:<catboost.core.CatBoostClassifier object at 0x0000024A867C0D00>
2025-06-20 02:12:35,124:INFO:create_model() successfully completed......................................
2025-06-20 02:12:35,272:INFO:Initializing finalize_model()
2025-06-20 02:12:35,272:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A867C0D00>, fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-06-20 02:12:35,272:INFO:Finalizing <catboost.core.CatBoostClassifier object at 0x0000024A867C0D00>
2025-06-20 02:12:35,274:INFO:Initializing create_model()
2025-06-20 02:12:35,274:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=<catboost.core.CatBoostClassifier object at 0x0000024A867C0D00>, fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-06-20 02:12:35,274:INFO:Checking exceptions
2025-06-20 02:12:35,276:INFO:Importing libraries
2025-06-20 02:12:35,276:INFO:Copying training dataset
2025-06-20 02:12:35,276:INFO:Defining folds
2025-06-20 02:12:35,276:INFO:Declaring metric variables
2025-06-20 02:12:35,276:INFO:Importing untrained model
2025-06-20 02:12:35,276:INFO:Declaring custom model
2025-06-20 02:12:35,276:INFO:CatBoost Classifier Imported successfully
2025-06-20 02:12:35,277:INFO:Cross validation set to False
2025-06-20 02:12:35,277:INFO:Fitting Model
2025-06-20 02:12:37,231:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A86C16D90>)],
         verbose=False)
2025-06-20 02:12:37,231:INFO:create_model() successfully completed......................................
2025-06-20 02:12:37,382:INFO:_master_model_container: 10
2025-06-20 02:12:37,382:INFO:_display_container: 4
2025-06-20 02:12:37,388:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A86C16D90>)],
         verbose=False)
2025-06-20 02:12:37,388:INFO:finalize_model() successfully completed......................................
2025-06-20 02:12:37,552:INFO:Initializing save_model()
2025-06-20 02:12:37,552:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A86C16D90>)],
         verbose=False), model_name=personality_classifier_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\Asus\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclud...
                                             'Drained_after_socializing'],
                                    transformer=OneHotEncoder(cols=['Stage_fear',
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-20 02:12:37,552:INFO:Adding model into prep_pipe
2025-06-20 02:12:37,552:WARNING:Only Model saved as it was a pipeline.
2025-06-20 02:12:37,557:INFO:personality_classifier_model.pkl saved in current working directory
2025-06-20 02:12:37,561:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A86C16D90>)],
         verbose=False)
2025-06-20 02:12:37,561:INFO:save_model() successfully completed......................................
2025-06-20 02:12:37,721:INFO:Initializing predict_model()
2025-06-20 02:12:37,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024A867AC730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Behavioral_Index'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Stage_fear',
                                             'Drained_a...
                                                                    'Drained_after_socializing'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True))),
                ('actual_estimator',
                 <catboost.core.CatBoostClassifier object at 0x0000024A86C16D90>)],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024A86BAE3A0>)
2025-06-20 02:12:37,721:INFO:Checking exceptions
2025-06-20 02:12:37,721:INFO:Preloading libraries
2025-06-20 02:40:34,340:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\impute\_iterative.py:801: ConvergenceWarning: [IterativeImputer] Early stopping criterion not reached.
  warnings.warn(

2025-06-20 02:57:26,246:WARNING:c:\Users\Asus\anaconda3\envs\RUL\lib\site-packages\sklearn\impute\_iterative.py:801: ConvergenceWarning: [IterativeImputer] Early stopping criterion not reached.
  warnings.warn(

